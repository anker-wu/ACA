/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2012-2013
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 197931 2011-06-22 05:56:38Z ACHIEVO\alan.hu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceManagementWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CapTypePermissionPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    public partial class ServiceManagementWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getServiceByServiceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveServicesGroupSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXServiceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteServiceGroupSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllServiceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServices4DeepLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceManagementWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getServiceByServiceNameCompletedEventHandler getServiceByServiceNameCompleted;
        
        /// <remarks/>
        public event saveServicesGroupSettingCompletedEventHandler saveServicesGroupSettingCompleted;
        
        /// <remarks/>
        public event getServicesCompletedEventHandler getServicesCompleted;
        
        /// <remarks/>
        public event getXServiceGroupCompletedEventHandler getXServiceGroupCompleted;
        
        /// <remarks/>
        public event deleteServiceGroupSettingCompletedEventHandler deleteServiceGroupSettingCompleted;
        
        /// <remarks/>
        public event getAllServiceGroupCompletedEventHandler getAllServiceGroupCompleted;
        
        /// <remarks/>
        public event getAllServiceCompletedEventHandler getAllServiceCompleted;
        
        /// <remarks/>
        public event getServices4DeepLinkCompletedEventHandler getServices4DeepLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceModel[] getServiceByServiceName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ServiceModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getServiceByServiceName", new object[] {
                        arg0,
                        arg1});
            return ((ServiceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getServiceByServiceNameAsync(ServiceModel arg0, string arg1) {
            this.getServiceByServiceNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getServiceByServiceNameAsync(ServiceModel arg0, string arg1, object userState) {
            if ((this.getServiceByServiceNameOperationCompleted == null)) {
                this.getServiceByServiceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceByServiceNameOperationCompleted);
            }
            this.InvokeAsync("getServiceByServiceName", new object[] {
                        arg0,
                        arg1}, this.getServiceByServiceNameOperationCompleted, userState);
        }
        
        private void OngetServiceByServiceNameOperationCompleted(object arg) {
            if ((this.getServiceByServiceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceByServiceNameCompleted(this, new getServiceByServiceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XServiceGroupModel[] saveServicesGroupSetting([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XServiceGroupModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("saveServicesGroupSetting", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((XServiceGroupModel[])(results[0]));
        }
        
        /// <remarks/>
        public void saveServicesGroupSettingAsync(string arg0, XServiceGroupModel[] arg1, string arg2) {
            this.saveServicesGroupSettingAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void saveServicesGroupSettingAsync(string arg0, XServiceGroupModel[] arg1, string arg2, object userState) {
            if ((this.saveServicesGroupSettingOperationCompleted == null)) {
                this.saveServicesGroupSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveServicesGroupSettingOperationCompleted);
            }
            this.InvokeAsync("saveServicesGroupSetting", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.saveServicesGroupSettingOperationCompleted, userState);
        }
        
        private void OnsaveServicesGroupSettingOperationCompleted(object arg) {
            if ((this.saveServicesGroupSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveServicesGroupSettingCompleted(this, new saveServicesGroupSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XServiceGroupModel[] getServices([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefAddressModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getServices", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((XServiceGroupModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getServicesAsync(string arg0, RefAddressModel arg1, bool arg2, string arg3, string arg4) {
            this.getServicesAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getServicesAsync(string arg0, RefAddressModel arg1, bool arg2, string arg3, string arg4, object userState) {
            if ((this.getServicesOperationCompleted == null)) {
                this.getServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServicesOperationCompleted);
            }
            this.InvokeAsync("getServices", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getServicesOperationCompleted, userState);
        }
        
        private void OngetServicesOperationCompleted(object arg) {
            if ((this.getServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServicesCompleted(this, new getServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XServiceGroupModel[] getXServiceGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getXServiceGroup", new object[] {
                        arg0,
                        arg1});
            return ((XServiceGroupModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getXServiceGroupAsync(string arg0, string arg1) {
            this.getXServiceGroupAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getXServiceGroupAsync(string arg0, string arg1, object userState) {
            if ((this.getXServiceGroupOperationCompleted == null)) {
                this.getXServiceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXServiceGroupOperationCompleted);
            }
            this.InvokeAsync("getXServiceGroup", new object[] {
                        arg0,
                        arg1}, this.getXServiceGroupOperationCompleted, userState);
        }
        
        private void OngetXServiceGroupOperationCompleted(object arg) {
            if ((this.getXServiceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXServiceGroupCompleted(this, new getXServiceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteServiceGroupSetting([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            this.Invoke("deleteServiceGroupSetting", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void deleteServiceGroupSettingAsync(string arg0, string arg1) {
            this.deleteServiceGroupSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void deleteServiceGroupSettingAsync(string arg0, string arg1, object userState) {
            if ((this.deleteServiceGroupSettingOperationCompleted == null)) {
                this.deleteServiceGroupSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteServiceGroupSettingOperationCompleted);
            }
            this.InvokeAsync("deleteServiceGroupSetting", new object[] {
                        arg0,
                        arg1}, this.deleteServiceGroupSettingOperationCompleted, userState);
        }
        
        private void OndeleteServiceGroupSettingOperationCompleted(object arg) {
            if ((this.deleteServiceGroupSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteServiceGroupSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceGroupModel[] getAllServiceGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getAllServiceGroup", new object[] {
                        arg0});
            return ((ServiceGroupModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllServiceGroupAsync(string arg0) {
            this.getAllServiceGroupAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getAllServiceGroupAsync(string arg0, object userState) {
            if ((this.getAllServiceGroupOperationCompleted == null)) {
                this.getAllServiceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllServiceGroupOperationCompleted);
            }
            this.InvokeAsync("getAllServiceGroup", new object[] {
                        arg0}, this.getAllServiceGroupOperationCompleted, userState);
        }
        
        private void OngetAllServiceGroupOperationCompleted(object arg) {
            if ((this.getAllServiceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllServiceGroupCompleted(this, new getAllServiceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceModel[] getAllService([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getAllService", new object[] {
                        arg0, arg1});
            return ((ServiceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllServiceAsync(string arg0, string arg1) {
            this.getAllServiceAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getAllServiceAsync(string arg0, string arg1, object userState) {
            if ((this.getAllServiceOperationCompleted == null)) {
                this.getAllServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllServiceOperationCompleted);
            }
            this.InvokeAsync("getAllService", new object[] {
                        arg0, arg1}, this.getAllServiceOperationCompleted, userState);
        }
        
        private void OngetAllServiceOperationCompleted(object arg) {
            if ((this.getAllServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllServiceCompleted(this, new getAllServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceModel[] getServices4DeepLink([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getServices4DeepLink", new object[] {
                        arg0,
                        arg1});
            return ((ServiceModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getServices4DeepLinkAsync(string arg0, string arg1) {
            this.getServices4DeepLinkAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getServices4DeepLinkAsync(string arg0, string arg1, object userState) {
            if ((this.getServices4DeepLinkOperationCompleted == null)) {
                this.getServices4DeepLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServices4DeepLinkOperationCompleted);
            }
            this.InvokeAsync("getServices4DeepLink", new object[] {
                        arg0,
                        arg1}, this.getServices4DeepLinkOperationCompleted, userState);
        }
        
        private void OngetServices4DeepLinkOperationCompleted(object arg) {
            if ((this.getServices4DeepLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServices4DeepLinkCompleted(this, new getServices4DeepLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceByServiceNameCompletedEventHandler(object sender, getServiceByServiceNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceByServiceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceByServiceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveServicesGroupSettingCompletedEventHandler(object sender, saveServicesGroupSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveServicesGroupSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveServicesGroupSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XServiceGroupModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XServiceGroupModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServicesCompletedEventHandler(object sender, getServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XServiceGroupModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XServiceGroupModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXServiceGroupCompletedEventHandler(object sender, getXServiceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXServiceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXServiceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XServiceGroupModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XServiceGroupModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteServiceGroupSettingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllServiceGroupCompletedEventHandler(object sender, getAllServiceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllServiceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllServiceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceGroupModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceGroupModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllServiceCompletedEventHandler(object sender, getAllServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServices4DeepLinkCompletedEventHandler(object sender, getServices4DeepLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServices4DeepLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServices4DeepLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591