/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: GFilterViewService Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2010-2014
 * 
 *  Description:
 *  
 * 
 *  Notes:
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace Accela.ACA.FormDesigner.GFilterViewService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GFilterViewService.GFilterViewServiceSoap")]
    public interface GFilterViewServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/SaveFilterScreenView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSaveFilterScreenView(string agencyCode, string levelType, string moduleName, Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel, string callerid, System.AsyncCallback callback, object asyncState);
        
        void EndSaveFilterScreenView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetFilterScreenView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetFilterScreenView(string agencyCode, string levelType, string moduleName, string viewID, Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission, string callerid, System.AsyncCallback callback, object asyncState);
        
        Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS EndGetFilterScreenView(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.webservice.accela.com")]
    public partial class SimpleViewModel4WS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GFilterScreenPermissionModel4WS permissionModelField;
        
        private int screenHeightField;
        
        private int screenWidthField;
        
        private string sectionIDField;
        
        private SimpleViewElementModel4WS[] simpleViewElementsField;
        
        private int sizeUnitField;
        
        private string labelLayoutTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public GFilterScreenPermissionModel4WS permissionModel {
            get {
                return this.permissionModelField;
            }
            set {
                this.permissionModelField = value;
                this.RaisePropertyChanged("permissionModel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int screenHeight {
            get {
                return this.screenHeightField;
            }
            set {
                this.screenHeightField = value;
                this.RaisePropertyChanged("screenHeight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int screenWidth {
            get {
                return this.screenWidthField;
            }
            set {
                this.screenWidthField = value;
                this.RaisePropertyChanged("screenWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
                this.RaisePropertyChanged("sectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("simpleViewElements", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public SimpleViewElementModel4WS[] simpleViewElements {
            get {
                return this.simpleViewElementsField;
            }
            set {
                this.simpleViewElementsField = value;
                this.RaisePropertyChanged("simpleViewElements");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int sizeUnit {
            get {
                return this.sizeUnitField;
            }
            set {
                this.sizeUnitField = value;
                this.RaisePropertyChanged("sizeUnit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string labelLayoutType {
            get {
                return this.labelLayoutTypeField;
            }
            set {
                this.labelLayoutTypeField = value;
                this.RaisePropertyChanged("labelLayoutType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.webservice.accela.com")]
    public partial class GFilterScreenPermissionModel4WS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string permissionLevelField;
        
        private string permissionValueField;
        
        private string recFulNameField;
        
        private string recStatusField;
        
        private string servProvCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string permissionLevel {
            get {
                return this.permissionLevelField;
            }
            set {
                this.permissionLevelField = value;
                this.RaisePropertyChanged("permissionLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string permissionValue {
            get {
                return this.permissionValueField;
            }
            set {
                this.permissionValueField = value;
                this.RaisePropertyChanged("permissionValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string recFulName {
            get {
                return this.recFulNameField;
            }
            set {
                this.recFulNameField = value;
                this.RaisePropertyChanged("recFulName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string recStatus {
            get {
                return this.recStatusField;
            }
            set {
                this.recStatusField = value;
                this.RaisePropertyChanged("recStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string servProvCode {
            get {
                return this.servProvCodeField;
            }
            set {
                this.servProvCodeField = value;
                this.RaisePropertyChanged("servProvCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.webservice.accela.com")]
    public partial class TemplateAttrValueModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string attributeNameField;
        
        private string attributeValueField;
        
        private System.Nullable<System.DateTime> auditDateField;
        
        private string auditIDField;
        
        private string auditStatusField;
        
        private string defaultValueFlagField;
        
        private string resAttributeValueField;
        
        private string serviceProviderCodeField;
        
        private System.Nullable<long> sourceSeqNbrField;
        
        private string templateNameField;
        
        private string templateTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string attributeName {
            get {
                return this.attributeNameField;
            }
            set {
                this.attributeNameField = value;
                this.RaisePropertyChanged("attributeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string attributeValue {
            get {
                return this.attributeValueField;
            }
            set {
                this.attributeValueField = value;
                this.RaisePropertyChanged("attributeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> auditDate {
            get {
                return this.auditDateField;
            }
            set {
                this.auditDateField = value;
                this.RaisePropertyChanged("auditDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string auditID {
            get {
                return this.auditIDField;
            }
            set {
                this.auditIDField = value;
                this.RaisePropertyChanged("auditID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string auditStatus {
            get {
                return this.auditStatusField;
            }
            set {
                this.auditStatusField = value;
                this.RaisePropertyChanged("auditStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string defaultValueFlag {
            get {
                return this.defaultValueFlagField;
            }
            set {
                this.defaultValueFlagField = value;
                this.RaisePropertyChanged("defaultValueFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string resAttributeValue {
            get {
                return this.resAttributeValueField;
            }
            set {
                this.resAttributeValueField = value;
                this.RaisePropertyChanged("resAttributeValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string serviceProviderCode {
            get {
                return this.serviceProviderCodeField;
            }
            set {
                this.serviceProviderCodeField = value;
                this.RaisePropertyChanged("serviceProviderCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=8)]
        public System.Nullable<long> sourceSeqNbr {
            get {
                return this.sourceSeqNbrField;
            }
            set {
                this.sourceSeqNbrField = value;
                this.RaisePropertyChanged("sourceSeqNbr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string templateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
                this.RaisePropertyChanged("templateName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string templateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
                this.RaisePropertyChanged("templateType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.webservice.accela.com")]
    public partial class SimpleViewElementModel4WS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string oldStatusField;
        
        private string acaDisplayFlagField;
        
        private string displayOrderField;
        
        private string isEditableField;
        
        private int elementHeightField;
        
        private string elementInstructionField;
        
        private int elementLeftField;
        
        private int elementTopField;
        
        private string elementTypeField;
        
        private int elementWidthField;
        
        private int inputWidthField;
        
        private bool isOriginalTemplateField;
        
        private string labelIdField;
        
        private string labelValueField;
        
        private int labelWidthField;
        
        private string readOnlyField;
        
        private string recStatusField;
        
        private string requiredField;
        
        private string sectionIDField;
        
        private TemplateAttrValueModel[] selectOptionsField;
        
        private string servProvCodeField;
        
        private string sortOrderField;
        
        private string standardField;
        
        private string unitTypeField;
        
        private int unitWidthField;
        
        private string viewElementDescField;
        
        private string viewElementIdField;
        
        private string viewElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string OldStatus {
            get {
                return this.oldStatusField;
            }
            set {
                this.oldStatusField = value;
                this.RaisePropertyChanged("OldStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string acaDisplayFlag {
            get {
                return this.acaDisplayFlagField;
            }
            set {
                this.acaDisplayFlagField = value;
                this.RaisePropertyChanged("acaDisplayFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string displayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
                this.RaisePropertyChanged("displayOrder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string isEditable {
            get {
                return this.isEditableField;
            }
            set {
                this.isEditableField = value;
                this.RaisePropertyChanged("isEditable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int elementHeight {
            get {
                return this.elementHeightField;
            }
            set {
                this.elementHeightField = value;
                this.RaisePropertyChanged("elementHeight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string elementInstruction {
            get {
                return this.elementInstructionField;
            }
            set {
                this.elementInstructionField = value;
                this.RaisePropertyChanged("elementInstruction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int elementLeft {
            get {
                return this.elementLeftField;
            }
            set {
                this.elementLeftField = value;
                this.RaisePropertyChanged("elementLeft");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public int elementTop {
            get {
                return this.elementTopField;
            }
            set {
                this.elementTopField = value;
                this.RaisePropertyChanged("elementTop");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string elementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
                this.RaisePropertyChanged("elementType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public int elementWidth {
            get {
                return this.elementWidthField;
            }
            set {
                this.elementWidthField = value;
                this.RaisePropertyChanged("elementWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public int inputWidth {
            get {
                return this.inputWidthField;
            }
            set {
                this.inputWidthField = value;
                this.RaisePropertyChanged("inputWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public bool isOriginalTemplate {
            get {
                return this.isOriginalTemplateField;
            }
            set {
                this.isOriginalTemplateField = value;
                this.RaisePropertyChanged("isOriginalTemplate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12)]
        public string labelId {
            get {
                return this.labelIdField;
            }
            set {
                this.labelIdField = value;
                this.RaisePropertyChanged("labelId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13)]
        public string labelValue {
            get {
                return this.labelValueField;
            }
            set {
                this.labelValueField = value;
                this.RaisePropertyChanged("labelValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14)]
        public int labelWidth {
            get {
                return this.labelWidthField;
            }
            set {
                this.labelWidthField = value;
                this.RaisePropertyChanged("labelWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15)]
        public string readOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
                this.RaisePropertyChanged("readOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16)]
        public string recStatus {
            get {
                return this.recStatusField;
            }
            set {
                this.recStatusField = value;
                this.RaisePropertyChanged("recStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17)]
        public string required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
                this.RaisePropertyChanged("required");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18)]
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
                this.RaisePropertyChanged("sectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("selectOptions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=19)]
        public TemplateAttrValueModel[] selectOptions {
            get {
                return this.selectOptionsField;
            }
            set {
                this.selectOptionsField = value;
                this.RaisePropertyChanged("selectOptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20)]
        public string servProvCode {
            get {
                return this.servProvCodeField;
            }
            set {
                this.servProvCodeField = value;
                this.RaisePropertyChanged("servProvCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21)]
        public string sortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
                this.RaisePropertyChanged("sortOrder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22)]
        public string standard {
            get {
                return this.standardField;
            }
            set {
                this.standardField = value;
                this.RaisePropertyChanged("standard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23)]
        public string unitType {
            get {
                return this.unitTypeField;
            }
            set {
                this.unitTypeField = value;
                this.RaisePropertyChanged("unitType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24)]
        public int unitWidth {
            get {
                return this.unitWidthField;
            }
            set {
                this.unitWidthField = value;
                this.RaisePropertyChanged("unitWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25)]
        public string viewElementDesc {
            get {
                return this.viewElementDescField;
            }
            set {
                this.viewElementDescField = value;
                this.RaisePropertyChanged("viewElementDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26)]
        public string viewElementId {
            get {
                return this.viewElementIdField;
            }
            set {
                this.viewElementIdField = value;
                this.RaisePropertyChanged("viewElementId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=27)]
        public string viewElementName {
            get {
                return this.viewElementNameField;
            }
            set {
                this.viewElementNameField = value;
                this.RaisePropertyChanged("viewElementName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GFilterViewServiceSoapChannel : Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFilterScreenViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFilterScreenViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GFilterViewServiceSoapClient : System.ServiceModel.ClientBase<Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap>, Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap {
        
        private BeginOperationDelegate onBeginSaveFilterScreenViewDelegate;
        
        private EndOperationDelegate onEndSaveFilterScreenViewDelegate;
        
        private System.Threading.SendOrPostCallback onSaveFilterScreenViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFilterScreenViewDelegate;
        
        private EndOperationDelegate onEndGetFilterScreenViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetFilterScreenViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GFilterViewServiceSoapClient() {
        }
        
        public GFilterViewServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GFilterViewServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GFilterViewServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GFilterViewServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveFilterScreenViewCompleted;
        
        public event System.EventHandler<GetFilterScreenViewCompletedEventArgs> GetFilterScreenViewCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap.BeginSaveFilterScreenView(string agencyCode, string levelType, string moduleName, Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel, string callerid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveFilterScreenView(agencyCode, levelType, moduleName, simpleViewModel, callerid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap.EndSaveFilterScreenView(System.IAsyncResult result) {
            base.Channel.EndSaveFilterScreenView(result);
        }
        
        private System.IAsyncResult OnBeginSaveFilterScreenView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string agencyCode = ((string)(inValues[0]));
            string levelType = ((string)(inValues[1]));
            string moduleName = ((string)(inValues[2]));
            Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel = ((Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS)(inValues[3]));
            string callerid = ((string)(inValues[4]));
            return ((Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap)(this)).BeginSaveFilterScreenView(agencyCode, levelType, moduleName, simpleViewModel, callerid, callback, asyncState);
        }
        
        private object[] OnEndSaveFilterScreenView(System.IAsyncResult result) {
            ((Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap)(this)).EndSaveFilterScreenView(result);
            return null;
        }
        
        private void OnSaveFilterScreenViewCompleted(object state) {
            if ((this.SaveFilterScreenViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveFilterScreenViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveFilterScreenViewAsync(string agencyCode, string levelType, string moduleName, Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel, string callerid) {
            this.SaveFilterScreenViewAsync(agencyCode, levelType, moduleName, simpleViewModel, callerid, null);
        }
        
        public void SaveFilterScreenViewAsync(string agencyCode, string levelType, string moduleName, Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel, string callerid, object userState) {
            if ((this.onBeginSaveFilterScreenViewDelegate == null)) {
                this.onBeginSaveFilterScreenViewDelegate = new BeginOperationDelegate(this.OnBeginSaveFilterScreenView);
            }
            if ((this.onEndSaveFilterScreenViewDelegate == null)) {
                this.onEndSaveFilterScreenViewDelegate = new EndOperationDelegate(this.OnEndSaveFilterScreenView);
            }
            if ((this.onSaveFilterScreenViewCompletedDelegate == null)) {
                this.onSaveFilterScreenViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveFilterScreenViewCompleted);
            }
            base.InvokeAsync(this.onBeginSaveFilterScreenViewDelegate, new object[] {
                        agencyCode,
                        levelType,
                        moduleName,
                        simpleViewModel,
                        callerid}, this.onEndSaveFilterScreenViewDelegate, this.onSaveFilterScreenViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap.BeginGetFilterScreenView(string agencyCode, string levelType, string moduleName, string viewID, Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission, string callerid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFilterScreenView(agencyCode, levelType, moduleName, viewID, screenPermission, callerid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap.EndGetFilterScreenView(System.IAsyncResult result) {
            return base.Channel.EndGetFilterScreenView(result);
        }
        
        private System.IAsyncResult OnBeginGetFilterScreenView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string agencyCode = ((string)(inValues[0]));
            string levelType = ((string)(inValues[1]));
            string moduleName = ((string)(inValues[2]));
            string viewID = ((string)(inValues[3]));
            Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission = ((Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS)(inValues[4]));
            string callerid = ((string)(inValues[5]));
            return ((Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap)(this)).BeginGetFilterScreenView(agencyCode, levelType, moduleName, viewID, screenPermission, callerid, callback, asyncState);
        }
        
        private object[] OnEndGetFilterScreenView(System.IAsyncResult result) {
            Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS retVal = ((Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap)(this)).EndGetFilterScreenView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFilterScreenViewCompleted(object state) {
            if ((this.GetFilterScreenViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFilterScreenViewCompleted(this, new GetFilterScreenViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFilterScreenViewAsync(string agencyCode, string levelType, string moduleName, string viewID, Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission, string callerid) {
            this.GetFilterScreenViewAsync(agencyCode, levelType, moduleName, viewID, screenPermission, callerid, null);
        }
        
        public void GetFilterScreenViewAsync(string agencyCode, string levelType, string moduleName, string viewID, Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission, string callerid, object userState) {
            if ((this.onBeginGetFilterScreenViewDelegate == null)) {
                this.onBeginGetFilterScreenViewDelegate = new BeginOperationDelegate(this.OnBeginGetFilterScreenView);
            }
            if ((this.onEndGetFilterScreenViewDelegate == null)) {
                this.onEndGetFilterScreenViewDelegate = new EndOperationDelegate(this.OnEndGetFilterScreenView);
            }
            if ((this.onGetFilterScreenViewCompletedDelegate == null)) {
                this.onGetFilterScreenViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFilterScreenViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetFilterScreenViewDelegate, new object[] {
                        agencyCode,
                        levelType,
                        moduleName,
                        viewID,
                        screenPermission,
                        callerid}, this.onEndGetFilterScreenViewDelegate, this.onGetFilterScreenViewCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap CreateChannel() {
            return new GFilterViewServiceSoapClientChannel(this);
        }
        
        private class GFilterViewServiceSoapClientChannel : ChannelBase<Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap>, Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap {
            
            public GFilterViewServiceSoapClientChannel(System.ServiceModel.ClientBase<Accela.ACA.FormDesigner.GFilterViewService.GFilterViewServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveFilterScreenView(string agencyCode, string levelType, string moduleName, Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS simpleViewModel, string callerid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = agencyCode;
                _args[1] = levelType;
                _args[2] = moduleName;
                _args[3] = simpleViewModel;
                _args[4] = callerid;
                System.IAsyncResult _result = base.BeginInvoke("SaveFilterScreenView", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveFilterScreenView(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveFilterScreenView", _args, result);
            }
            
            public System.IAsyncResult BeginGetFilterScreenView(string agencyCode, string levelType, string moduleName, string viewID, Accela.ACA.FormDesigner.GFilterViewService.GFilterScreenPermissionModel4WS screenPermission, string callerid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = agencyCode;
                _args[1] = levelType;
                _args[2] = moduleName;
                _args[3] = viewID;
                _args[4] = screenPermission;
                _args[5] = callerid;
                System.IAsyncResult _result = base.BeginInvoke("GetFilterScreenView", _args, callback, asyncState);
                return _result;
            }
            
            public Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS EndGetFilterScreenView(System.IAsyncResult result) {
                object[] _args = new object[0];
                Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS _result = ((Accela.ACA.FormDesigner.GFilterViewService.SimpleViewModel4WS)(base.EndInvoke("GetFilterScreenView", _args, result)));
                return _result;
            }
        }
    }
}
