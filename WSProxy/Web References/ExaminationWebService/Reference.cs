/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2009-2014
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 129988 2009-05-11 00:55:53Z ACHIEVO\jackie.yu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ExaminationWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefExaminationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefExaminationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefEducationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefContinuingEducationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefExaminationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProviderDetailModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    public partial class ExaminationWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback rescheduleExamOperationCompleted;

        private System.Threading.SendOrPostCallback getAvailableScheduleOperationCompleted;

        private System.Threading.SendOrPostCallback updateExamOperationCompleted;

        private System.Threading.SendOrPostCallback getExamByPKOperationCompleted;

        private System.Threading.SendOrPostCallback resetReady2ScheduleExamOperationCompleted;

        private System.Threading.SendOrPostCallback unScheduleExamOperationCompleted;

        private System.Threading.SendOrPostCallback preScheduleExamOperationCompleted;

        private System.Threading.SendOrPostCallback scheduleAllPaidExamOperationCompleted;

        private System.Threading.SendOrPostCallback hasWorkflowRestrictionOperationCompleted;

        private System.Threading.SendOrPostCallback scheduleExamOperationCompleted;

        private System.Threading.SendOrPostCallback getExamListByCapIDOperationCompleted;

        private System.Threading.SendOrPostCallback getExamScheduleViewModelByExamSeqNbrOperationCompleted;

        private System.Threading.SendOrPostCallback getExamScheduleViewModelOperationCompleted;

        private System.Threading.SendOrPostCallback getSSOLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback schedulePaidExamByPKOperationCompleted;        
        
		private System.Threading.SendOrPostCallback getInavailableExamListByCapIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProctorResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExamScheduleAvailableSeatsOperationCompleted;

        private System.Threading.SendOrPostCallback deleteExamOperationCompleted;

        private System.Threading.SendOrPostCallback hasReady2ScheduleExaminationOperationCompleted;

        private System.Threading.SendOrPostCallback getRefPeopleExamListOperationCompleted;

        private System.Threading.SendOrPostCallback updateRefPeopleExamOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public ExaminationWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event rescheduleExamCompletedEventHandler rescheduleExamCompleted;

        /// <remarks/>
        public event getAvailableScheduleCompletedEventHandler getAvailableScheduleCompleted;

        /// <remarks/>
        public event updateExamCompletedEventHandler updateExamCompleted;

        /// <remarks/>
        public event getExamByPKCompletedEventHandler getExamByPKCompleted;

        /// <remarks/>
        public event resetReady2ScheduleExamCompletedEventHandler resetReady2ScheduleExamCompleted;

        /// <remarks/>
        public event unScheduleExamCompletedEventHandler unScheduleExamCompleted;

        /// <remarks/>
        public event preScheduleExamCompletedEventHandler preScheduleExamCompleted;

        /// <remarks/>
        public event scheduleAllPaidExamCompletedEventHandler scheduleAllPaidExamCompleted;

        /// <remarks/>
        public event hasWorkflowRestrictionCompletedEventHandler hasWorkflowRestrictionCompleted;

        /// <remarks/>
        public event scheduleExamCompletedEventHandler scheduleExamCompleted;

        /// <remarks/>
        public event getExamListByCapIDCompletedEventHandler getExamListByCapIDCompleted;

        /// <remarks/>
        public event getExamScheduleViewModelByExamSeqNbrCompletedEventHandler getExamScheduleViewModelByExamSeqNbrCompleted;

        /// <remarks/>
        public event getExamScheduleViewModelCompletedEventHandler getExamScheduleViewModelCompleted;

        /// <remarks/>
        public event getSSOLinkCompletedEventHandler getSSOLinkCompleted;

        /// <remarks/>
        public event schedulePaidExamByPKCompletedEventHandler schedulePaidExamByPKCompleted;
		
		/// <remarks/>
        public event getInavailableExamListByCapIdsCompletedEventHandler getInavailableExamListByCapIdsCompleted;
        
        /// <remarks/>
        public event updateProctorResponseStatusCompletedEventHandler updateProctorResponseStatusCompleted;
        
        /// <remarks/>
        public event getExamScheduleAvailableSeatsCompletedEventHandler getExamScheduleAvailableSeatsCompleted;

        /// <remarks/>
        public event deleteExamCompletedEventHandler deleteExamCompleted;

        /// <remarks/>
        public event hasReady2ScheduleExaminationCompletedEventHandler hasReady2ScheduleExaminationCompleted;

        /// <remarks/>
        public event getRefPeopleExamListCompletedEventHandler getRefPeopleExamListCompleted;

        /// <remarks/>
        public event updateRefPeopleExamCompletedEventHandler updateRefPeopleExamCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool rescheduleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ScheduleExamParamVO arg0)
        {
            object[] results = this.Invoke("rescheduleExam", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void rescheduleExamAsync(ScheduleExamParamVO arg0)
        {
            this.rescheduleExamAsync(arg0, null);
        }

        /// <remarks/>
        public void rescheduleExamAsync(ScheduleExamParamVO arg0, object userState)
        {
            if ((this.rescheduleExamOperationCompleted == null))
            {
                this.rescheduleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrescheduleExamOperationCompleted);
            }
            this.InvokeAsync("rescheduleExam", new object[] {
                        arg0}, this.rescheduleExamOperationCompleted, userState);
        }

        private void OnrescheduleExamOperationCompleted(object arg)
        {
            if ((this.rescheduleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rescheduleExamCompleted(this, new rescheduleExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExamScheduleViewModel[] getAvailableSchedule([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExamScheduleSearchModel arg0)
        {
            object[] results = this.Invoke("getAvailableSchedule", new object[] {
                        arg0});
            return ((ExamScheduleViewModel[])(results[0]));
        }

        /// <remarks/>
        public void getAvailableScheduleAsync(ExamScheduleSearchModel arg0)
        {
            this.getAvailableScheduleAsync(arg0, null);
        }

        /// <remarks/>
        public void getAvailableScheduleAsync(ExamScheduleSearchModel arg0, object userState)
        {
            if ((this.getAvailableScheduleOperationCompleted == null))
            {
                this.getAvailableScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableScheduleOperationCompleted);
            }
            this.InvokeAsync("getAvailableSchedule", new object[] {
                        arg0}, this.getAvailableScheduleOperationCompleted, userState);
        }

        private void OngetAvailableScheduleOperationCompleted(object arg)
        {
            if ((this.getAvailableScheduleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableScheduleCompleted(this, new getAvailableScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateExam([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("updateExam", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateExamAsync(string arg0, ExaminationModel arg1, string arg2) {
            this.updateExamAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateExamAsync(string arg0, ExaminationModel arg1, string arg2, object userState) {
            if ((this.updateExamOperationCompleted == null)) {
                this.updateExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExamOperationCompleted);
            }
            this.InvokeAsync("updateExam", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateExamOperationCompleted, userState);
        }
        
        private void OnupdateExamOperationCompleted(object arg) {
            if ((this.updateExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExamCompleted(this, new updateExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExaminationModel getExamByPK([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationPKModel arg0)
        {
            object[] results = this.Invoke("getExamByPK", new object[] {
                        arg0});
            return ((ExaminationModel)(results[0]));
        }

        /// <remarks/>
        public void getExamByPKAsync(ExaminationPKModel arg0)
        {
            this.getExamByPKAsync(arg0, null);
        }

        /// <remarks/>
        public void getExamByPKAsync(ExaminationPKModel arg0, object userState)
        {
            if ((this.getExamByPKOperationCompleted == null))
            {
                this.getExamByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExamByPKOperationCompleted);
            }
            this.InvokeAsync("getExamByPK", new object[] {
                        arg0}, this.getExamByPKOperationCompleted, userState);
        }

        private void OngetExamByPKOperationCompleted(object arg)
        {
            if ((this.getExamByPKCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExamByPKCompleted(this, new getExamByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetReady2ScheduleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationPKModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            this.Invoke("resetReady2ScheduleExam", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }

        /// <remarks/>
        public void resetReady2ScheduleExamAsync(ExaminationPKModel arg0, CapIDModel arg1, string arg2)
        {
            this.resetReady2ScheduleExamAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void resetReady2ScheduleExamAsync(ExaminationPKModel arg0, CapIDModel arg1, string arg2, object userState)
        {
            if ((this.resetReady2ScheduleExamOperationCompleted == null))
            {
                this.resetReady2ScheduleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetReady2ScheduleExamOperationCompleted);
            }
            this.InvokeAsync("resetReady2ScheduleExam", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.resetReady2ScheduleExamOperationCompleted, userState);
        }

        private void OnresetReady2ScheduleExamOperationCompleted(object arg)
        {
            if ((this.resetReady2ScheduleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetReady2ScheduleExamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool unScheduleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ScheduleExamParamVO arg0)
        {
            object[] results = this.Invoke("unScheduleExam", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void unScheduleExamAsync(ScheduleExamParamVO arg0)
        {
            this.unScheduleExamAsync(arg0, null);
        }

        /// <remarks/>
        public void unScheduleExamAsync(ScheduleExamParamVO arg0, object userState)
        {
            if ((this.unScheduleExamOperationCompleted == null))
            {
                this.unScheduleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunScheduleExamOperationCompleted);
            }
            this.InvokeAsync("unScheduleExam", new object[] {
                        arg0}, this.unScheduleExamOperationCompleted, userState);
        }

        private void OnunScheduleExamOperationCompleted(object arg)
        {
            if ((this.unScheduleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unScheduleExamCompleted(this, new unScheduleExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool preScheduleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ScheduleExamParamVO arg0)
        {
            object[] results = this.Invoke("preScheduleExam", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void preScheduleExamAsync(ScheduleExamParamVO arg0)
        {
            this.preScheduleExamAsync(arg0, null);
        }

        /// <remarks/>
        public void preScheduleExamAsync(ScheduleExamParamVO arg0, object userState)
        {
            if ((this.preScheduleExamOperationCompleted == null))
            {
                this.preScheduleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpreScheduleExamOperationCompleted);
            }
            this.InvokeAsync("preScheduleExam", new object[] {
                        arg0}, this.preScheduleExamOperationCompleted, userState);
        }

        private void OnpreScheduleExamOperationCompleted(object arg)
        {
            if ((this.preScheduleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.preScheduleExamCompleted(this, new preScheduleExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scheduleAllPaidExam([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("scheduleAllPaidExam", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void scheduleAllPaidExamAsync(CapIDModel[] arg0, string arg1)
        {
            this.scheduleAllPaidExamAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void scheduleAllPaidExamAsync(CapIDModel[] arg0, string arg1, object userState)
        {
            if ((this.scheduleAllPaidExamOperationCompleted == null))
            {
                this.scheduleAllPaidExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscheduleAllPaidExamOperationCompleted);
            }
            this.InvokeAsync("scheduleAllPaidExam", new object[] {
                        arg0,
                        arg1}, this.scheduleAllPaidExamOperationCompleted, userState);
        }

        private void OnscheduleAllPaidExamOperationCompleted(object arg)
        {
            if ((this.scheduleAllPaidExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scheduleAllPaidExamCompleted(this, new scheduleAllPaidExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasWorkflowRestriction([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] RefExaminationModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            object[] results = this.Invoke("hasWorkflowRestriction", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void hasWorkflowRestrictionAsync(CapTypeModel arg0, CapIDModel arg1, RefExaminationModel arg2, string arg3, string arg4)
        {
            this.hasWorkflowRestrictionAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void hasWorkflowRestrictionAsync(CapTypeModel arg0, CapIDModel arg1, RefExaminationModel arg2, string arg3, string arg4, object userState)
        {
            if ((this.hasWorkflowRestrictionOperationCompleted == null))
            {
                this.hasWorkflowRestrictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasWorkflowRestrictionOperationCompleted);
            }
            this.InvokeAsync("hasWorkflowRestriction", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.hasWorkflowRestrictionOperationCompleted, userState);
        }

        private void OnhasWorkflowRestrictionOperationCompleted(object arg)
        {
            if ((this.hasWorkflowRestrictionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasWorkflowRestrictionCompleted(this, new hasWorkflowRestrictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool scheduleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ScheduleExamParamVO arg0)
        {
            object[] results = this.Invoke("scheduleExam", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void scheduleExamAsync(ScheduleExamParamVO arg0)
        {
            this.scheduleExamAsync(arg0, null);
        }

        /// <remarks/>
        public void scheduleExamAsync(ScheduleExamParamVO arg0, object userState)
        {
            if ((this.scheduleExamOperationCompleted == null))
            {
                this.scheduleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscheduleExamOperationCompleted);
            }
            this.InvokeAsync("scheduleExam", new object[] {
                        arg0}, this.scheduleExamOperationCompleted, userState);
        }

        private void OnscheduleExamOperationCompleted(object arg)
        {
            if ((this.scheduleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scheduleExamCompleted(this, new scheduleExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExaminationModel[] getExamListByCapID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0)
        {
            object[] results = this.Invoke("getExamListByCapID", new object[] {
                        arg0});
            return ((ExaminationModel[])(results[0]));
        }

        /// <remarks/>
        public void getExamListByCapIDAsync(CapIDModel arg0)
        {
            this.getExamListByCapIDAsync(arg0, null);
        }

        /// <remarks/>
        public void getExamListByCapIDAsync(CapIDModel arg0, object userState)
        {
            if ((this.getExamListByCapIDOperationCompleted == null))
            {
                this.getExamListByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExamListByCapIDOperationCompleted);
            }
            this.InvokeAsync("getExamListByCapID", new object[] {
                        arg0}, this.getExamListByCapIDOperationCompleted, userState);
        }

        private void OngetExamListByCapIDOperationCompleted(object arg)
        {
            if ((this.getExamListByCapIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExamListByCapIDCompleted(this, new getExamListByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExamScheduleViewModel getExamScheduleViewModelByExamSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified)
        {
            object[] results = this.Invoke("getExamScheduleViewModelByExamSeqNbr", new object[] {
                        arg0,
                        arg1,
                        arg1Specified});
            return ((ExamScheduleViewModel)(results[0]));
        }

        /// <remarks/>
        public void getExamScheduleViewModelByExamSeqNbrAsync(string arg0, long arg1, bool arg1Specified)
        {
            this.getExamScheduleViewModelByExamSeqNbrAsync(arg0, arg1, arg1Specified, null);
        }

        /// <remarks/>
        public void getExamScheduleViewModelByExamSeqNbrAsync(string arg0, long arg1, bool arg1Specified, object userState)
        {
            if ((this.getExamScheduleViewModelByExamSeqNbrOperationCompleted == null))
            {
                this.getExamScheduleViewModelByExamSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExamScheduleViewModelByExamSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getExamScheduleViewModelByExamSeqNbr", new object[] {
                        arg0,
                        arg1,
                        arg1Specified}, this.getExamScheduleViewModelByExamSeqNbrOperationCompleted, userState);
        }

        private void OngetExamScheduleViewModelByExamSeqNbrOperationCompleted(object arg)
        {
            if ((this.getExamScheduleViewModelByExamSeqNbrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExamScheduleViewModelByExamSeqNbrCompleted(this, new getExamScheduleViewModelByExamSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExamScheduleViewModel getExamScheduleViewModel([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExamScheduleViewModel arg0)
        {
            object[] results = this.Invoke("getExamScheduleViewModel", new object[] {
                        arg0});
            return ((ExamScheduleViewModel)(results[0]));
        }

        /// <remarks/>
        public void getExamScheduleViewModelAsync(ExamScheduleViewModel arg0)
        {
            this.getExamScheduleViewModelAsync(arg0, null);
        }

        /// <remarks/>
        public void getExamScheduleViewModelAsync(ExamScheduleViewModel arg0, object userState)
        {
            if ((this.getExamScheduleViewModelOperationCompleted == null))
            {
                this.getExamScheduleViewModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExamScheduleViewModelOperationCompleted);
            }
            this.InvokeAsync("getExamScheduleViewModel", new object[] {
                        arg0}, this.getExamScheduleViewModelOperationCompleted, userState);
        }

        private void OngetExamScheduleViewModelOperationCompleted(object arg)
        {
            if ((this.getExamScheduleViewModelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExamScheduleViewModelCompleted(this, new getExamScheduleViewModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSSOLink([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ProviderPKModel arg1)
        {
            object[] results = this.Invoke("getSSOLink", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getSSOLinkAsync(string arg0, ProviderPKModel arg1)
        {
            this.getSSOLinkAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getSSOLinkAsync(string arg0, ProviderPKModel arg1, object userState)
        {
            if ((this.getSSOLinkOperationCompleted == null))
            {
                this.getSSOLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSSOLinkOperationCompleted);
            }
            this.InvokeAsync("getSSOLink", new object[] {
                        arg0,
                        arg1}, this.getSSOLinkOperationCompleted, userState);
        }

        private void OngetSSOLinkOperationCompleted(object arg)
        {
            if ((this.getSSOLinkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSSOLinkCompleted(this, new getSSOLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool schedulePaidExamByPK([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationPKModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("schedulePaidExamByPK", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void schedulePaidExamByPKAsync(ExaminationPKModel arg0, string arg1)
        {
            this.schedulePaidExamByPKAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void schedulePaidExamByPKAsync(ExaminationPKModel arg0, string arg1, object userState)
        {
            if ((this.schedulePaidExamByPKOperationCompleted == null))
            {
                this.schedulePaidExamByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnschedulePaidExamByPKOperationCompleted);
            }
            this.InvokeAsync("schedulePaidExamByPK", new object[] {
                        arg0,
                        arg1}, this.schedulePaidExamByPKOperationCompleted, userState);
        }

        private void OnschedulePaidExamByPKOperationCompleted(object arg)
        {
            if ((this.schedulePaidExamByPKCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.schedulePaidExamByPKCompleted(this, new schedulePaidExamByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExaminationModel[] getInavailableExamListByCapIds([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS[] arg0) {
            object[] results = this.Invoke("getInavailableExamListByCapIds", new object[] {
                        arg0});
            return ((ExaminationModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getInavailableExamListByCapIdsAsync(CapIDModel4WS[] arg0) {
            this.getInavailableExamListByCapIdsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getInavailableExamListByCapIdsAsync(CapIDModel4WS[] arg0, object userState) {
            if ((this.getInavailableExamListByCapIdsOperationCompleted == null)) {
                this.getInavailableExamListByCapIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInavailableExamListByCapIdsOperationCompleted);
            }
            this.InvokeAsync("getInavailableExamListByCapIds", new object[] {
                        arg0}, this.getInavailableExamListByCapIdsOperationCompleted, userState);
        }
        
        private void OngetInavailableExamListByCapIdsOperationCompleted(object arg) {
            if ((this.getInavailableExamListByCapIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInavailableExamListByCapIdsCompleted(this, new getInavailableExamListByCapIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
		/// <remarks/>
    	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    	public delegate void getInavailableExamListByCapIdsCompletedEventHandler(object sender, getInavailableExamListByCapIdsCompletedEventArgs e);
    
    	/// <remarks/>
    	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    	[System.Diagnostics.DebuggerStepThroughAttribute()]
    	[System.ComponentModel.DesignerCategoryAttribute("code")]
    	public partial class getInavailableExamListByCapIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        	private object[] results;
        
        	internal getInavailableExamListByCapIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                	base(exception, cancelled, userState) {
            	this.results = results;
        	}
        
        /// <remarks/>
        public ExaminationModel[] Result {
            	get {
                	this.RaiseExceptionIfNecessary();
                	return ((ExaminationModel[])(this.results[0]));
            	}
        	}
    	}
	
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int updateProctorResponseStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("updateProctorResponseStatus", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateProctorResponseStatusAsync(string arg0, string arg1, string arg2, string arg3, string arg4) {
            this.updateProctorResponseStatusAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void updateProctorResponseStatusAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.updateProctorResponseStatusOperationCompleted == null)) {
                this.updateProctorResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProctorResponseStatusOperationCompleted);
            }
            this.InvokeAsync("updateProctorResponseStatus", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.updateProctorResponseStatusOperationCompleted, userState);
        }
        
        private void OnupdateProctorResponseStatusOperationCompleted(object arg) {
            if ((this.updateProctorResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProctorResponseStatusCompleted(this, new updateProctorResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getExamScheduleAvailableSeats([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationPKModel arg0) {
            object[] results = this.Invoke("getExamScheduleAvailableSeats", new object[] {
                        arg0});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void getExamScheduleAvailableSeatsAsync(ExaminationPKModel arg0)
        {
            this.getExamScheduleAvailableSeatsAsync(arg0, null);
        }

        /// <remarks/>
        public void getExamScheduleAvailableSeatsAsync(ExaminationPKModel arg0, object userState)
        {
            if ((this.getExamScheduleAvailableSeatsOperationCompleted == null))
            {
                this.getExamScheduleAvailableSeatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExamScheduleAvailableSeatsOperationCompleted);
            }
            this.InvokeAsync("getExamScheduleAvailableSeats", new object[] {
                        arg0}, this.getExamScheduleAvailableSeatsOperationCompleted, userState);
        }

        private void OngetExamScheduleAvailableSeatsOperationCompleted(object arg)
        {
            if ((this.getExamScheduleAvailableSeatsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExamScheduleAvailableSeatsCompleted(this, new getExamScheduleAvailableSeatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleteExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationModel arg0)
        {
            object[] results = this.Invoke("deleteExam", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void deleteExamAsync(ExaminationModel arg0)
        {
            this.deleteExamAsync(arg0, null);
        }

        /// <remarks/>
        public void deleteExamAsync(ExaminationModel arg0, object userState)
        {
            if ((this.deleteExamOperationCompleted == null))
            {
                this.deleteExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExamOperationCompleted);
            }
            this.InvokeAsync("deleteExam", new object[] {
                        arg0}, this.deleteExamOperationCompleted, userState);
        }

        private void OndeleteExamOperationCompleted(object arg)
        {
            if ((this.deleteExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExamCompleted(this, new deleteExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasReady2ScheduleExamination([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel[] arg0)
        {
            object[] results = this.Invoke("hasReady2ScheduleExamination", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void hasReady2ScheduleExaminationAsync(CapIDModel[] arg0)
        {
            this.hasReady2ScheduleExaminationAsync(arg0);
        }

        /// <remarks/>
        public void hasReady2ScheduleExaminationAsync(CapIDModel[] arg0, object userState)
        {
            if ((this.hasReady2ScheduleExaminationOperationCompleted == null))
            {
                this.hasReady2ScheduleExaminationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasReady2ScheduleExaminationOperationCompleted);
            }
            this.InvokeAsync("hasReady2ScheduleExamination", new object[] {
                        arg0}, this.hasReady2ScheduleExaminationOperationCompleted, userState);
        }

        private void OnhasReady2ScheduleExaminationOperationCompleted(object arg)
        {
            if ((this.hasReady2ScheduleExaminationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasReady2ScheduleExaminationCompleted(this, new hasReady2ScheduleExaminationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExaminationModel[] getRefPeopleExamList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getRefPeopleExamList", new object[] {
                        arg0,
                        arg1});
            return ((ExaminationModel[])(results[0]));
        }

        /// <remarks/>
        public void getRefPeopleExamListAsync(string arg0, string arg1)
        {
            this.getRefPeopleExamListAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getRefPeopleExamListAsync(string arg0, string arg1, object userState)
        {
            if ((this.getRefPeopleExamListOperationCompleted == null))
            {
                this.getRefPeopleExamListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefPeopleExamListOperationCompleted);
            }
            this.InvokeAsync("getRefPeopleExamList", new object[] {
                        arg0,
                        arg1}, this.getRefPeopleExamListOperationCompleted, userState);
        }

        private void OngetRefPeopleExamListOperationCompleted(object arg)
        {
            if ((this.getRefPeopleExamListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefPeopleExamListCompleted(this, new getRefPeopleExamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateRefPeopleExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ExaminationModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("updateRefPeopleExam", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void updateRefPeopleExamAsync(ExaminationModel arg0, string arg1)
        {
            this.updateRefPeopleExamAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void updateRefPeopleExamAsync(ExaminationModel arg0, string arg1, object userState)
        {
            if ((this.updateRefPeopleExamOperationCompleted == null))
            {
                this.updateRefPeopleExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRefPeopleExamOperationCompleted);
            }
            this.InvokeAsync("updateRefPeopleExam", new object[] {
                        arg0,
                        arg1}, this.updateRefPeopleExamOperationCompleted, userState);
        }

        private void OnupdateRefPeopleExamOperationCompleted(object arg)
        {
            if ((this.updateRefPeopleExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRefPeopleExamCompleted(this, new updateRefPeopleExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void hasReady2ScheduleExaminationCompletedEventHandler(object sender, hasReady2ScheduleExaminationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasReady2ScheduleExaminationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal hasReady2ScheduleExaminationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void rescheduleExamCompletedEventHandler(object sender, rescheduleExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rescheduleExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal rescheduleExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAvailableScheduleCompletedEventHandler(object sender, getAvailableScheduleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAvailableScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExamScheduleViewModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExamScheduleViewModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateExamCompletedEventHandler(object sender, updateExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getExamByPKCompletedEventHandler(object sender, getExamByPKCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExamByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExamByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExaminationModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExaminationModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void unScheduleExamCompletedEventHandler(object sender, unScheduleExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unScheduleExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal unScheduleExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void hasWorkflowRestrictionCompletedEventHandler(object sender, hasWorkflowRestrictionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasWorkflowRestrictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal hasWorkflowRestrictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void scheduleExamCompletedEventHandler(object sender, scheduleExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scheduleExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal scheduleExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getExamListByCapIDCompletedEventHandler(object sender, getExamListByCapIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExamListByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExamListByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExaminationModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExaminationModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSSOLinkCompletedEventHandler(object sender, getSSOLinkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSSOLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getSSOLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void schedulePaidExamByPKCompletedEventHandler(object sender, schedulePaidExamByPKCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class schedulePaidExamByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal schedulePaidExamByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getExamScheduleAvailableSeatsCompletedEventHandler(object sender, getExamScheduleAvailableSeatsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExamScheduleAvailableSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExamScheduleAvailableSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getExamScheduleViewModelByExamSeqNbrCompletedEventHandler(object sender, getExamScheduleViewModelByExamSeqNbrCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExamScheduleViewModelByExamSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExamScheduleViewModelByExamSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExamScheduleViewModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExamScheduleViewModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getExamScheduleViewModelCompletedEventHandler(object sender, getExamScheduleViewModelCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExamScheduleViewModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getExamScheduleViewModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExamScheduleViewModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExamScheduleViewModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteExamCompletedEventHandler(object sender, deleteExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal deleteExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void scheduleAllPaidExamCompletedEventHandler(object sender, scheduleAllPaidExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scheduleAllPaidExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal scheduleAllPaidExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void resetReady2ScheduleExamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void preScheduleExamCompletedEventHandler(object sender, preScheduleExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class preScheduleExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal preScheduleExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefPeopleExamListCompletedEventHandler(object sender, getRefPeopleExamListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefPeopleExamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRefPeopleExamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ExaminationModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ExaminationModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateRefPeopleExamCompletedEventHandler(object sender, updateRefPeopleExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRefPeopleExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal updateRefPeopleExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
	
	/// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateProctorResponseStatusCompletedEventHandler(object sender, updateProctorResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProctorResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProctorResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
