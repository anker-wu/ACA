/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2012
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 230199 2012-08-10 01:49:02Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CalendarWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Period))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DateAndTimesModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    public partial class CalendarWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getNextWorkingDaysAndTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getACACalendarByInspTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSameDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextDayOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CalendarWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getNextWorkingDaysAndTimesCompletedEventHandler getNextWorkingDaysAndTimesCompleted;
        
        /// <remarks/>
        public event getACACalendarByInspTypeCompletedEventHandler getACACalendarByInspTypeCompleted;
        
        /// <remarks/>
        public event getSameDayCompletedEventHandler getSameDayCompleted;
        
        /// <remarks/>
        public event getNextDayCompletedEventHandler getNextDayCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DateTimeRangePageModel[] getNextWorkingDaysAndTimes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg2Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionTypeModel arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("getNextWorkingDaysAndTimes", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg2Specified,
                        arg3,
                        arg4,
                        arg5});
            return ((DateTimeRangePageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getNextWorkingDaysAndTimesAsync(string arg0, System.DateTime arg1, bool arg1Specified, System.DateTime arg2, bool arg2Specified, CapIDModel arg3, InspectionTypeModel arg4, string arg5) {
            this.getNextWorkingDaysAndTimesAsync(arg0, arg1, arg1Specified, arg2, arg2Specified, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void getNextWorkingDaysAndTimesAsync(string arg0, System.DateTime arg1, bool arg1Specified, System.DateTime arg2, bool arg2Specified, CapIDModel arg3, InspectionTypeModel arg4, string arg5, object userState) {
            if ((this.getNextWorkingDaysAndTimesOperationCompleted == null)) {
                this.getNextWorkingDaysAndTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextWorkingDaysAndTimesOperationCompleted);
            }
            this.InvokeAsync("getNextWorkingDaysAndTimes", new object[] {
                        arg0,
                        arg1,
                        arg1Specified,
                        arg2,
                        arg2Specified,
                        arg3,
                        arg4,
                        arg5}, this.getNextWorkingDaysAndTimesOperationCompleted, userState);
        }
        
        private void OngetNextWorkingDaysAndTimesOperationCompleted(object arg) {
            if ((this.getNextWorkingDaysAndTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextWorkingDaysAndTimesCompleted(this, new getNextWorkingDaysAndTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CalendarModel getACACalendarByInspType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getACACalendarByInspType", new object[] {
                        arg0,
                        arg1});
            return ((CalendarModel)(results[0]));
        }
        
        /// <remarks/>
        public void getACACalendarByInspTypeAsync(string arg0, string arg1) {
            this.getACACalendarByInspTypeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getACACalendarByInspTypeAsync(string arg0, string arg1, object userState) {
            if ((this.getACACalendarByInspTypeOperationCompleted == null)) {
                this.getACACalendarByInspTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetACACalendarByInspTypeOperationCompleted);
            }
            this.InvokeAsync("getACACalendarByInspType", new object[] {
                        arg0,
                        arg1}, this.getACACalendarByInspTypeOperationCompleted, userState);
        }
        
        private void OngetACACalendarByInspTypeOperationCompleted(object arg) {
            if ((this.getACACalendarByInspTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getACACalendarByInspTypeCompleted(this, new getACACalendarByInspTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DateTimeRangePageModel getSameDay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionTypeModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getSameDay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DateTimeRangePageModel)(results[0]));
        }
        
        /// <remarks/>
        public void getSameDayAsync(string arg0, CapIDModel arg1, InspectionTypeModel arg2, string arg3) {
            this.getSameDayAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getSameDayAsync(string arg0, CapIDModel arg1, InspectionTypeModel arg2, string arg3, object userState) {
            if ((this.getSameDayOperationCompleted == null)) {
                this.getSameDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSameDayOperationCompleted);
            }
            this.InvokeAsync("getSameDay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getSameDayOperationCompleted, userState);
        }
        
        private void OngetSameDayOperationCompleted(object arg) {
            if ((this.getSameDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSameDayCompleted(this, new getSameDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DateTimeRangePageModel getNextDay([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionTypeModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getNextDay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DateTimeRangePageModel)(results[0]));
        }
        
        /// <remarks/>
        public void getNextDayAsync(string arg0, CapIDModel arg1, InspectionTypeModel arg2, string arg3) {
            this.getNextDayAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getNextDayAsync(string arg0, CapIDModel arg1, InspectionTypeModel arg2, string arg3, object userState) {
            if ((this.getNextDayOperationCompleted == null)) {
                this.getNextDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextDayOperationCompleted);
            }
            this.InvokeAsync("getNextDay", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getNextDayOperationCompleted, userState);
        }
        
        private void OngetNextDayOperationCompleted(object arg) {
            if ((this.getNextDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextDayCompleted(this, new getNextDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
   
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNextWorkingDaysAndTimesCompletedEventHandler(object sender, getNextWorkingDaysAndTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextWorkingDaysAndTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextWorkingDaysAndTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DateTimeRangePageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DateTimeRangePageModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getACACalendarByInspTypeCompletedEventHandler(object sender, getACACalendarByInspTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getACACalendarByInspTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getACACalendarByInspTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CalendarModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CalendarModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSameDayCompletedEventHandler(object sender, getSameDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSameDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSameDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DateTimeRangePageModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DateTimeRangePageModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNextDayCompletedEventHandler(object sender, getNextDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DateTimeRangePageModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DateTimeRangePageModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591