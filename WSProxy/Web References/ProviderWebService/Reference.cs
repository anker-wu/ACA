/*
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2009-2011
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 130317 2009-05-13 06:58:08Z ACHIEVO\jackie.yu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProviderWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefExaminationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefExaminationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefExaminationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefEducationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefContinuingEducationAppTypePKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProviderPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefExaminationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefExaminationPKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefEducationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationPKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefContinuingEducationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationPKModel4WS))]
    public partial class ProviderWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getProviderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProviderFeeItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback isExternalExamProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProvidersByExamNbrOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProviderListByUserSeqNbrOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProviderByPKOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProviderWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getProviderListCompletedEventHandler getProviderListCompleted;
        
        /// <remarks/>
        public event getProviderFeeItemsCompletedEventHandler getProviderFeeItemsCompleted;
        
        /// <remarks/>
        public event isExternalExamProviderCompletedEventHandler isExternalExamProviderCompleted;
        
        /// <remarks/>
        public event getProvidersByExamNbrCompletedEventHandler getProvidersByExamNbrCompleted;
        
        /// <remarks/>
        public event getProviderListByUserSeqNbrCompletedEventHandler getProviderListByUserSeqNbrCompleted;
        
        /// <remarks/>
        public event getProviderByPKCompletedEventHandler getProviderByPKCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProviderModel4WS[] getProviderList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ProviderModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg1) {
            object[] results = this.Invoke("getProviderList", new object[] {
                        arg0,
                        arg1});
            return ((ProviderModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getProviderListAsync(ProviderModel4WS arg0, QueryFormat arg1) {
            this.getProviderListAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getProviderListAsync(ProviderModel4WS arg0, QueryFormat arg1, object userState) {
            if ((this.getProviderListOperationCompleted == null)) {
                this.getProviderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderListOperationCompleted);
            }
            this.InvokeAsync("getProviderList", new object[] {
                        arg0,
                        arg1}, this.getProviderListOperationCompleted, userState);
        }
        
        private void OngetProviderListOperationCompleted(object arg) {
            if ((this.getProviderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderListCompleted(this, new getProviderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefFeeDsecVO[] getProviderFeeItems([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getProviderFeeItems", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((RefFeeDsecVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getProviderFeeItemsAsync(string arg0, string arg1, string arg2, string arg3) {
            this.getProviderFeeItemsAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getProviderFeeItemsAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.getProviderFeeItemsOperationCompleted == null)) {
                this.getProviderFeeItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderFeeItemsOperationCompleted);
            }
            this.InvokeAsync("getProviderFeeItems", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getProviderFeeItemsOperationCompleted, userState);
        }
        
        private void OngetProviderFeeItemsOperationCompleted(object arg) {
            if ((this.getProviderFeeItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderFeeItemsCompleted(this, new getProviderFeeItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isExternalExamProvider([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("isExternalExamProvider", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isExternalExamProviderAsync(string arg0, string arg1) {
            this.isExternalExamProviderAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void isExternalExamProviderAsync(string arg0, string arg1, object userState) {
            if ((this.isExternalExamProviderOperationCompleted == null)) {
                this.isExternalExamProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisExternalExamProviderOperationCompleted);
            }
            this.InvokeAsync("isExternalExamProvider", new object[] {
                        arg0,
                        arg1}, this.isExternalExamProviderOperationCompleted, userState);
        }
        
        private void OnisExternalExamProviderOperationCompleted(object arg) {
            if ((this.isExternalExamProviderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isExternalExamProviderCompleted(this, new isExternalExamProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProviderModel[] getProvidersByExamNbr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getProvidersByExamNbr", new object[] {
                        arg0,
                        arg1});
            return ((ProviderModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getProvidersByExamNbrAsync(string arg0, string arg1) {
            this.getProvidersByExamNbrAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getProvidersByExamNbrAsync(string arg0, string arg1, object userState) {
            if ((this.getProvidersByExamNbrOperationCompleted == null)) {
                this.getProvidersByExamNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProvidersByExamNbrOperationCompleted);
            }
            this.InvokeAsync("getProvidersByExamNbr", new object[] {
                        arg0,
                        arg1}, this.getProvidersByExamNbrOperationCompleted, userState);
        }
        
        private void OngetProvidersByExamNbrOperationCompleted(object arg) {
            if ((this.getProvidersByExamNbrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProvidersByExamNbrCompleted(this, new getProvidersByExamNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProviderModel4WS[] getProviderListByUserSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getProviderListByUserSeqNbr", new object[] {
                        arg0,
                        arg1});
            return ((ProviderModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getProviderListByUserSeqNbrAsync(string arg0, string arg1) {
            this.getProviderListByUserSeqNbrAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getProviderListByUserSeqNbrAsync(string arg0, string arg1, object userState) {
            if ((this.getProviderListByUserSeqNbrOperationCompleted == null)) {
                this.getProviderListByUserSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderListByUserSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getProviderListByUserSeqNbr", new object[] {
                        arg0,
                        arg1}, this.getProviderListByUserSeqNbrOperationCompleted, userState);
        }
        
        private void OngetProviderListByUserSeqNbrOperationCompleted(object arg) {
            if ((this.getProviderListByUserSeqNbrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderListByUserSeqNbrCompleted(this, new getProviderListByUserSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProviderModel4WS getProviderByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ProviderPKModel4WS arg0) {
            object[] results = this.Invoke("getProviderByPK", new object[] {
                        arg0});
            return ((ProviderModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getProviderByPKAsync(ProviderPKModel4WS arg0) {
            this.getProviderByPKAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getProviderByPKAsync(ProviderPKModel4WS arg0, object userState) {
            if ((this.getProviderByPKOperationCompleted == null)) {
                this.getProviderByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderByPKOperationCompleted);
            }
            this.InvokeAsync("getProviderByPK", new object[] {
                        arg0}, this.getProviderByPKOperationCompleted, userState);
        }
        
        private void OngetProviderByPKOperationCompleted(object arg) {
            if ((this.getProviderByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderByPKCompleted(this, new getProviderByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProviderListCompletedEventHandler(object sender, getProviderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProviderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProviderModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProviderModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProviderFeeItemsCompletedEventHandler(object sender, getProviderFeeItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderFeeItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProviderFeeItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefFeeDsecVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefFeeDsecVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isExternalExamProviderCompletedEventHandler(object sender, isExternalExamProviderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isExternalExamProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isExternalExamProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProvidersByExamNbrCompletedEventHandler(object sender, getProvidersByExamNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProvidersByExamNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProvidersByExamNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProviderModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProviderModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProviderListByUserSeqNbrCompletedEventHandler(object sender, getProviderListByUserSeqNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderListByUserSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProviderListByUserSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProviderModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProviderModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProviderByPKCompletedEventHandler(object sender, getProviderByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProviderByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProviderModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProviderModel4WS)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591