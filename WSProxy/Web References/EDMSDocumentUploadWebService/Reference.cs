/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2009-2013
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 125652 2009-03-31 11:42:41Z ACHIEVO\jackie.yu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "EDMSDocumentUploadWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    public partial class EDMSDocumentUploadWebServiceService :Microsoft.Web.Services3.WebServicesClientProtocol
    {
        private System.Threading.SendOrPostCallback updateInspectionByCSVOperationCompleted;

        private System.Threading.SendOrPostCallback doDownloadOperationCompleted;

        private System.Threading.SendOrPostCallback doUpload4PartialCapOperationCompleted;

        private System.Threading.SendOrPostCallback doDownload4PartialCapOperationCompleted;

        private System.Threading.SendOrPostCallback doUploadOperationCompleted;

        private System.Threading.SendOrPostCallback updateExamListByCSVOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public EDMSDocumentUploadWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event updateInspectionByCSVCompletedEventHandler updateInspectionByCSVCompleted;

        /// <remarks/>
        public event doDownloadCompletedEventHandler doDownloadCompleted;

        /// <remarks/>
        public event doUpload4PartialCapCompletedEventHandler doUpload4PartialCapCompleted;

        /// <remarks/>
        public event doDownload4PartialCapCompletedEventHandler doDownload4PartialCapCompleted;

        /// <remarks/>
        public event doUploadCompletedEventHandler doUploadCompleted;

        /// <remarks/>
        public event updateExamListByCSVCompletedEventHandler updateExamListByCSVCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EMSEResultBaseModel4WS updateInspectionByCSV([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("updateInspectionByCSV", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((EMSEResultBaseModel4WS)(results[0]));
        }

        /// <remarks/>
        public void updateInspectionByCSVAsync(string arg0, DocumentModel arg1, string arg2)
        {
            this.updateInspectionByCSVAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void updateInspectionByCSVAsync(string arg0, DocumentModel arg1, string arg2, object userState)
        {
            if ((this.updateInspectionByCSVOperationCompleted == null))
            {
                this.updateInspectionByCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateInspectionByCSVOperationCompleted);
            }
            this.InvokeAsync("updateInspectionByCSV", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateInspectionByCSVOperationCompleted, userState);
        }

        private void OnupdateInspectionByCSVOperationCompleted(object arg)
        {
            if ((this.updateInspectionByCSVCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateInspectionByCSVCompleted(this, new updateInspectionByCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel doDownload([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] EntityModel arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] EdmsPolicyModel arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg5, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6)
        {
            object[] results = this.Invoke("doDownload", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((DocumentModel)(results[0]));
        }

        /// <remarks/>
        public void doDownloadAsync(string arg0, string arg1, string arg2, EntityModel arg3, EdmsPolicyModel arg4, long arg5, string arg6)
        {
            this.doDownloadAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }

        /// <remarks/>
        public void doDownloadAsync(string arg0, string arg1, string arg2, EntityModel arg3, EdmsPolicyModel arg4, long arg5, string arg6, object userState)
        {
            if ((this.doDownloadOperationCompleted == null))
            {
                this.doDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoDownloadOperationCompleted);
            }
            this.InvokeAsync("doDownload", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.doDownloadOperationCompleted, userState);
        }

        private void OndoDownloadOperationCompleted(object arg)
        {
            if ((this.doDownloadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doDownloadCompleted(this, new doDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EMSEResultBaseModel4WS doUpload4PartialCap([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel arg4)
        {
            object[] results = this.Invoke("doUpload4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((EMSEResultBaseModel4WS)(results[0]));
        }

        /// <remarks/>
        public void doUpload4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3, DocumentModel arg4)
        {
            this.doUpload4PartialCapAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void doUpload4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3, DocumentModel arg4, object userState)
        {
            if ((this.doUpload4PartialCapOperationCompleted == null))
            {
                this.doUpload4PartialCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoUpload4PartialCapOperationCompleted);
            }
            this.InvokeAsync("doUpload4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.doUpload4PartialCapOperationCompleted, userState);
        }

        private void OndoUpload4PartialCapOperationCompleted(object arg)
        {
            if ((this.doUpload4PartialCapCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doUpload4PartialCapCompleted(this, new doUpload4PartialCapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel doDownload4PartialCap([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] EntityModel arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5)
        {
            object[] results = this.Invoke("doDownload4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((DocumentModel)(results[0]));
        }

        /// <remarks/>
        public void doDownload4PartialCapAsync(string arg0, string arg1, string arg2, EntityModel arg3, long arg4, string arg5)
        {
            this.doDownload4PartialCapAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }

        /// <remarks/>
        public void doDownload4PartialCapAsync(string arg0, string arg1, string arg2, EntityModel arg3, long arg4, string arg5, object userState)
        {
            if ((this.doDownload4PartialCapOperationCompleted == null))
            {
                this.doDownload4PartialCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoDownload4PartialCapOperationCompleted);
            }
            this.InvokeAsync("doDownload4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.doDownload4PartialCapOperationCompleted, userState);
        }

        private void OndoDownload4PartialCapOperationCompleted(object arg)
        {
            if ((this.doDownload4PartialCapCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doDownload4PartialCapCompleted(this, new doDownload4PartialCapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EMSEResultBaseModel4WS doUpload([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel arg3,  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            object[] results = this.Invoke("doUpload", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((EMSEResultBaseModel4WS)(results[0]));
        }

        /// <remarks/>
        public void doUploadAsync(string arg0, string arg1, string arg2,DocumentModel arg3, string arg4)
        {
            this.doUploadAsync(arg0, arg1, arg2, arg3, null, arg4);
        }

        /// <remarks/>
        public void doUploadAsync(string arg0, string arg1, string arg2, DocumentModel arg3, string arg4, object userState)
        {
            if ((this.doUploadOperationCompleted == null))
            {
                this.doUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoUploadOperationCompleted);
            }
            this.InvokeAsync("doUpload", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.doUploadOperationCompleted, userState);
        }

        private void OndoUploadOperationCompleted(object arg)
        {
            if ((this.doUploadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doUploadCompleted(this, new doUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EMSEResultBaseModel4WS updateExamListByCSV([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] AttachmentModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ProviderPKModel arg1)
        {
            object[] results = this.Invoke("updateExamListByCSV", new object[] {
                        arg0,
                        arg1});
            return ((EMSEResultBaseModel4WS)(results[0]));
        }

        /// <remarks/>
        public void updateExamListByCSVAsync(AttachmentModel arg0, ProviderPKModel arg1)
        {
            this.updateExamListByCSVAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void updateExamListByCSVAsync(AttachmentModel arg0, ProviderPKModel arg1, object userState)
        {
            if ((this.updateExamListByCSVOperationCompleted == null))
            {
                this.updateExamListByCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExamListByCSVOperationCompleted);
            }
            this.InvokeAsync("updateExamListByCSV", new object[] {
                        arg0,
                        arg1}, this.updateExamListByCSVOperationCompleted, userState);
        }

        private void OnupdateExamListByCSVOperationCompleted(object arg)
        {
            if ((this.updateExamListByCSVCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExamListByCSVCompleted(this, new updateExamListByCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateInspectionByCSVCompletedEventHandler(object sender, updateInspectionByCSVCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateInspectionByCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal updateInspectionByCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMSEResultBaseModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMSEResultBaseModel4WS)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doDownloadCompletedEventHandler(object sender, doDownloadCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DocumentModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doUpload4PartialCapCompletedEventHandler(object sender, doUpload4PartialCapCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doUpload4PartialCapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doUpload4PartialCapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMSEResultBaseModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMSEResultBaseModel4WS)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doDownload4PartialCapCompletedEventHandler(object sender, doDownload4PartialCapCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doDownload4PartialCapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doDownload4PartialCapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DocumentModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doUploadCompletedEventHandler(object sender, doUploadCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal doUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMSEResultBaseModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMSEResultBaseModel4WS)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateExamListByCSVCompletedEventHandler(object sender, updateExamListByCSVCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateExamListByCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal updateExamListByCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EMSEResultBaseModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EMSEResultBaseModel4WS)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591