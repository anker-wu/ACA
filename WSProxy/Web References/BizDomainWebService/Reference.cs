/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2010
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 179034 2010-08-16 09:17:55Z ACHIEVO\jackie.yu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BizDomainWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class BizDomainWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getBizDomainValueListOperationCompleted;
        
        private System.Threading.SendOrPostCallback editBizDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBizDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBizDomainValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAndEditBizDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBizDomainListByModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback isExistBizDomainValueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BizDomainWebServiceService() {
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getBizDomainValueListCompletedEventHandler getBizDomainValueListCompleted;
        
        /// <remarks/>
        public event editBizDomainCompletedEventHandler editBizDomainCompleted;
        
        /// <remarks/>
        public event createBizDomainCompletedEventHandler createBizDomainCompleted;
        
        /// <remarks/>
        public event getBizDomainValueCompletedEventHandler getBizDomainValueCompleted;
        
        /// <remarks/>
        public event createAndEditBizDomainCompletedEventHandler createAndEditBizDomainCompleted;
        
        /// <remarks/>
        public event getBizDomainListByModelCompletedEventHandler getBizDomainListByModelCompleted;
        
        /// <remarks/>
        public event isExistBizDomainValueCompletedEventHandler isExistBizDomainValueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getBizDomainValueList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2) {
            object[] results = this.Invoke("getBizDomainValueList", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getBizDomainValueListAsync(string arg0, string arg1, bool arg2) {
            this.getBizDomainValueListAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getBizDomainValueListAsync(string arg0, string arg1, bool arg2, object userState) {
            if ((this.getBizDomainValueListOperationCompleted == null)) {
                this.getBizDomainValueListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBizDomainValueListOperationCompleted);
            }
            this.InvokeAsync("getBizDomainValueList", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getBizDomainValueListOperationCompleted, userState);
        }
        
        private void OngetBizDomainValueListOperationCompleted(object arg) {
            if ((this.getBizDomainValueListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBizDomainValueListCompleted(this, new getBizDomainValueListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool editBizDomain([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg1) {
            object[] results = this.Invoke("editBizDomain", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void editBizDomainAsync(BizDomainModel4WS arg0, bool arg1) {
            this.editBizDomainAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void editBizDomainAsync(BizDomainModel4WS arg0, bool arg1, object userState) {
            if ((this.editBizDomainOperationCompleted == null)) {
                this.editBizDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditBizDomainOperationCompleted);
            }
            this.InvokeAsync("editBizDomain", new object[] {
                        arg0,
                        arg1}, this.editBizDomainOperationCompleted, userState);
        }
        
        private void OneditBizDomainOperationCompleted(object arg) {
            if ((this.editBizDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editBizDomainCompleted(this, new editBizDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool createBizDomain([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg1) {
            object[] results = this.Invoke("createBizDomain", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createBizDomainAsync(BizDomainModel4WS arg0, bool arg1) {
            this.createBizDomainAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createBizDomainAsync(BizDomainModel4WS arg0, bool arg1, object userState) {
            if ((this.createBizDomainOperationCompleted == null)) {
                this.createBizDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBizDomainOperationCompleted);
            }
            this.InvokeAsync("createBizDomain", new object[] {
                        arg0,
                        arg1}, this.createBizDomainOperationCompleted, userState);
        }
        
        private void OncreateBizDomainOperationCompleted(object arg) {
            if ((this.createBizDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBizDomainCompleted(this, new createBizDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BizDomainModel4WS[] getBizDomainValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getBizDomainValue", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((BizDomainModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getBizDomainValueAsync(string arg0, string arg1, QueryFormat4WS arg2, bool arg3, string arg4) {
            this.getBizDomainValueAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getBizDomainValueAsync(string arg0, string arg1, QueryFormat4WS arg2, bool arg3, string arg4, object userState) {
            if ((this.getBizDomainValueOperationCompleted == null)) {
                this.getBizDomainValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBizDomainValueOperationCompleted);
            }
            this.InvokeAsync("getBizDomainValue", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getBizDomainValueOperationCompleted, userState);
        }
        
        private void OngetBizDomainValueOperationCompleted(object arg) {
            if ((this.getBizDomainValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBizDomainValueCompleted(this, new getBizDomainValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createAndEditBizDomain([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel4WS[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg1) {
            this.Invoke("createAndEditBizDomain", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void createAndEditBizDomainAsync(BizDomainModel4WS[] arg0, bool arg1) {
            this.createAndEditBizDomainAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createAndEditBizDomainAsync(BizDomainModel4WS[] arg0, bool arg1, object userState) {
            if ((this.createAndEditBizDomainOperationCompleted == null)) {
                this.createAndEditBizDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAndEditBizDomainOperationCompleted);
            }
            this.InvokeAsync("createAndEditBizDomain", new object[] {
                        arg0,
                        arg1}, this.createAndEditBizDomainOperationCompleted, userState);
        }
        
        private void OncreateAndEditBizDomainOperationCompleted(object arg) {
            if ((this.createAndEditBizDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAndEditBizDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BizDomainModel4WS[] getBizDomainListByModel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2) {
            object[] results = this.Invoke("getBizDomainListByModel", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((BizDomainModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getBizDomainListByModelAsync(BizDomainModel4WS arg0, string arg1, bool arg2) {
            this.getBizDomainListByModelAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getBizDomainListByModelAsync(BizDomainModel4WS arg0, string arg1, bool arg2, object userState) {
            if ((this.getBizDomainListByModelOperationCompleted == null)) {
                this.getBizDomainListByModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBizDomainListByModelOperationCompleted);
            }
            this.InvokeAsync("getBizDomainListByModel", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getBizDomainListByModelOperationCompleted, userState);
        }
        
        private void OngetBizDomainListByModelOperationCompleted(object arg) {
            if ((this.getBizDomainListByModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBizDomainListByModelCompleted(this, new getBizDomainListByModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string isExistBizDomainValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2) {
            object[] results = this.Invoke("isExistBizDomainValue", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isExistBizDomainValueAsync(string arg0, string arg1, string[] arg2) {
            this.isExistBizDomainValueAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void isExistBizDomainValueAsync(string arg0, string arg1, string[] arg2, object userState) {
            if ((this.isExistBizDomainValueOperationCompleted == null)) {
                this.isExistBizDomainValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisExistBizDomainValueOperationCompleted);
            }
            this.InvokeAsync("isExistBizDomainValue", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.isExistBizDomainValueOperationCompleted, userState);
        }
        
        private void OnisExistBizDomainValueOperationCompleted(object arg) {
            if ((this.isExistBizDomainValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isExistBizDomainValueCompleted(this, new isExistBizDomainValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
 
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getBizDomainValueListCompletedEventHandler(object sender, getBizDomainValueListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBizDomainValueListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBizDomainValueListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void editBizDomainCompletedEventHandler(object sender, editBizDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editBizDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editBizDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void createBizDomainCompletedEventHandler(object sender, createBizDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBizDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBizDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getBizDomainValueCompletedEventHandler(object sender, getBizDomainValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBizDomainValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBizDomainValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BizDomainModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BizDomainModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void createAndEditBizDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getBizDomainListByModelCompletedEventHandler(object sender, getBizDomainListByModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBizDomainListByModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBizDomainListByModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BizDomainModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BizDomainModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void isExistBizDomainValueCompletedEventHandler(object sender, isExistBizDomainValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isExistBizDomainValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isExistBizDomainValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591