/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2012
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 235374 2012-10-18 10:09:52Z ACHIEVO\alan.hu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RefAddressWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XContactAddressTypeSettingPKModel))]
    public partial class RefAddressWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getContactAddressValidationSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressParcelNbrByAddressModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressCondition4SuperAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContactAddressListFromExternalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContactAddressTypesByContactTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressListByTrustAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefAddressByRefAddressModelParcelModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressSourceSeqNbrByRefAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAPOListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefAddressByPKOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RefAddressWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getContactAddressValidationSettingCompletedEventHandler getContactAddressValidationSettingCompleted;
        
        /// <remarks/>
        public event getAddressParcelNbrByAddressModelCompletedEventHandler getAddressParcelNbrByAddressModelCompleted;
        
        /// <remarks/>
        public event getAddressCondition4SuperAgencyCompletedEventHandler getAddressCondition4SuperAgencyCompleted;
        
        /// <remarks/>
        public event getContactAddressListFromExternalCompletedEventHandler getContactAddressListFromExternalCompleted;
        
        /// <remarks/>
        public event getContactAddressTypesByContactTypeCompletedEventHandler getContactAddressTypesByContactTypeCompleted;
        
        /// <remarks/>
        public event getAddressListByTrustAccountCompletedEventHandler getAddressListByTrustAccountCompleted;
        
        /// <remarks/>
        public event getAddressConditionCompletedEventHandler getAddressConditionCompleted;
        
        /// <remarks/>
        public event getRefAddressByRefAddressModelParcelModelCompletedEventHandler getRefAddressByRefAddressModelParcelModelCompleted;
        
        /// <remarks/>
        public event getAddressSourceSeqNbrByRefAddressIdCompletedEventHandler getAddressSourceSeqNbrByRefAddressIdCompleted;
        
        /// <remarks/>
        public event getAPOListCompletedEventHandler getAPOListCompleted;
        
        /// <remarks/>
        public event getRefAddressByPKCompletedEventHandler getRefAddressByPKCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XContactAddressTypeSettingModel getContactAddressValidationSetting([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getContactAddressValidationSetting", new object[] {
                        arg0,
                        arg1});
            return ((XContactAddressTypeSettingModel)(results[0]));
        }
        
        /// <remarks/>
        public void getContactAddressValidationSettingAsync(string arg0, string arg1) {
            this.getContactAddressValidationSettingAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getContactAddressValidationSettingAsync(string arg0, string arg1, object userState) {
            if ((this.getContactAddressValidationSettingOperationCompleted == null)) {
                this.getContactAddressValidationSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactAddressValidationSettingOperationCompleted);
            }
            this.InvokeAsync("getContactAddressValidationSetting", new object[] {
                        arg0,
                        arg1}, this.getContactAddressValidationSettingOperationCompleted, userState);
        }
        
        private void OngetContactAddressValidationSettingOperationCompleted(object arg) {
            if ((this.getContactAddressValidationSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactAddressValidationSettingCompleted(this, new getContactAddressValidationSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefAddressModel[] getAddressParcelNbrByAddressModel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefAddressModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2) {
            object[] results = this.Invoke("getAddressParcelNbrByAddressModel", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((RefAddressModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressParcelNbrByAddressModelAsync(string arg0, RefAddressModel arg1, bool arg2) {
            this.getAddressParcelNbrByAddressModelAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getAddressParcelNbrByAddressModelAsync(string arg0, RefAddressModel arg1, bool arg2, object userState) {
            if ((this.getAddressParcelNbrByAddressModelOperationCompleted == null)) {
                this.getAddressParcelNbrByAddressModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressParcelNbrByAddressModelOperationCompleted);
            }
            this.InvokeAsync("getAddressParcelNbrByAddressModel", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getAddressParcelNbrByAddressModelOperationCompleted, userState);
        }
        
        private void OngetAddressParcelNbrByAddressModelOperationCompleted(object arg) {
            if ((this.getAddressParcelNbrByAddressModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressParcelNbrByAddressModelCompleted(this, new getAddressParcelNbrByAddressModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefAddressModel getAddressCondition4SuperAgency([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getAddressCondition4SuperAgency", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((RefAddressModel)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressCondition4SuperAgencyAsync(string[] arg0, long arg1, string arg2) {
            this.getAddressCondition4SuperAgencyAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getAddressCondition4SuperAgencyAsync(string[] arg0, long arg1, string arg2, object userState) {
            if ((this.getAddressCondition4SuperAgencyOperationCompleted == null)) {
                this.getAddressCondition4SuperAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressCondition4SuperAgencyOperationCompleted);
            }
            this.InvokeAsync("getAddressCondition4SuperAgency", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getAddressCondition4SuperAgencyOperationCompleted, userState);
        }
        
        private void OngetAddressCondition4SuperAgencyOperationCompleted(object arg) {
            if ((this.getAddressCondition4SuperAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressCondition4SuperAgencyCompleted(this, new getAddressCondition4SuperAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel[] getContactAddressListFromExternal([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ContactAddressModel arg1) {
            object[] results = this.Invoke("getContactAddressListFromExternal", new object[] {
                        arg0,
                        arg1});
            return ((ContactAddressModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getContactAddressListFromExternalAsync(string arg0, ContactAddressModel arg1) {
            this.getContactAddressListFromExternalAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getContactAddressListFromExternalAsync(string arg0, ContactAddressModel arg1, object userState) {
            if ((this.getContactAddressListFromExternalOperationCompleted == null)) {
                this.getContactAddressListFromExternalOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactAddressListFromExternalOperationCompleted);
            }
            this.InvokeAsync("getContactAddressListFromExternal", new object[] {
                        arg0,
                        arg1}, this.getContactAddressListFromExternalOperationCompleted, userState);
        }
        
        private void OngetContactAddressListFromExternalOperationCompleted(object arg) {
            if ((this.getContactAddressListFromExternalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactAddressListFromExternalCompleted(this, new getContactAddressListFromExternalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRefContactAddressTypeModel[] getContactAddressTypesByContactType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getContactAddressTypesByContactType", new object[] {
                        arg0,
                        arg1});
            return ((XRefContactAddressTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getContactAddressTypesByContactTypeAsync(string arg0, string arg1) {
            this.getContactAddressTypesByContactTypeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getContactAddressTypesByContactTypeAsync(string arg0, string arg1, object userState) {
            if ((this.getContactAddressTypesByContactTypeOperationCompleted == null)) {
                this.getContactAddressTypesByContactTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactAddressTypesByContactTypeOperationCompleted);
            }
            this.InvokeAsync("getContactAddressTypesByContactType", new object[] {
                        arg0,
                        arg1}, this.getContactAddressTypesByContactTypeOperationCompleted, userState);
        }
        
        private void OngetContactAddressTypesByContactTypeOperationCompleted(object arg) {
            if ((this.getContactAddressTypesByContactTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactAddressTypesByContactTypeCompleted(this, new getContactAddressTypesByContactTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefAddressModel[] getAddressListByTrustAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getAddressListByTrustAccount", new object[] {
                        arg0,
                        arg1});
            return ((RefAddressModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getAddressListByTrustAccountAsync(string arg0, string arg1) {
            this.getAddressListByTrustAccountAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getAddressListByTrustAccountAsync(string arg0, string arg1, object userState) {
            if ((this.getAddressListByTrustAccountOperationCompleted == null)) {
                this.getAddressListByTrustAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressListByTrustAccountOperationCompleted);
            }
            this.InvokeAsync("getAddressListByTrustAccount", new object[] {
                        arg0,
                        arg1}, this.getAddressListByTrustAccountOperationCompleted, userState);
        }
        
        private void OngetAddressListByTrustAccountOperationCompleted(object arg) {
            if ((this.getAddressListByTrustAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressListByTrustAccountCompleted(this, new getAddressListByTrustAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefAddressModel getAddressCondition([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ParcelInfoModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getAddressCondition", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((RefAddressModel)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressConditionAsync(string[] arg0, ParcelInfoModel arg1, string arg2) {
            this.getAddressConditionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getAddressConditionAsync(string[] arg0, ParcelInfoModel arg1, string arg2, object userState) {
            if ((this.getAddressConditionOperationCompleted == null)) {
                this.getAddressConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressConditionOperationCompleted);
            }
            this.InvokeAsync("getAddressCondition", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getAddressConditionOperationCompleted, userState);
        }
        
        private void OngetAddressConditionOperationCompleted(object arg) {
            if ((this.getAddressConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressConditionCompleted(this, new getAddressConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchResultModel getRefAddressByRefAddressModelParcelModel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefAddressModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ParcelModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg3) {
            object[] results = this.Invoke("getRefAddressByRefAddressModelParcelModel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((SearchResultModel)(results[0]));
        }
        
        /// <remarks/>
        public void getRefAddressByRefAddressModelParcelModelAsync(string arg0, RefAddressModel arg1, ParcelModel arg2) {
            this.getRefAddressByRefAddressModelParcelModelAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getRefAddressByRefAddressModelParcelModelAsync(string arg0, RefAddressModel arg1, ParcelModel arg2, object userState) {
            if ((this.getRefAddressByRefAddressModelParcelModelOperationCompleted == null)) {
                this.getRefAddressByRefAddressModelParcelModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefAddressByRefAddressModelParcelModelOperationCompleted);
            }
            this.InvokeAsync("getRefAddressByRefAddressModelParcelModel", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getRefAddressByRefAddressModelParcelModelOperationCompleted, userState);
        }
        
        private void OngetRefAddressByRefAddressModelParcelModelOperationCompleted(object arg) {
            if ((this.getRefAddressByRefAddressModelParcelModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefAddressByRefAddressModelParcelModelCompleted(this, new getRefAddressByRefAddressModelParcelModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAddressSourceSeqNbrByRefAddressId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getAddressSourceSeqNbrByRefAddressId", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressSourceSeqNbrByRefAddressIdAsync(string arg0) {
            this.getAddressSourceSeqNbrByRefAddressIdAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getAddressSourceSeqNbrByRefAddressIdAsync(string arg0, object userState) {
            if ((this.getAddressSourceSeqNbrByRefAddressIdOperationCompleted == null)) {
                this.getAddressSourceSeqNbrByRefAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressSourceSeqNbrByRefAddressIdOperationCompleted);
            }
            this.InvokeAsync("getAddressSourceSeqNbrByRefAddressId", new object[] {
                        arg0}, this.getAddressSourceSeqNbrByRefAddressIdOperationCompleted, userState);
        }
        
        private void OngetAddressSourceSeqNbrByRefAddressIdOperationCompleted(object arg) {
            if ((this.getAddressSourceSeqNbrByRefAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressSourceSeqNbrByRefAddressIdCompleted(this, new getAddressSourceSeqNbrByRefAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchResultModel getAPOList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ParcelInfoModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3) {
            object[] results = this.Invoke("getAPOList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((SearchResultModel)(results[0]));
        }
        
        /// <remarks/>
        public void getAPOListAsync(string arg0, ParcelInfoModel arg1, QueryFormat arg2, bool arg3) {
            this.getAPOListAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getAPOListAsync(string arg0, ParcelInfoModel arg1, QueryFormat arg2, bool arg3, object userState) {
            if ((this.getAPOListOperationCompleted == null)) {
                this.getAPOListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAPOListOperationCompleted);
            }
            this.InvokeAsync("getAPOList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getAPOListOperationCompleted, userState);
        }
        
        private void OngetAPOListOperationCompleted(object arg) {
            if ((this.getAPOListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAPOListCompleted(this, new getAPOListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefAddressModel getRefAddressByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefAddressModel arg1) {
            object[] results = this.Invoke("getRefAddressByPK", new object[] {
                        arg0,
                        arg1});
            return ((RefAddressModel)(results[0]));
        }
        
        /// <remarks/>
        public void getRefAddressByPKAsync(string arg0, RefAddressModel arg1) {
            this.getRefAddressByPKAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getRefAddressByPKAsync(string arg0, RefAddressModel arg1, object userState) {
            if ((this.getRefAddressByPKOperationCompleted == null)) {
                this.getRefAddressByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefAddressByPKOperationCompleted);
            }
            this.InvokeAsync("getRefAddressByPK", new object[] {
                        arg0,
                        arg1}, this.getRefAddressByPKOperationCompleted, userState);
        }
        
        private void OngetRefAddressByPKOperationCompleted(object arg) {
            if ((this.getRefAddressByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefAddressByPKCompleted(this, new getRefAddressByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContactAddressValidationSettingCompletedEventHandler(object sender, getContactAddressValidationSettingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactAddressValidationSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getContactAddressValidationSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public XContactAddressTypeSettingModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((XContactAddressTypeSettingModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressParcelNbrByAddressModelCompletedEventHandler(object sender, getAddressParcelNbrByAddressModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressParcelNbrByAddressModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressParcelNbrByAddressModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressCondition4SuperAgencyCompletedEventHandler(object sender, getAddressCondition4SuperAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressCondition4SuperAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressCondition4SuperAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContactAddressListFromExternalCompletedEventHandler(object sender, getContactAddressListFromExternalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactAddressListFromExternalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getContactAddressListFromExternalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ContactAddressModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ContactAddressModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContactAddressTypesByContactTypeCompletedEventHandler(object sender, getContactAddressTypesByContactTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactAddressTypesByContactTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContactAddressTypesByContactTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XRefContactAddressTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XRefContactAddressTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressListByTrustAccountCompletedEventHandler(object sender, getAddressListByTrustAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressListByTrustAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressListByTrustAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressConditionCompletedEventHandler(object sender, getAddressConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefAddressByRefAddressModelParcelModelCompletedEventHandler(object sender, getRefAddressByRefAddressModelParcelModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefAddressByRefAddressModelParcelModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefAddressByRefAddressModelParcelModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAddressSourceSeqNbrByRefAddressIdCompletedEventHandler(object sender, getAddressSourceSeqNbrByRefAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressSourceSeqNbrByRefAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressSourceSeqNbrByRefAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefAddressByPKCompletedEventHandler(object sender, getRefAddressByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefAddressByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefAddressByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefAddressModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefAddressModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591