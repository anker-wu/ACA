/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2014
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 266925 2014-03-04 10:05:07Z ACHIEVO\james.shi $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WorkflowWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class WorkflowWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTaskAuditByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getADHocTaskItemByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTaskSpecInfo4CapOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProcessRelationByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskItemByPKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getADHocTaskAuditByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskItemByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskAuditByPKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskHistoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskInspHistoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDepartmentNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubProcessesByPKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProcessesDescOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WorkflowWebServiceService() {
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTaskAuditByCapIDCompletedEventHandler getTaskAuditByCapIDCompleted;
        
        /// <remarks/>
        public event getADHocTaskItemByCapIDCompletedEventHandler getADHocTaskItemByCapIDCompleted;
        
        /// <remarks/>
        public event getAllTaskSpecInfo4CapCompletedEventHandler getAllTaskSpecInfo4CapCompleted;
        
        /// <remarks/>
        public event getProcessRelationByCapIDCompletedEventHandler getProcessRelationByCapIDCompleted;
        
        /// <remarks/>
        public event getTaskItemByPKCompletedEventHandler getTaskItemByPKCompleted;
        
        /// <remarks/>
        public event getADHocTaskAuditByCapIDCompletedEventHandler getADHocTaskAuditByCapIDCompleted;
        
        /// <remarks/>
        public event getTaskItemByCapIDCompletedEventHandler getTaskItemByCapIDCompleted;
        
        /// <remarks/>
        public event getTaskAuditByPKCompletedEventHandler getTaskAuditByPKCompleted;
        
        /// <remarks/>
        public event getTaskHistoryListCompletedEventHandler getTaskHistoryListCompleted;
        
        /// <remarks/>
        public event getTaskInspHistoryListCompletedEventHandler getTaskInspHistoryListCompleted;
        
        /// <remarks/>
        public event getDepartmentNameCompletedEventHandler getDepartmentNameCompleted;
        
        /// <remarks/>
        public event getSubProcessesByPKCompletedEventHandler getSubProcessesByPKCompleted;

        /// <remarks/>
        public event getProcessesDescCompletedEventHandler getProcessesDescCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getTaskAuditByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getTaskAuditByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskAuditByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2) {
            this.getTaskAuditByCapIDAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getTaskAuditByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2, object userState) {
            if ((this.getTaskAuditByCapIDOperationCompleted == null)) {
                this.getTaskAuditByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskAuditByCapIDOperationCompleted);
            }
            this.InvokeAsync("getTaskAuditByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getTaskAuditByCapIDOperationCompleted, userState);
        }
        
        private void OngetTaskAuditByCapIDOperationCompleted(object arg) {
            if ((this.getTaskAuditByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskAuditByCapIDCompleted(this, new getTaskAuditByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getADHocTaskItemByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getADHocTaskItemByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getADHocTaskItemByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2) {
            this.getADHocTaskItemByCapIDAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getADHocTaskItemByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2, object userState) {
            if ((this.getADHocTaskItemByCapIDOperationCompleted == null)) {
                this.getADHocTaskItemByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetADHocTaskItemByCapIDOperationCompleted);
            }
            this.InvokeAsync("getADHocTaskItemByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getADHocTaskItemByCapIDOperationCompleted, userState);
        }
        
        private void OngetADHocTaskItemByCapIDOperationCompleted(object arg) {
            if ((this.getADHocTaskItemByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getADHocTaskItemByCapIDCompleted(this, new getADHocTaskItemByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskSpecificInfoModel4WS[] getAllTaskSpecInfo4Cap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg3) {
            object[] results = this.Invoke("getAllTaskSpecInfo4Cap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((TaskSpecificInfoModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllTaskSpecInfo4CapAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3) {
            this.getAllTaskSpecInfo4CapAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getAllTaskSpecInfo4CapAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3, object userState) {
            if ((this.getAllTaskSpecInfo4CapOperationCompleted == null)) {
                this.getAllTaskSpecInfo4CapOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTaskSpecInfo4CapOperationCompleted);
            }
            this.InvokeAsync("getAllTaskSpecInfo4Cap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getAllTaskSpecInfo4CapOperationCompleted, userState);
        }
        
        private void OngetAllTaskSpecInfo4CapOperationCompleted(object arg) {
            if ((this.getAllTaskSpecInfo4CapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTaskSpecInfo4CapCompleted(this, new getAllTaskSpecInfo4CapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProcessRelationModel4WS[] getProcessRelationByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getProcessRelationByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ProcessRelationModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getProcessRelationByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2) {
            this.getProcessRelationByCapIDAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getProcessRelationByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2, object userState) {
            if ((this.getProcessRelationByCapIDOperationCompleted == null)) {
                this.getProcessRelationByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProcessRelationByCapIDOperationCompleted);
            }
            this.InvokeAsync("getProcessRelationByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getProcessRelationByCapIDOperationCompleted, userState);
        }
        
        private void OngetProcessRelationByCapIDOperationCompleted(object arg) {
            if ((this.getProcessRelationByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProcessRelationByCapIDCompleted(this, new getProcessRelationByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS getTaskItemByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg3) {
            object[] results = this.Invoke("getTaskItemByPK", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((TaskItemModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskItemByPKAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3) {
            this.getTaskItemByPKAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getTaskItemByPKAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3, object userState) {
            if ((this.getTaskItemByPKOperationCompleted == null)) {
                this.getTaskItemByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskItemByPKOperationCompleted);
            }
            this.InvokeAsync("getTaskItemByPK", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getTaskItemByPKOperationCompleted, userState);
        }
        
        private void OngetTaskItemByPKOperationCompleted(object arg) {
            if ((this.getTaskItemByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskItemByPKCompleted(this, new getTaskItemByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getADHocTaskAuditByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getADHocTaskAuditByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getADHocTaskAuditByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2) {
            this.getADHocTaskAuditByCapIDAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getADHocTaskAuditByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2, object userState) {
            if ((this.getADHocTaskAuditByCapIDOperationCompleted == null)) {
                this.getADHocTaskAuditByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetADHocTaskAuditByCapIDOperationCompleted);
            }
            this.InvokeAsync("getADHocTaskAuditByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getADHocTaskAuditByCapIDOperationCompleted, userState);
        }
        
        private void OngetADHocTaskAuditByCapIDOperationCompleted(object arg) {
            if ((this.getADHocTaskAuditByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getADHocTaskAuditByCapIDCompleted(this, new getADHocTaskAuditByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getTaskItemByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getTaskItemByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskItemByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2) {
            this.getTaskItemByCapIDAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getTaskItemByCapIDAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, string arg2, object userState) {
            if ((this.getTaskItemByCapIDOperationCompleted == null)) {
                this.getTaskItemByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskItemByCapIDOperationCompleted);
            }
            this.InvokeAsync("getTaskItemByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getTaskItemByCapIDOperationCompleted, userState);
        }
        
        private void OngetTaskItemByCapIDOperationCompleted(object arg) {
            if ((this.getTaskItemByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskItemByCapIDCompleted(this, new getTaskItemByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS getTaskAuditByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getTaskAuditByPK", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((TaskItemModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskAuditByPKAsync(CapIDModel4WS arg0, string arg1, string arg2, long arg3, string arg4) {
            this.getTaskAuditByPKAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getTaskAuditByPKAsync(CapIDModel4WS arg0, string arg1, string arg2, long arg3, string arg4, object userState) {
            if ((this.getTaskAuditByPKOperationCompleted == null)) {
                this.getTaskAuditByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskAuditByPKOperationCompleted);
            }
            this.InvokeAsync("getTaskAuditByPK", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getTaskAuditByPKOperationCompleted, userState);
        }
        
        private void OngetTaskAuditByPKOperationCompleted(object arg) {
            if ((this.getTaskAuditByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskAuditByPKCompleted(this, new getTaskAuditByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getTaskHistoryList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg1) {
            object[] results = this.Invoke("getTaskHistoryList", new object[] {
                        arg0,
                        arg1});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskHistoryListAsync(CapIDModel4WS arg0, QueryFormat4WS arg1) {
            this.getTaskHistoryListAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getTaskHistoryListAsync(CapIDModel4WS arg0, QueryFormat4WS arg1, object userState) {
            if ((this.getTaskHistoryListOperationCompleted == null)) {
                this.getTaskHistoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskHistoryListOperationCompleted);
            }
            this.InvokeAsync("getTaskHistoryList", new object[] {
                        arg0,
                        arg1}, this.getTaskHistoryListOperationCompleted, userState);
        }
        
        private void OngetTaskHistoryListOperationCompleted(object arg) {
            if ((this.getTaskHistoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskHistoryListCompleted(this, new getTaskHistoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskItemModel4WS[] getTaskInspHistoryList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0) {
            object[] results = this.Invoke("getTaskInspHistoryList", new object[] {
                        arg0});
            return ((TaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskInspHistoryListAsync(CapIDModel4WS arg0) {
            this.getTaskInspHistoryListAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getTaskInspHistoryListAsync(CapIDModel4WS arg0, object userState) {
            if ((this.getTaskInspHistoryListOperationCompleted == null)) {
                this.getTaskInspHistoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskInspHistoryListOperationCompleted);
            }
            this.InvokeAsync("getTaskInspHistoryList", new object[] {
                        arg0}, this.getTaskInspHistoryListOperationCompleted, userState);
        }
        
        private void OngetTaskInspHistoryListOperationCompleted(object arg) {
            if ((this.getTaskInspHistoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskInspHistoryListCompleted(this, new getTaskInspHistoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDepartmentName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg4) {
            object[] results = this.Invoke("getDepartmentName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDepartmentNameAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3, bool arg4) {
            this.getDepartmentNameAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getDepartmentNameAsync(CapIDModel4WS arg0, string arg1, int arg2, long arg3, bool arg4, object userState) {
            if ((this.getDepartmentNameOperationCompleted == null)) {
                this.getDepartmentNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepartmentNameOperationCompleted);
            }
            this.InvokeAsync("getDepartmentName", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getDepartmentNameOperationCompleted, userState);
        }
        
        private void OngetDepartmentNameOperationCompleted(object arg) {
            if ((this.getDepartmentNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepartmentNameCompleted(this, new getDepartmentNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimpleTaskItemModel4WS[] getSubProcessesByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getSubProcessesByPK", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((SimpleTaskItemModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubProcessesByPKAsync(CapIDModel4WS arg0, string arg1, string arg2) {
            this.getSubProcessesByPKAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getSubProcessesByPKAsync(CapIDModel4WS arg0, string arg1, string arg2, object userState) {
            if ((this.getSubProcessesByPKOperationCompleted == null)) {
                this.getSubProcessesByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubProcessesByPKOperationCompleted);
            }
            this.InvokeAsync("getSubProcessesByPK", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getSubProcessesByPKOperationCompleted, userState);
        }
        
        private void OngetSubProcessesByPKOperationCompleted(object arg) {
            if ((this.getSubProcessesByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubProcessesByPKCompleted(this, new getSubProcessesByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getProcessesDesc([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getProcessesDesc", new object[] {
                        arg0,
                        arg1});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getProcessesDescAsync(CapIDModel[] arg0, string arg1)
        {
            this.getProcessesDescAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getProcessesDescAsync(CapIDModel[] arg0, string arg1, object userState)
        {
            if ((this.getProcessesDescOperationCompleted == null))
            {
                this.getProcessesDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProcessesDescOperationCompleted);
            }
            this.InvokeAsync("getProcessesDesc", new object[] {
                        arg0,
                        arg1}, this.getProcessesDescOperationCompleted, userState);
        }

        private void OngetProcessesDescOperationCompleted(object arg)
        {
            if ((this.getProcessesDescCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProcessesDescCompleted(this, new getProcessesDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskAuditByCapIDCompletedEventHandler(object sender, getTaskAuditByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskAuditByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskAuditByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getADHocTaskItemByCapIDCompletedEventHandler(object sender, getADHocTaskItemByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getADHocTaskItemByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getADHocTaskItemByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getAllTaskSpecInfo4CapCompletedEventHandler(object sender, getAllTaskSpecInfo4CapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTaskSpecInfo4CapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTaskSpecInfo4CapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskSpecificInfoModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskSpecificInfoModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getProcessRelationByCapIDCompletedEventHandler(object sender, getProcessRelationByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProcessRelationByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProcessRelationByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcessRelationModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcessRelationModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskItemByPKCompletedEventHandler(object sender, getTaskItemByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskItemByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskItemByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getADHocTaskAuditByCapIDCompletedEventHandler(object sender, getADHocTaskAuditByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getADHocTaskAuditByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getADHocTaskAuditByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskItemByCapIDCompletedEventHandler(object sender, getTaskItemByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskItemByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskItemByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskAuditByPKCompletedEventHandler(object sender, getTaskAuditByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskAuditByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskAuditByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskHistoryListCompletedEventHandler(object sender, getTaskHistoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskHistoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskHistoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTaskInspHistoryListCompletedEventHandler(object sender, getTaskInspHistoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskInspHistoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskInspHistoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskItemModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getDepartmentNameCompletedEventHandler(object sender, getDepartmentNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepartmentNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepartmentNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getSubProcessesByPKCompletedEventHandler(object sender, getSubProcessesByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubProcessesByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubProcessesByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleTaskItemModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleTaskItemModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProcessesDescCompletedEventHandler(object sender, getProcessesDescCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProcessesDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getProcessesDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591