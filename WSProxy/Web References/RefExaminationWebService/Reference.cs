/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2009-2013
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 130439 2009-05-13 10:02:20Z ACHIEVO\jackie.yu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "RefExaminationWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefExaminationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefEducationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefEducationPKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XRefContinuingEducationAppTypePKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefContinuingEducationPKModel4WS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProviderPKModel4WS))]
	[System.Xml.Serialization.XmlIncludeAttribute(typeof(getRefExaminationListByName))]
    public partial class RefExaminationWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getRefExaminationByPKOperationCompleted;

		private System.Threading.SendOrPostCallback getRefExaminationListFilterByWFRestrictionOperationCompleted;

        private System.Threading.SendOrPostCallback getProviderListByRefExamOperationCompleted;

        private System.Threading.SendOrPostCallback isBeyondAllowanceDateOperationCompleted;

        private System.Threading.SendOrPostCallback getRefExaminationListByProviderOperationCompleted;

        private System.Threading.SendOrPostCallback getRefExaminationListOperationCompleted;

        private System.Threading.SendOrPostCallback getXRefExaminationProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRefExaminationListByNameOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public RefExaminationWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event getRefExaminationByPKCompletedEventHandler getRefExaminationByPKCompleted;

		/// <remarks/>
        public event getRefExaminationListFilterByWFRestrictionCompletedEventHandler getRefExaminationListFilterByWFRestrictionCompleted;

        /// <remarks/>
        public event getProviderListByRefExamCompletedEventHandler getProviderListByRefExamCompleted;

        /// <remarks/>
        public event isBeyondAllowanceDateCompletedEventHandler isBeyondAllowanceDateCompleted;

        /// <remarks/>
        public event getRefExaminationListByProviderCompletedEventHandler getRefExaminationListByProviderCompleted;

        /// <remarks/>
        public event getRefExaminationListCompletedEventHandler getRefExaminationListCompleted;

        /// <remarks/>
        public event getXRefExaminationProviderCompletedEventHandler getXRefExaminationProviderCompleted;
        
        /// <remarks/>
        public event getRefExaminationListByNameCompletedEventHandler getRefExaminationListByNameCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefExaminationModel4WS getRefExaminationByPK([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] RefExaminationPKModel4WS arg0)
        {
            object[] results = this.Invoke("getRefExaminationByPK", new object[] {
                        arg0});
            return ((RefExaminationModel4WS)(results[0]));
        }

        /// <remarks/>
        public void getRefExaminationByPKAsync(RefExaminationPKModel4WS arg0)
        {
            this.getRefExaminationByPKAsync(arg0, null);
        }

        /// <remarks/>
        public void getRefExaminationByPKAsync(RefExaminationPKModel4WS arg0, object userState)
        {
            if ((this.getRefExaminationByPKOperationCompleted == null))
            {
                this.getRefExaminationByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefExaminationByPKOperationCompleted);
            }
            this.InvokeAsync("getRefExaminationByPK", new object[] {
                        arg0}, this.getRefExaminationByPKOperationCompleted, userState);
        }

        private void OngetRefExaminationByPKOperationCompleted(object arg)
        {
            if ((this.getRefExaminationByPKCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefExaminationByPKCompleted(this, new getRefExaminationByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

		/// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefExaminationModel4WS[] getRefExaminationListFilterByWFRestriction([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefExaminationModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getRefExaminationListFilterByWFRestriction", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((RefExaminationModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getRefExaminationListFilterByWFRestrictionAsync(RefExaminationModel4WS arg0, CapIDModel arg1, string arg2) {
            this.getRefExaminationListFilterByWFRestrictionAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getRefExaminationListFilterByWFRestrictionAsync(RefExaminationModel4WS arg0, CapIDModel arg1, string arg2, object userState) {
            if ((this.getRefExaminationListFilterByWFRestrictionOperationCompleted == null)) {
                this.getRefExaminationListFilterByWFRestrictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefExaminationListFilterByWFRestrictionOperationCompleted);
            }
            this.InvokeAsync("getRefExaminationListFilterByWFRestriction", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getRefExaminationListFilterByWFRestrictionOperationCompleted, userState);
        }
        
        private void OngetRefExaminationListFilterByWFRestrictionOperationCompleted(object arg) {
            if ((this.getRefExaminationListFilterByWFRestrictionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefExaminationListFilterByWFRestrictionCompleted(this, new getRefExaminationListFilterByWFRestrictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ProviderModel4WS[] getProviderListByRefExam([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] RefExaminationModel4WS arg0)
        {
            object[] results = this.Invoke("getProviderListByRefExam", new object[] {
                        arg0});
            return ((ProviderModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getProviderListByRefExamAsync(RefExaminationModel4WS arg0)
        {
            this.getProviderListByRefExamAsync(arg0, null);
        }

        /// <remarks/>
        public void getProviderListByRefExamAsync(RefExaminationModel4WS arg0, object userState)
        {
            if ((this.getProviderListByRefExamOperationCompleted == null))
            {
                this.getProviderListByRefExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProviderListByRefExamOperationCompleted);
            }
            this.InvokeAsync("getProviderListByRefExam", new object[] {
                        arg0}, this.getProviderListByRefExamOperationCompleted, userState);
        }

        private void OngetProviderListByRefExamOperationCompleted(object arg)
        {
            if ((this.getProviderListByRefExamCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProviderListByRefExamCompleted(this, new getProviderListByRefExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isBeyondAllowanceDate([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg2Specified, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg3Specified)
        {
            object[] results = this.Invoke("isBeyondAllowanceDate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg2Specified,
                        arg3,
                        arg3Specified});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isBeyondAllowanceDateAsync(string arg0, string arg1, System.DateTime arg2, bool arg2Specified, long arg3, bool arg3Specified)
        {
            this.isBeyondAllowanceDateAsync(arg0, arg1, arg2, arg2Specified, arg3, arg3Specified, null);
        }

        /// <remarks/>
        public void isBeyondAllowanceDateAsync(string arg0, string arg1, System.DateTime arg2, bool arg2Specified, long arg3, bool arg3Specified, object userState)
        {
            if ((this.isBeyondAllowanceDateOperationCompleted == null))
            {
                this.isBeyondAllowanceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisBeyondAllowanceDateOperationCompleted);
            }
            this.InvokeAsync("isBeyondAllowanceDate", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg2Specified,
                        arg3,
                        arg3Specified}, this.isBeyondAllowanceDateOperationCompleted, userState);
        }

        private void OnisBeyondAllowanceDateOperationCompleted(object arg)
        {
            if ((this.isBeyondAllowanceDateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isBeyondAllowanceDateCompleted(this, new isBeyondAllowanceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRefExaminationProviderModel getXRefExaminationProvider([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getXRefExaminationProvider", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((XRefExaminationProviderModel)(results[0]));
        }

        /// <remarks/>
        public void getXRefExaminationProviderAsync(string arg0, string arg1, string arg2)
        {
            this.getXRefExaminationProviderAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getXRefExaminationProviderAsync(string arg0, string arg1, string arg2, object userState)
        {
            if ((this.getXRefExaminationProviderOperationCompleted == null))
            {
                this.getXRefExaminationProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXRefExaminationProviderOperationCompleted);
            }
            this.InvokeAsync("getXRefExaminationProvider", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getXRefExaminationProviderOperationCompleted, userState);
        }

        private void OngetXRefExaminationProviderOperationCompleted(object arg)
        {
            if ((this.getXRefExaminationProviderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXRefExaminationProviderCompleted(this, new getXRefExaminationProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefExaminationModel4WS[] getRefExaminationListByProvider([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ProviderModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg1)
        {
            object[] results = this.Invoke("getRefExaminationListByProvider", new object[] {
                        arg0,
                        arg1});
            return ((RefExaminationModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getRefExaminationListByProviderAsync(ProviderModel4WS arg0, CapTypeModel arg1)
        {
            this.getRefExaminationListByProviderAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getRefExaminationListByProviderAsync(ProviderModel4WS arg0, CapTypeModel arg1, object userState)
        {
            if ((this.getRefExaminationListByProviderOperationCompleted == null))
            {
                this.getRefExaminationListByProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefExaminationListByProviderOperationCompleted);
            }
            this.InvokeAsync("getRefExaminationListByProvider", new object[] {
                        arg0,
                        arg1}, this.getRefExaminationListByProviderOperationCompleted, userState);
        }

        private void OngetRefExaminationListByProviderOperationCompleted(object arg)
        {
            if ((this.getRefExaminationListByProviderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefExaminationListByProviderCompleted(this, new getRefExaminationListByProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefExaminationModel4WS[] getRefExaminationList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] RefExaminationModel4WS arg0)
        {
            object[] results = this.Invoke("getRefExaminationList", new object[] {
                        arg0});
            return ((RefExaminationModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getRefExaminationListAsync(RefExaminationModel4WS arg0)
        {
            this.getRefExaminationListAsync(arg0, null);
        }

        /// <remarks/>
        public void getRefExaminationListAsync(RefExaminationModel4WS arg0, object userState)
        {
            if ((this.getRefExaminationListOperationCompleted == null))
            {
                this.getRefExaminationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefExaminationListOperationCompleted);
            }
            this.InvokeAsync("getRefExaminationList", new object[] {
                        arg0}, this.getRefExaminationListOperationCompleted, userState);
        }

        private void OngetRefExaminationListOperationCompleted(object arg)
        {
            if ((this.getRefExaminationListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefExaminationListCompleted(this, new getRefExaminationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MapEntry4WS[] getRefExaminationListByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getRefExaminationListByName", new object[] {
                        arg0,
                        arg1});
            return ((MapEntry4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getRefExaminationListByNameAsync(string arg0, string arg1) {
            this.getRefExaminationListByNameAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getRefExaminationListByNameAsync(string arg0, string arg1, object userState) {
            if ((this.getRefExaminationListByNameOperationCompleted == null)) {
                this.getRefExaminationListByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefExaminationListByNameOperationCompleted);
            }
            this.InvokeAsync("getRefExaminationListByName", new object[] {
                        arg0,
                        arg1}, this.getRefExaminationListByNameOperationCompleted, userState);
        }
        
        private void OngetRefExaminationListByNameOperationCompleted(object arg) {
            if ((this.getRefExaminationListByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefExaminationListByNameCompleted(this, new getRefExaminationListByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getRefExaminationListByName {
        
        private string arg0Field;
        
        private string arg1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
    }


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefExaminationByPKCompletedEventHandler(object sender, getRefExaminationByPKCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefExaminationByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRefExaminationByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RefExaminationModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RefExaminationModel4WS)(this.results[0]));
            }
        }
    }

	/// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefExaminationListFilterByWFRestrictionCompletedEventHandler(object sender, getRefExaminationListFilterByWFRestrictionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefExaminationListFilterByWFRestrictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefExaminationListFilterByWFRestrictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefExaminationModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefExaminationModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProviderListByRefExamCompletedEventHandler(object sender, getProviderListByRefExamCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProviderListByRefExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getProviderListByRefExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ProviderModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ProviderModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isBeyondAllowanceDateCompletedEventHandler(object sender, isBeyondAllowanceDateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isBeyondAllowanceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isBeyondAllowanceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefExaminationListByProviderCompletedEventHandler(object sender, getRefExaminationListByProviderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefExaminationListByProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRefExaminationListByProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RefExaminationModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RefExaminationModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXRefExaminationProviderCompletedEventHandler(object sender, getXRefExaminationProviderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXRefExaminationProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getXRefExaminationProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public XRefExaminationProviderModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((XRefExaminationProviderModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefExaminationListCompletedEventHandler(object sender, getRefExaminationListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefExaminationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRefExaminationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RefExaminationModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RefExaminationModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefExaminationListByNameCompletedEventHandler(object sender, getRefExaminationListByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefExaminationListByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRefExaminationListByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MapEntry4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MapEntry4WS[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591