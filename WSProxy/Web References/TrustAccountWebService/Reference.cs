#region Header

/**
 * <pre>
 *
 *  Accela Citizen Access
 *  File: TrustAccountWebServiceService.cs
 *
 *  Accela, Inc.
 *  Copyright (C): 2010-2013
 *
 *  Description:
 *
 *  Notes:
 *  $Id: TrustAccountWebServiceService.cs 178827 2010-08-16 03:11:44Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */

#endregion Header
// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "TrustAccountWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    public partial class TrustAccountWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getTrustAccountListByLicenseSeqNbrOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByCapIDOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountByPKOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountByAccountIDOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByPublicUserIDOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByAddressSeqNbrOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountAndTransactionByAccountIDOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByParcelSeqNbrOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByContactSeqNbrOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountListByConditionOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountByUserID4AgentOperationCompleted;

        private System.Threading.SendOrPostCallback getTrustAccountPeopleListByAccountNumberOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public TrustAccountWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event getTrustAccountListByLicenseSeqNbrCompletedEventHandler getTrustAccountListByLicenseSeqNbrCompleted;

        /// <remarks/>
        public event getTrustAccountListByCapIDCompletedEventHandler getTrustAccountListByCapIDCompleted;

        /// <remarks/>
        public event getTrustAccountListCompletedEventHandler getTrustAccountListCompleted;

        /// <remarks/>
        public event getTrustAccountByPKCompletedEventHandler getTrustAccountByPKCompleted;

        /// <remarks/>
        public event getTrustAccountByAccountIDCompletedEventHandler getTrustAccountByAccountIDCompleted;

        /// <remarks/>
        public event getTrustAccountListByPublicUserIDCompletedEventHandler getTrustAccountListByPublicUserIDCompleted;

        /// <remarks/>
        public event getTrustAccountListByAddressSeqNbrCompletedEventHandler getTrustAccountListByAddressSeqNbrCompleted;

        /// <remarks/>
        public event getTrustAccountAndTransactionByAccountIDCompletedEventHandler getTrustAccountAndTransactionByAccountIDCompleted;

        /// <remarks/>
        public event getTrustAccountListByParcelSeqNbrCompletedEventHandler getTrustAccountListByParcelSeqNbrCompleted;

        /// <remarks/>
        public event getTrustAccountListByContactSeqNbrCompletedEventHandler getTrustAccountListByContactSeqNbrCompleted;

        /// <remarks/>
        public event getTrustAccountListByConditionCompletedEventHandler getTrustAccountListByConditionCompleted;

        /// <remarks/>
        public event getTrustAccountByUserID4AgentCompletedEventHandler getTrustAccountByUserID4AgentCompleted;

        /// <remarks/>
        public event getTrustAccountPeopleListByAccountNumberCompletedEventHandler getTrustAccountPeopleListByAccountNumberCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByLicenseSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByLicenseSeqNbr", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByLicenseSeqNbrAsync(string arg0, string arg1)
        {
            this.getTrustAccountListByLicenseSeqNbrAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByLicenseSeqNbrAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountListByLicenseSeqNbrOperationCompleted == null))
            {
                this.getTrustAccountListByLicenseSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByLicenseSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByLicenseSeqNbr", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByLicenseSeqNbrOperationCompleted, userState);
        }

        private void OngetTrustAccountListByLicenseSeqNbrOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByLicenseSeqNbrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByLicenseSeqNbrCompleted(this, new getTrustAccountListByLicenseSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByCapID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2)
        {
            object[] results = this.Invoke("getTrustAccountListByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByCapIDAsync(CapIDModel arg0, string arg1, string[] arg2)
        {
            this.getTrustAccountListByCapIDAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getTrustAccountListByCapIDAsync(CapIDModel arg0, string arg1, string[] arg2, object userState)
        {
            if ((this.getTrustAccountListByCapIDOperationCompleted == null))
            {
                this.getTrustAccountListByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByCapIDOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getTrustAccountListByCapIDOperationCompleted, userState);
        }

        private void OngetTrustAccountListByCapIDOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByCapIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByCapIDCompleted(this, new getTrustAccountListByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] TrustAccountModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] TrustAccountPeopleModel4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] RefAddressModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ParcelModel arg3)
        {
            object[] results = this.Invoke("getTrustAccountList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListAsync(TrustAccountModel arg0, TrustAccountPeopleModel4WS arg1, RefAddressModel arg2, ParcelModel arg3)
        {
            this.getTrustAccountListAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getTrustAccountListAsync(TrustAccountModel arg0, TrustAccountPeopleModel4WS arg1, RefAddressModel arg2, ParcelModel arg3, object userState)
        {
            if ((this.getTrustAccountListOperationCompleted == null))
            {
                this.getTrustAccountListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getTrustAccountListOperationCompleted, userState);
        }

        private void OngetTrustAccountListOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListCompleted(this, new getTrustAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel getTrustAccountByPK([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountByPK", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel)(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountByPKAsync(long arg0, string arg1)
        {
            this.getTrustAccountByPKAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountByPKAsync(long arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountByPKOperationCompleted == null))
            {
                this.getTrustAccountByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountByPKOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountByPK", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountByPKOperationCompleted, userState);
        }

        private void OngetTrustAccountByPKOperationCompleted(object arg)
        {
            if ((this.getTrustAccountByPKCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountByPKCompleted(this, new getTrustAccountByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel getTrustAccountByAccountID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountByAccountID", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel)(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountByAccountIDAsync(string arg0, string arg1)
        {
            this.getTrustAccountByAccountIDAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountByAccountIDAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountByAccountIDOperationCompleted == null))
            {
                this.getTrustAccountByAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountByAccountIDOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountByAccountID", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountByAccountIDOperationCompleted, userState);
        }

        private void OngetTrustAccountByAccountIDOperationCompleted(object arg)
        {
            if ((this.getTrustAccountByAccountIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountByAccountIDCompleted(this, new getTrustAccountByAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByPublicUserID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByPublicUserID", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByPublicUserIDAsync(string arg0, string arg1)
        {
            this.getTrustAccountListByPublicUserIDAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByPublicUserIDAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountListByPublicUserIDOperationCompleted == null))
            {
                this.getTrustAccountListByPublicUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByPublicUserIDOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByPublicUserID", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByPublicUserIDOperationCompleted, userState);
        }

        private void OngetTrustAccountListByPublicUserIDOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByPublicUserIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByPublicUserIDCompleted(this, new getTrustAccountListByPublicUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByAddressSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByAddressSeqNbr", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByAddressSeqNbrAsync(string arg0, string arg1)
        {
            this.getTrustAccountListByAddressSeqNbrAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByAddressSeqNbrAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountListByAddressSeqNbrOperationCompleted == null))
            {
                this.getTrustAccountListByAddressSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByAddressSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByAddressSeqNbr", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByAddressSeqNbrOperationCompleted, userState);
        }

        private void OngetTrustAccountListByAddressSeqNbrOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByAddressSeqNbrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByAddressSeqNbrCompleted(this, new getTrustAccountListByAddressSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel getTrustAccountAndTransactionByAccountID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountAndTransactionByAccountID", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel)(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountAndTransactionByAccountIDAsync(string arg0, string arg1)
        {
            this.getTrustAccountAndTransactionByAccountIDAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountAndTransactionByAccountIDAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountAndTransactionByAccountIDOperationCompleted == null))
            {
                this.getTrustAccountAndTransactionByAccountIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountAndTransactionByAccountIDOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountAndTransactionByAccountID", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountAndTransactionByAccountIDOperationCompleted, userState);
        }

        private void OngetTrustAccountAndTransactionByAccountIDOperationCompleted(object arg)
        {
            if ((this.getTrustAccountAndTransactionByAccountIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountAndTransactionByAccountIDCompleted(this, new getTrustAccountAndTransactionByAccountIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByParcelSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByParcelSeqNbr", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByParcelSeqNbrAsync(string arg0, string arg1)
        {
            this.getTrustAccountListByParcelSeqNbrAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByParcelSeqNbrAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountListByParcelSeqNbrOperationCompleted == null))
            {
                this.getTrustAccountListByParcelSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByParcelSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByParcelSeqNbr", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByParcelSeqNbrOperationCompleted, userState);
        }

        private void OngetTrustAccountListByParcelSeqNbrOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByParcelSeqNbrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByParcelSeqNbrCompleted(this, new getTrustAccountListByParcelSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByContactSeqNbr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByContactSeqNbr", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByContactSeqNbrAsync(string arg0, string arg1)
        {
            this.getTrustAccountListByContactSeqNbrAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByContactSeqNbrAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountListByContactSeqNbrOperationCompleted == null))
            {
                this.getTrustAccountListByContactSeqNbrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByContactSeqNbrOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByContactSeqNbr", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByContactSeqNbrOperationCompleted, userState);
        }

        private void OngetTrustAccountListByContactSeqNbrOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByContactSeqNbrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByContactSeqNbrCompleted(this, new getTrustAccountListByContactSeqNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountListByCondition([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] TrustAccountModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] TrustAccountPeopleModel4WS arg1)
        {
            object[] results = this.Invoke("getTrustAccountListByCondition", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountListByConditionAsync(TrustAccountModel arg0, TrustAccountPeopleModel4WS arg1)
        {
            this.getTrustAccountListByConditionAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountListByConditionAsync(TrustAccountModel arg0, TrustAccountPeopleModel4WS arg1, object userState)
        {
            if ((this.getTrustAccountListByConditionOperationCompleted == null))
            {
                this.getTrustAccountListByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountListByConditionOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountListByCondition", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountListByConditionOperationCompleted, userState);
        }

        private void OngetTrustAccountListByConditionOperationCompleted(object arg)
        {
            if ((this.getTrustAccountListByConditionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountListByConditionCompleted(this, new getTrustAccountListByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountModel[] getTrustAccountByUserID4Agent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountByUserID4Agent", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountByUserID4AgentAsync(string arg0, string arg1)
        {
            this.getTrustAccountByUserID4AgentAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountByUserID4AgentAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountByUserID4AgentOperationCompleted == null))
            {
                this.getTrustAccountByUserID4AgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountByUserID4AgentOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountByUserID4Agent", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountByUserID4AgentOperationCompleted, userState);
        }

        private void OngetTrustAccountByUserID4AgentOperationCompleted(object arg)
        {
            if ((this.getTrustAccountByUserID4AgentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountByUserID4AgentCompleted(this, new getTrustAccountByUserID4AgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TrustAccountPeopleModel[] getTrustAccountPeopleListByAccountNumber([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getTrustAccountPeopleListByAccountNumber", new object[] {
                        arg0,
                        arg1});
            return ((TrustAccountPeopleModel[])(results[0]));
        }

        /// <remarks/>
        public void getTrustAccountPeopleListByAccountNumberAsync(string arg0, string arg1)
        {
            this.getTrustAccountPeopleListByAccountNumberAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getTrustAccountPeopleListByAccountNumberAsync(string arg0, string arg1, object userState)
        {
            if ((this.getTrustAccountPeopleListByAccountNumberOperationCompleted == null))
            {
                this.getTrustAccountPeopleListByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrustAccountPeopleListByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("getTrustAccountPeopleListByAccountNumber", new object[] {
                        arg0,
                        arg1}, this.getTrustAccountPeopleListByAccountNumberOperationCompleted, userState);
        }

        private void OngetTrustAccountPeopleListByAccountNumberOperationCompleted(object arg)
        {
            if ((this.getTrustAccountPeopleListByAccountNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTrustAccountPeopleListByAccountNumberCompleted(this, new getTrustAccountPeopleListByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByLicenseSeqNbrCompletedEventHandler(object sender, getTrustAccountListByLicenseSeqNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByLicenseSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByLicenseSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByCapIDCompletedEventHandler(object sender, getTrustAccountListByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListCompletedEventHandler(object sender, getTrustAccountListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountByPKCompletedEventHandler(object sender, getTrustAccountByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountByAccountIDCompletedEventHandler(object sender, getTrustAccountByAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountByAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountByAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByPublicUserIDCompletedEventHandler(object sender, getTrustAccountListByPublicUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByPublicUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByPublicUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByAddressSeqNbrCompletedEventHandler(object sender, getTrustAccountListByAddressSeqNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByAddressSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByAddressSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountAndTransactionByAccountIDCompletedEventHandler(object sender, getTrustAccountAndTransactionByAccountIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountAndTransactionByAccountIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountAndTransactionByAccountIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByParcelSeqNbrCompletedEventHandler(object sender, getTrustAccountListByParcelSeqNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByParcelSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByParcelSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByContactSeqNbrCompletedEventHandler(object sender, getTrustAccountListByContactSeqNbrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByContactSeqNbrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByContactSeqNbrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountListByConditionCompletedEventHandler(object sender, getTrustAccountListByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountListByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountListByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTrustAccountByUserID4AgentCompletedEventHandler(object sender, getTrustAccountByUserID4AgentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountByUserID4AgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getTrustAccountByUserID4AgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TrustAccountModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTrustAccountPeopleListByAccountNumberCompletedEventHandler(object sender, getTrustAccountPeopleListByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTrustAccountPeopleListByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTrustAccountPeopleListByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrustAccountPeopleModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrustAccountPeopleModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591