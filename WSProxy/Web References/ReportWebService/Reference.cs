/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2011
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 197931 2011-06-22 05:56:38Z ACHIEVO\alan.hu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class ReportWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback handleReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportLinkPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParametersByReportIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendReportInEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportButtonProperty4TrustAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportButtonPropertyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event handleReportCompletedEventHandler handleReportCompleted;
        
        /// <remarks/>
        public event getReportPropertiesCompletedEventHandler getReportPropertiesCompleted;
        
        /// <remarks/>
        public event getReportLinkPropertyCompletedEventHandler getReportLinkPropertyCompleted;
        
        /// <remarks/>
        public event getParametersByReportIdCompletedEventHandler getParametersByReportIdCompleted;
        
        /// <remarks/>
        public event sendReportInEmailCompletedEventHandler sendReportInEmailCompleted;
        
        /// <remarks/>
        public event getReportButtonProperty4TrustAccountCompletedEventHandler getReportButtonProperty4TrustAccountCompleted;
        
        /// <remarks/>
        public event getReportDetailCompletedEventHandler getReportDetailCompleted;
        
        /// <remarks/>
        public event getReportButtonPropertyCompletedEventHandler getReportButtonPropertyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportResultModel4WS handleReport([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportInfoModel4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("handleReport", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ReportResultModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void handleReportAsync(string arg0, ReportInfoModel4WS arg1, string arg2) {
            this.handleReportAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void handleReportAsync(string arg0, ReportInfoModel4WS arg1, string arg2, object userState) {
            if ((this.handleReportOperationCompleted == null)) {
                this.handleReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhandleReportOperationCompleted);
            }
            this.InvokeAsync("handleReport", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.handleReportOperationCompleted, userState);
        }
        
        private void OnhandleReportOperationCompleted(object arg) {
            if ((this.handleReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.handleReportCompleted(this, new handleReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportButtonPropertyModel4WS[] getReportProperties([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getReportProperties", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ReportButtonPropertyModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getReportPropertiesAsync(string arg0, string arg1, string arg2) {
            this.getReportPropertiesAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getReportPropertiesAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.getReportPropertiesOperationCompleted == null)) {
                this.getReportPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportPropertiesOperationCompleted);
            }
            this.InvokeAsync("getReportProperties", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getReportPropertiesOperationCompleted, userState);
        }
        
        private void OngetReportPropertiesOperationCompleted(object arg) {
            if ((this.getReportPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportPropertiesCompleted(this, new getReportPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportButtonPropertyModel4WS[] getReportLinkProperty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportButtonInfoModel4WS arg1) {
            object[] results = this.Invoke("getReportLinkProperty", new object[] {
                        arg0,
                        arg1});
            return ((ReportButtonPropertyModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getReportLinkPropertyAsync(string arg0, ReportButtonInfoModel4WS arg1) {
            this.getReportLinkPropertyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getReportLinkPropertyAsync(string arg0, ReportButtonInfoModel4WS arg1, object userState) {
            if ((this.getReportLinkPropertyOperationCompleted == null)) {
                this.getReportLinkPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportLinkPropertyOperationCompleted);
            }
            this.InvokeAsync("getReportLinkProperty", new object[] {
                        arg0,
                        arg1}, this.getReportLinkPropertyOperationCompleted, userState);
        }
        
        private void OngetReportLinkPropertyOperationCompleted(object arg) {
            if ((this.getReportLinkPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportLinkPropertyCompleted(this, new getReportLinkPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ParameterModel4WS[] getParametersByReportId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportInfoModel4WS arg0) {
            object[] results = this.Invoke("getParametersByReportId", new object[] {
                        arg0});
            return ((ParameterModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getParametersByReportIdAsync(ReportInfoModel4WS arg0) {
            this.getParametersByReportIdAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getParametersByReportIdAsync(ReportInfoModel4WS arg0, object userState) {
            if ((this.getParametersByReportIdOperationCompleted == null)) {
                this.getParametersByReportIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParametersByReportIdOperationCompleted);
            }
            this.InvokeAsync("getParametersByReportId", new object[] {
                        arg0}, this.getParametersByReportIdOperationCompleted, userState);
        }
        
        private void OngetParametersByReportIdOperationCompleted(object arg) {
            if ((this.getParametersByReportIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParametersByReportIdCompleted(this, new getParametersByReportIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendReportInEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportInfoModel4WS arg0) {
            this.Invoke("sendReportInEmail", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void sendReportInEmailAsync(ReportInfoModel4WS arg0) {
            this.sendReportInEmailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void sendReportInEmailAsync(ReportInfoModel4WS arg0, object userState) {
            if ((this.sendReportInEmailOperationCompleted == null)) {
                this.sendReportInEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendReportInEmailOperationCompleted);
            }
            this.InvokeAsync("sendReportInEmail", new object[] {
                        arg0}, this.sendReportInEmailOperationCompleted, userState);
        }
        
        private void OnsendReportInEmailOperationCompleted(object arg) {
            if ((this.sendReportInEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendReportInEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportButtonPropertyModel4WS getReportButtonProperty4TrustAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportButtonInfoModel4WS arg0) {
            object[] results = this.Invoke("getReportButtonProperty4TrustAccount", new object[] {
                        arg0});
            return ((ReportButtonPropertyModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getReportButtonProperty4TrustAccountAsync(ReportButtonInfoModel4WS arg0) {
            this.getReportButtonProperty4TrustAccountAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getReportButtonProperty4TrustAccountAsync(ReportButtonInfoModel4WS arg0, object userState) {
            if ((this.getReportButtonProperty4TrustAccountOperationCompleted == null)) {
                this.getReportButtonProperty4TrustAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportButtonProperty4TrustAccountOperationCompleted);
            }
            this.InvokeAsync("getReportButtonProperty4TrustAccount", new object[] {
                        arg0}, this.getReportButtonProperty4TrustAccountOperationCompleted, userState);
        }
        
        private void OngetReportButtonProperty4TrustAccountOperationCompleted(object arg) {
            if ((this.getReportButtonProperty4TrustAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportButtonProperty4TrustAccountCompleted(this, new getReportButtonProperty4TrustAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportDetailModel4WS getReportDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getReportDetail", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ReportDetailModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getReportDetailAsync(string arg0, long arg1, string arg2) {
            this.getReportDetailAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getReportDetailAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.getReportDetailOperationCompleted == null)) {
                this.getReportDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportDetailOperationCompleted);
            }
            this.InvokeAsync("getReportDetail", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getReportDetailOperationCompleted, userState);
        }
        
        private void OngetReportDetailOperationCompleted(object arg) {
            if ((this.getReportDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportDetailCompleted(this, new getReportDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReportButtonPropertyModel4WS[] getReportButtonProperty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ReportButtonInfoModel4WS arg1) {
            object[] results = this.Invoke("getReportButtonProperty", new object[] {
                        arg0,
                        arg1});
            return ((ReportButtonPropertyModel4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getReportButtonPropertyAsync(string arg0, ReportButtonInfoModel4WS arg1) {
            this.getReportButtonPropertyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getReportButtonPropertyAsync(string arg0, ReportButtonInfoModel4WS arg1, object userState) {
            if ((this.getReportButtonPropertyOperationCompleted == null)) {
                this.getReportButtonPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportButtonPropertyOperationCompleted);
            }
            this.InvokeAsync("getReportButtonProperty", new object[] {
                        arg0,
                        arg1}, this.getReportButtonPropertyOperationCompleted, userState);
        }
        
        private void OngetReportButtonPropertyOperationCompleted(object arg) {
            if ((this.getReportButtonPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportButtonPropertyCompleted(this, new getReportButtonPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void handleReportCompletedEventHandler(object sender, handleReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class handleReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal handleReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportResultModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportResultModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReportPropertiesCompletedEventHandler(object sender, getReportPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportButtonPropertyModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportButtonPropertyModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReportLinkPropertyCompletedEventHandler(object sender, getReportLinkPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportLinkPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportLinkPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportButtonPropertyModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportButtonPropertyModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getParametersByReportIdCompletedEventHandler(object sender, getParametersByReportIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getParametersByReportIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParametersByReportIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParameterModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParameterModel4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendReportInEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReportButtonProperty4TrustAccountCompletedEventHandler(object sender, getReportButtonProperty4TrustAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportButtonProperty4TrustAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportButtonProperty4TrustAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportButtonPropertyModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportButtonPropertyModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReportDetailCompletedEventHandler(object sender, getReportDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportDetailModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportDetailModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReportButtonPropertyCompletedEventHandler(object sender, getReportButtonPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportButtonPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportButtonPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReportButtonPropertyModel4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReportButtonPropertyModel4WS[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591