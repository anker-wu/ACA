/**
 * <pre>
 *  * 
 *  Accela Citizen Access
 *  File: GFilterViewWebServiceService.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2010
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 179785 2010-08-25 12:14:08Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "GFilterViewWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(I18NPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateLayoutConfigPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    public partial class GFilterViewWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback saveFilterScreenViewOperationCompleted;

        private System.Threading.SendOrPostCallback saveAdminConfigurationDataOperationCompleted;

        private System.Threading.SendOrPostCallback getSimpleViewElementModelOperationCompleted;

        private System.Threading.SendOrPostCallback getFilterViewElementByLevelInfoOperationCompleted;

        private System.Threading.SendOrPostCallback updateXFilterViewElementOperationCompleted;

        private System.Threading.SendOrPostCallback getFilterScreenViewOperationCompleted;

        private System.Threading.SendOrPostCallback updateBizDomainForDDLOperationCompleted;

        private System.Threading.SendOrPostCallback createOrEditBizDomainOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public GFilterViewWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event saveFilterScreenViewCompletedEventHandler saveFilterScreenViewCompleted;

        /// <remarks/>
        public event saveAdminConfigurationDataCompletedEventHandler saveAdminConfigurationDataCompleted;

        /// <remarks/>
        public event getSimpleViewElementModelCompletedEventHandler getSimpleViewElementModelCompleted;

        /// <remarks/>
        public event getFilterViewElementByLevelInfoCompletedEventHandler getFilterViewElementByLevelInfoCompleted;

        /// <remarks/>
        public event updateXFilterViewElementCompletedEventHandler updateXFilterViewElementCompleted;

        /// <remarks/>
        public event getFilterScreenViewCompletedEventHandler getFilterScreenViewCompleted;

        /// <remarks/>
        public event updateBizDomainForDDLCompletedEventHandler updateBizDomainForDDLCompleted;

        /// <remarks/>
        public event createOrEditBizDomainCompletedEventHandler createOrEditBizDomainCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveFilterScreenView([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] SimpleViewModel4WS arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            this.Invoke("saveFilterScreenView", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }

        /// <remarks/>
        public void saveFilterScreenViewAsync(string arg0, string arg1, string arg2, SimpleViewModel4WS arg3, string arg4)
        {
            this.saveFilterScreenViewAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void saveFilterScreenViewAsync(string arg0, string arg1, string arg2, SimpleViewModel4WS arg3, string arg4, object userState)
        {
            if ((this.saveFilterScreenViewOperationCompleted == null))
            {
                this.saveFilterScreenViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveFilterScreenViewOperationCompleted);
            }
            this.InvokeAsync("saveFilterScreenView", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.saveFilterScreenViewOperationCompleted, userState);
        }

        private void OnsaveFilterScreenViewOperationCompleted(object arg)
        {
            if ((this.saveFilterScreenViewCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveFilterScreenViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveAdminConfigurationData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] AdminConfigurationModel4WS arg0)
        {
            this.Invoke("saveAdminConfigurationData", new object[] {
                        arg0});
        }

        /// <remarks/>
        public void saveAdminConfigurationDataAsync(AdminConfigurationModel4WS arg0)
        {
            this.saveAdminConfigurationDataAsync(arg0, null);
        }

        /// <remarks/>
        public void saveAdminConfigurationDataAsync(AdminConfigurationModel4WS arg0, object userState)
        {
            if ((this.saveAdminConfigurationDataOperationCompleted == null))
            {
                this.saveAdminConfigurationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveAdminConfigurationDataOperationCompleted);
            }
            this.InvokeAsync("saveAdminConfigurationData", new object[] {
                        arg0}, this.saveAdminConfigurationDataOperationCompleted, userState);
        }

        private void OnsaveAdminConfigurationDataOperationCompleted(object arg)
        {
            if ((this.saveAdminConfigurationDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveAdminConfigurationDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimpleViewElementModel4WS[] getSimpleViewElementModel([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getSimpleViewElementModel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((SimpleViewElementModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getSimpleViewElementModelAsync(string arg0, string arg1, string arg2, string arg3)
        {
            this.getSimpleViewElementModelAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getSimpleViewElementModelAsync(string arg0, string arg1, string arg2, string arg3, object userState)
        {
            if ((this.getSimpleViewElementModelOperationCompleted == null))
            {
                this.getSimpleViewElementModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSimpleViewElementModelOperationCompleted);
            }
            this.InvokeAsync("getSimpleViewElementModel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getSimpleViewElementModelOperationCompleted, userState);
        }

        private void OngetSimpleViewElementModelOperationCompleted(object arg)
        {
            if ((this.getSimpleViewElementModelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSimpleViewElementModelCompleted(this, new getSimpleViewElementModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimpleViewElementModel4WS[] getFilterViewElementByLevelInfo([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            object[] results = this.Invoke("getFilterViewElementByLevelInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((SimpleViewElementModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getFilterViewElementByLevelInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4)
        {
            this.getFilterViewElementByLevelInfoAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void getFilterViewElementByLevelInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState)
        {
            if ((this.getFilterViewElementByLevelInfoOperationCompleted == null))
            {
                this.getFilterViewElementByLevelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilterViewElementByLevelInfoOperationCompleted);
            }
            this.InvokeAsync("getFilterViewElementByLevelInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getFilterViewElementByLevelInfoOperationCompleted, userState);
        }

        private void OngetFilterViewElementByLevelInfoOperationCompleted(object arg)
        {
            if ((this.getFilterViewElementByLevelInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilterViewElementByLevelInfoCompleted(this, new getFilterViewElementByLevelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateXFilterViewElement([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] SimpleViewModel4WS arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            object[] results = this.Invoke("updateXFilterViewElement", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void updateXFilterViewElementAsync(string arg0, string arg1, string arg2, SimpleViewModel4WS arg3, string arg4)
        {
            this.updateXFilterViewElementAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void updateXFilterViewElementAsync(string arg0, string arg1, string arg2, SimpleViewModel4WS arg3, string arg4, object userState)
        {
            if ((this.updateXFilterViewElementOperationCompleted == null))
            {
                this.updateXFilterViewElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateXFilterViewElementOperationCompleted);
            }
            this.InvokeAsync("updateXFilterViewElement", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.updateXFilterViewElementOperationCompleted, userState);
        }

        private void OnupdateXFilterViewElementOperationCompleted(object arg)
        {
            if ((this.updateXFilterViewElementCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateXFilterViewElementCompleted(this, new updateXFilterViewElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SimpleViewModel4WS getFilterScreenView([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] GFilterScreenPermissionModel4WS arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5)
        {
            object[] results = this.Invoke("getFilterScreenView", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((SimpleViewModel4WS)(results[0]));
        }

        /// <remarks/>
        public void getFilterScreenViewAsync(string arg0, string arg1, string arg2, string arg3, GFilterScreenPermissionModel4WS arg4, string arg5)
        {
            this.getFilterScreenViewAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }

        /// <remarks/>
        public void getFilterScreenViewAsync(string arg0, string arg1, string arg2, string arg3, GFilterScreenPermissionModel4WS arg4, string arg5, object userState)
        {
            if ((this.getFilterScreenViewOperationCompleted == null))
            {
                this.getFilterScreenViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilterScreenViewOperationCompleted);
            }
            this.InvokeAsync("getFilterScreenView", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getFilterScreenViewOperationCompleted, userState);
        }

        private void OngetFilterScreenViewOperationCompleted(object arg)
        {
            if ((this.getFilterScreenViewCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilterScreenViewCompleted(this, new getFilterScreenViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateBizDomainForDDL([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel4WS[] arg2)
        {
            this.Invoke("updateBizDomainForDDL", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }

        /// <remarks/>
        public void updateBizDomainForDDLAsync(string arg0, string arg1, BizDomainModel4WS[] arg2)
        {
            this.updateBizDomainForDDLAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void updateBizDomainForDDLAsync(string arg0, string arg1, BizDomainModel4WS[] arg2, object userState)
        {
            if ((this.updateBizDomainForDDLOperationCompleted == null))
            {
                this.updateBizDomainForDDLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBizDomainForDDLOperationCompleted);
            }
            this.InvokeAsync("updateBizDomainForDDL", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateBizDomainForDDLOperationCompleted, userState);
        }

        private void OnupdateBizDomainForDDLOperationCompleted(object arg)
        {
            if ((this.updateBizDomainForDDLCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBizDomainForDDLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOrEditBizDomain([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] BizDomainModel[] arg0)
        {
            this.Invoke("createOrEditBizDomain", new object[] {
                        arg0});
        }

        /// <remarks/>
        public void createOrEditBizDomainAsync(BizDomainModel[] arg0)
        {
            this.createOrEditBizDomainAsync(arg0, null);
        }

        /// <remarks/>
        public void createOrEditBizDomainAsync(BizDomainModel[] arg0, object userState)
        {
            if ((this.createOrEditBizDomainOperationCompleted == null))
            {
                this.createOrEditBizDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrEditBizDomainOperationCompleted);
            }
            this.InvokeAsync("createOrEditBizDomain", new object[] {
                        arg0}, this.createOrEditBizDomainOperationCompleted, userState);
        }

        private void OncreateOrEditBizDomainOperationCompleted(object arg)
        {
            if ((this.createOrEditBizDomainCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrEditBizDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void saveFilterScreenViewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void saveAdminConfigurationDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSimpleViewElementModelCompletedEventHandler(object sender, getSimpleViewElementModelCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSimpleViewElementModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getSimpleViewElementModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SimpleViewElementModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SimpleViewElementModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getFilterViewElementByLevelInfoCompletedEventHandler(object sender, getFilterViewElementByLevelInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilterViewElementByLevelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getFilterViewElementByLevelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SimpleViewElementModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SimpleViewElementModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateXFilterViewElementCompletedEventHandler(object sender, updateXFilterViewElementCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateXFilterViewElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal updateXFilterViewElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getFilterScreenViewCompletedEventHandler(object sender, getFilterScreenViewCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilterScreenViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getFilterScreenViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SimpleViewModel4WS Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SimpleViewModel4WS)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateBizDomainForDDLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void createOrEditBizDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591