/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2011
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 206093 2011-10-26 01:49:26Z ACHIEVO\alan.hu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceProviderWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DelegateUserPK))]
    public partial class ServiceProviderWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getServiceProviderBySourceSeqNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSuperAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceProviderByPKOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceProviderWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getServiceProviderBySourceSeqNumberCompletedEventHandler getServiceProviderBySourceSeqNumberCompleted;
        
        /// <remarks/>
        public event isSuperAgencyCompletedEventHandler isSuperAgencyCompleted;
        
        /// <remarks/>
        public event getSubAgenciesCompletedEventHandler getSubAgenciesCompleted;
        
        /// <remarks/>
        public event getAgenciesCompletedEventHandler getAgenciesCompleted;
        
        /// <remarks/>
        public event getServiceProviderByPKCompletedEventHandler getServiceProviderByPKCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceProviderModel[] getServiceProviderBySourceSeqNumber([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getServiceProviderBySourceSeqNumber", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ServiceProviderModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getServiceProviderBySourceSeqNumberAsync(string arg0, long arg1, string arg2) {
            this.getServiceProviderBySourceSeqNumberAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getServiceProviderBySourceSeqNumberAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.getServiceProviderBySourceSeqNumberOperationCompleted == null)) {
                this.getServiceProviderBySourceSeqNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceProviderBySourceSeqNumberOperationCompleted);
            }
            this.InvokeAsync("getServiceProviderBySourceSeqNumber", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getServiceProviderBySourceSeqNumberOperationCompleted, userState);
        }
        
        private void OngetServiceProviderBySourceSeqNumberOperationCompleted(object arg) {
            if ((this.getServiceProviderBySourceSeqNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceProviderBySourceSeqNumberCompleted(this, new getServiceProviderBySourceSeqNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isSuperAgency([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("isSuperAgency", new object[] {
                        arg0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isSuperAgencyAsync(string arg0) {
            this.isSuperAgencyAsync(arg0, null);
        }
        
        /// <remarks/>
        public void isSuperAgencyAsync(string arg0, object userState) {
            if ((this.isSuperAgencyOperationCompleted == null)) {
                this.isSuperAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSuperAgencyOperationCompleted);
            }
            this.InvokeAsync("isSuperAgency", new object[] {
                        arg0}, this.isSuperAgencyOperationCompleted, userState);
        }
        
        private void OnisSuperAgencyOperationCompleted(object arg) {
            if ((this.isSuperAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSuperAgencyCompleted(this, new isSuperAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getSubAgencies([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getSubAgencies", new object[] {
                        arg0,
                        arg1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubAgenciesAsync(string arg0, string arg1) {
            this.getSubAgenciesAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getSubAgenciesAsync(string arg0, string arg1, object userState) {
            if ((this.getSubAgenciesOperationCompleted == null)) {
                this.getSubAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubAgenciesOperationCompleted);
            }
            this.InvokeAsync("getSubAgencies", new object[] {
                        arg0,
                        arg1}, this.getSubAgenciesOperationCompleted, userState);
        }
        
        private void OngetSubAgenciesOperationCompleted(object arg) {
            if ((this.getSubAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubAgenciesCompleted(this, new getSubAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getAgencies([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] DelegateUserModel arg0) {
            object[] results = this.Invoke("getAgencies", new object[] {
                        arg0});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAgenciesAsync(DelegateUserModel arg0) {
            this.getAgenciesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getAgenciesAsync(DelegateUserModel arg0, object userState) {
            if ((this.getAgenciesOperationCompleted == null)) {
                this.getAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAgenciesOperationCompleted);
            }
            this.InvokeAsync("getAgencies", new object[] {
                        arg0}, this.getAgenciesOperationCompleted, userState);
        }
        
        private void OngetAgenciesOperationCompleted(object arg) {
            if ((this.getAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAgenciesCompleted(this, new getAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ServiceProviderModel getServiceProviderByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getServiceProviderByPK", new object[] {
                        arg0,
                        arg1});
            return ((ServiceProviderModel)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceProviderByPKAsync(string arg0, string arg1) {
            this.getServiceProviderByPKAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getServiceProviderByPKAsync(string arg0, string arg1, object userState) {
            if ((this.getServiceProviderByPKOperationCompleted == null)) {
                this.getServiceProviderByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceProviderByPKOperationCompleted);
            }
            this.InvokeAsync("getServiceProviderByPK", new object[] {
                        arg0,
                        arg1}, this.getServiceProviderByPKOperationCompleted, userState);
        }
        
        private void OngetServiceProviderByPKOperationCompleted(object arg) {
            if ((this.getServiceProviderByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceProviderByPKCompleted(this, new getServiceProviderByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceProviderBySourceSeqNumberCompletedEventHandler(object sender, getServiceProviderBySourceSeqNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceProviderBySourceSeqNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceProviderBySourceSeqNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceProviderModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceProviderModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isSuperAgencyCompletedEventHandler(object sender, isSuperAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSuperAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSuperAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSubAgenciesCompletedEventHandler(object sender, getSubAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAgenciesCompletedEventHandler(object sender, getAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getServiceProviderByPKCompletedEventHandler(object sender, getServiceProviderByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceProviderByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceProviderByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceProviderModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceProviderModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591