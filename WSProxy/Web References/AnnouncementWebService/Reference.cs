//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: AnnouncementWebServiceService.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2011
 * 
 *  Description:
 * 
 *  Notes:
 * </pre>
 */

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AnnouncementWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
     
    public partial class AnnouncementWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback markAnnouncementsAsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAnnouncementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEffectiveAnnouncementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AnnouncementWebServiceService() {            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event markAnnouncementsAsReadCompletedEventHandler markAnnouncementsAsReadCompleted;
        
        /// <remarks/>
        public event deleteAnnouncementsCompletedEventHandler deleteAnnouncementsCompleted;
        
        /// <remarks/>
        public event getEffectiveAnnouncementCompletedEventHandler getEffectiveAnnouncementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void markAnnouncementsAsRead([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("markAnnouncementsAsRead", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void markAnnouncementsAsReadAsync(string arg0, MessageModel[] arg1, string arg2) {
            this.markAnnouncementsAsReadAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void markAnnouncementsAsReadAsync(string arg0, MessageModel[] arg1, string arg2, object userState) {
            if ((this.markAnnouncementsAsReadOperationCompleted == null)) {
                this.markAnnouncementsAsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmarkAnnouncementsAsReadOperationCompleted);
            }
            this.InvokeAsync("markAnnouncementsAsRead", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.markAnnouncementsAsReadOperationCompleted, userState);
        }
        
        private void OnmarkAnnouncementsAsReadOperationCompleted(object arg) {
            if ((this.markAnnouncementsAsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.markAnnouncementsAsReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAnnouncements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] MessageModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("deleteAnnouncements", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void deleteAnnouncementsAsync(string arg0, MessageModel[] arg1, string arg2) {
            this.deleteAnnouncementsAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void deleteAnnouncementsAsync(string arg0, MessageModel[] arg1, string arg2, object userState) {
            if ((this.deleteAnnouncementsOperationCompleted == null)) {
                this.deleteAnnouncementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAnnouncementsOperationCompleted);
            }
            this.InvokeAsync("deleteAnnouncements", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.deleteAnnouncementsOperationCompleted, userState);
        }
        
        private void OndeleteAnnouncementsOperationCompleted(object arg) {
            if ((this.deleteAnnouncementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAnnouncementsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageModel[] getEffectiveAnnouncement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getEffectiveAnnouncement", new object[] {
                        arg0,
                        arg1});
            return ((MessageModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getEffectiveAnnouncementAsync(string arg0, string arg1) {
            this.getEffectiveAnnouncementAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getEffectiveAnnouncementAsync(string arg0, string arg1, object userState) {
            if ((this.getEffectiveAnnouncementOperationCompleted == null)) {
                this.getEffectiveAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEffectiveAnnouncementOperationCompleted);
            }
            this.InvokeAsync("getEffectiveAnnouncement", new object[] {
                        arg0,
                        arg1}, this.getEffectiveAnnouncementOperationCompleted, userState);
        }
        
        private void OngetEffectiveAnnouncementOperationCompleted(object arg) {
            if ((this.getEffectiveAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEffectiveAnnouncementCompleted(this, new getEffectiveAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void markAnnouncementsAsReadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAnnouncementsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getEffectiveAnnouncementCompletedEventHandler(object sender, getEffectiveAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEffectiveAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEffectiveAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591