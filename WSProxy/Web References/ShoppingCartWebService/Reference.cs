/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: ShoppingCartWebServiceService
 * 
 *  Accela, Inc.
 *  Copyright (C): 2009-2010
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 184034 2010-11-09 02:21:49Z ACHIEVO\hans.shi $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ShoppingCartWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class ShoppingCartWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback hasChangeFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createShoppingCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateShoppingCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteShoppingCartItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShoppingCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShoppingCartItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTotalFeeForShoppingCartOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ShoppingCartWebServiceService() {
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event hasChangeFeeCompletedEventHandler hasChangeFeeCompleted;
        
        /// <remarks/>
        public event createShoppingCartCompletedEventHandler createShoppingCartCompleted;
        
        /// <remarks/>
        public event updateShoppingCartCompletedEventHandler updateShoppingCartCompleted;
        
        /// <remarks/>
        public event deleteShoppingCartItemCompletedEventHandler deleteShoppingCartItemCompleted;
        
        /// <remarks/>
        public event getShoppingCartCompletedEventHandler getShoppingCartCompleted;
        
        /// <remarks/>
        public event getShoppingCartItemsCountCompletedEventHandler getShoppingCartItemsCountCompleted;
        
        /// <remarks/>
        public event getTotalFeeForShoppingCartCompletedEventHandler getTotalFeeForShoppingCartCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasChangeFee([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("hasChangeFee", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void hasChangeFeeAsync(string arg0, long arg1, string arg2) {
            this.hasChangeFeeAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void hasChangeFeeAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.hasChangeFeeOperationCompleted == null)) {
                this.hasChangeFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasChangeFeeOperationCompleted);
            }
            this.InvokeAsync("hasChangeFee", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.hasChangeFeeOperationCompleted, userState);
        }
        
        private void OnhasChangeFeeOperationCompleted(object arg) {
            if ((this.hasChangeFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasChangeFeeCompleted(this, new hasChangeFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createShoppingCart([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ShoppingCartModel4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            this.Invoke("createShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
        }
        
        /// <remarks/>
        public void createShoppingCartAsync(string arg0, ShoppingCartModel4WS arg1, bool arg2, bool arg3, string arg4) {
            this.createShoppingCartAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void createShoppingCartAsync(string arg0, ShoppingCartModel4WS arg1, bool arg2, bool arg3, string arg4, object userState) {
            if ((this.createShoppingCartOperationCompleted == null)) {
                this.createShoppingCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateShoppingCartOperationCompleted);
            }
            this.InvokeAsync("createShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.createShoppingCartOperationCompleted, userState);
        }
        
        private void OncreateShoppingCartOperationCompleted(object arg) {
            if ((this.createShoppingCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createShoppingCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateShoppingCart([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ShoppingCartModel4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("updateShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void updateShoppingCartAsync(string arg0, ShoppingCartModel4WS arg1, string arg2) {
            this.updateShoppingCartAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateShoppingCartAsync(string arg0, ShoppingCartModel4WS arg1, string arg2, object userState) {
            if ((this.updateShoppingCartOperationCompleted == null)) {
                this.updateShoppingCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateShoppingCartOperationCompleted);
            }
            this.InvokeAsync("updateShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateShoppingCartOperationCompleted, userState);
        }
        
        private void OnupdateShoppingCartOperationCompleted(object arg) {
            if ((this.updateShoppingCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateShoppingCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteShoppingCartItem([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ShoppingCartModel4WS arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            this.Invoke("deleteShoppingCartItem", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public void deleteShoppingCartItemAsync(string arg0, ShoppingCartModel4WS arg1, string arg2) {
            this.deleteShoppingCartItemAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void deleteShoppingCartItemAsync(string arg0, ShoppingCartModel4WS arg1, string arg2, object userState) {
            if ((this.deleteShoppingCartItemOperationCompleted == null)) {
                this.deleteShoppingCartItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteShoppingCartItemOperationCompleted);
            }
            this.InvokeAsync("deleteShoppingCartItem", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.deleteShoppingCartItemOperationCompleted, userState);
        }
        
        private void OndeleteShoppingCartItemOperationCompleted(object arg) {
            if ((this.deleteShoppingCartItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteShoppingCartItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShoppingCartModel4WS getShoppingCart([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ShoppingCartModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getShoppingCartAsync(string arg0, long arg1, string arg2) {
            this.getShoppingCartAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getShoppingCartAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.getShoppingCartOperationCompleted == null)) {
                this.getShoppingCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShoppingCartOperationCompleted);
            }
            this.InvokeAsync("getShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getShoppingCartOperationCompleted, userState);
        }
        
        private void OngetShoppingCartOperationCompleted(object arg) {
            if ((this.getShoppingCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShoppingCartCompleted(this, new getShoppingCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getShoppingCartItemsCount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getShoppingCartItemsCount", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getShoppingCartItemsCountAsync(string arg0, long arg1, string arg2) {
            this.getShoppingCartItemsCountAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getShoppingCartItemsCountAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.getShoppingCartItemsCountOperationCompleted == null)) {
                this.getShoppingCartItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShoppingCartItemsCountOperationCompleted);
            }
            this.InvokeAsync("getShoppingCartItemsCount", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getShoppingCartItemsCountOperationCompleted, userState);
        }
        
        private void OngetShoppingCartItemsCountOperationCompleted(object arg) {
            if ((this.getShoppingCartItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShoppingCartItemsCountCompleted(this, new getShoppingCartItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double getTotalFeeForShoppingCart([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getTotalFeeForShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getTotalFeeForShoppingCartAsync(string arg0, CapIDModel4WS[] arg1, string arg2) {
            this.getTotalFeeForShoppingCartAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getTotalFeeForShoppingCartAsync(string arg0, CapIDModel4WS[] arg1, string arg2, object userState) {
            if ((this.getTotalFeeForShoppingCartOperationCompleted == null)) {
                this.getTotalFeeForShoppingCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTotalFeeForShoppingCartOperationCompleted);
            }
            this.InvokeAsync("getTotalFeeForShoppingCart", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getTotalFeeForShoppingCartOperationCompleted, userState);
        }
        
        private void OngetTotalFeeForShoppingCartOperationCompleted(object arg) {
            if ((this.getTotalFeeForShoppingCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTotalFeeForShoppingCartCompleted(this, new getTotalFeeForShoppingCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void hasChangeFeeCompletedEventHandler(object sender, hasChangeFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasChangeFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hasChangeFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void createShoppingCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateShoppingCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteShoppingCartItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getShoppingCartCompletedEventHandler(object sender, getShoppingCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShoppingCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShoppingCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getShoppingCartItemsCountCompletedEventHandler(object sender, getShoppingCartItemsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShoppingCartItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShoppingCartItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getTotalFeeForShoppingCartCompletedEventHandler(object sender, getTotalFeeForShoppingCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTotalFeeForShoppingCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTotalFeeForShoppingCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591