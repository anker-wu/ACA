/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: InspectionWebServiceService.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2014
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 267727 2014-03-14 10:03:56Z ACHIEVO\james.shi $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "InspectionWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getInspectionHistoryList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getInspectionListByCapID))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getMyInspectionsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getMyInspections))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(isScheduleInspectionEnabled))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateInspectionDateTimeWhileNotBlockScheduleResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateInspectionDateTimeWhileNotBlockSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateInspectionDateTimeResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateInspectionDateTime))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validate4ScheduleResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validate4Schedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getDatePermissionRangeByInTypeResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getDatePermissionRangeByInType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getMyInspectionsCSVResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getMyInspectionsCSV))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getLatestScheduledDateByFlowResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getLatestScheduledDateByFlow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getInspections))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cancelInspectionResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cancelInspection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getInspectionListForFoodFacility))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getConfirmMessageWhenCancelResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getConfirmMessageWhenCancel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(batchScheduleInspections))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateScheduleDateByFlowResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExaminationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContinuingEducationPKModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefOwnerBaseModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssetRatingPK))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressBaseModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(validateScheduleDateByFlow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    public partial class InspectionWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback validateScheduleDateByFlowOperationCompleted;

        private System.Threading.SendOrPostCallback batchScheduleInspectionsOperationCompleted;

        private System.Threading.SendOrPostCallback getConfirmMessageWhenCancelOperationCompleted;

        private System.Threading.SendOrPostCallback getInspectionListForFoodFacilityOperationCompleted;

        private System.Threading.SendOrPostCallback cancelInspectionOperationCompleted;

        private System.Threading.SendOrPostCallback getInspectionsOperationCompleted;

        private System.Threading.SendOrPostCallback getLatestScheduledDateByFlowOperationCompleted;

        private System.Threading.SendOrPostCallback getMyInspectionsCSVOperationCompleted;

        private System.Threading.SendOrPostCallback getDatePermissionRangeByInTypeOperationCompleted;

        private System.Threading.SendOrPostCallback validate4ScheduleOperationCompleted;

        private System.Threading.SendOrPostCallback validateInspectionDateTimeWhileNotBlockScheduleOperationCompleted;

        private System.Threading.SendOrPostCallback validateInspectionDateTimeOperationCompleted;

        private System.Threading.SendOrPostCallback isScheduleInspectionEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback getMyInspectionsOperationCompleted;

        private System.Threading.SendOrPostCallback getInspectionListByCapIDOperationCompleted;

        private System.Threading.SendOrPostCallback getInspectionHistoryListOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public InspectionWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event validateScheduleDateByFlowCompletedEventHandler validateScheduleDateByFlowCompleted;

        /// <remarks/>
        public event batchScheduleInspectionsCompletedEventHandler batchScheduleInspectionsCompleted;

        /// <remarks/>
        public event getConfirmMessageWhenCancelCompletedEventHandler getConfirmMessageWhenCancelCompleted;

        /// <remarks/>
        public event getInspectionListForFoodFacilityCompletedEventHandler getInspectionListForFoodFacilityCompleted;

        /// <remarks/>
        public event cancelInspectionCompletedEventHandler cancelInspectionCompleted;

        /// <remarks/>
        public event getInspectionsCompletedEventHandler getInspectionsCompleted;

        /// <remarks/>
        public event getLatestScheduledDateByFlowCompletedEventHandler getLatestScheduledDateByFlowCompleted;

        /// <remarks/>
        public event getMyInspectionsCSVCompletedEventHandler getMyInspectionsCSVCompleted;

        /// <remarks/>
        public event getDatePermissionRangeByInTypeCompletedEventHandler getDatePermissionRangeByInTypeCompleted;

        /// <remarks/>
        public event validate4ScheduleCompletedEventHandler validate4ScheduleCompleted;

        /// <remarks/>
        public event validateInspectionDateTimeWhileNotBlockScheduleCompletedEventHandler validateInspectionDateTimeWhileNotBlockScheduleCompleted;

        /// <remarks/>
        public event validateInspectionDateTimeCompletedEventHandler validateInspectionDateTimeCompleted;

        /// <remarks/>
        public event isScheduleInspectionEnabledCompletedEventHandler isScheduleInspectionEnabledCompleted;

        /// <remarks/>
        public event getMyInspectionsCompletedEventHandler getMyInspectionsCompleted;

        /// <remarks/>
        public event getInspectionListByCapIDCompletedEventHandler getInspectionListByCapIDCompleted;

        /// <remarks/>
        public event getInspectionHistoryListCompletedEventHandler getInspectionHistoryListCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string validateScheduleDateByFlow([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel arg1)
        {
            object[] results = this.Invoke("validateScheduleDateByFlow", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void validateScheduleDateByFlowAsync(CapIDModel arg0, InspectionModel arg1)
        {
            this.validateScheduleDateByFlowAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void validateScheduleDateByFlowAsync(CapIDModel arg0, InspectionModel arg1, object userState)
        {
            if ((this.validateScheduleDateByFlowOperationCompleted == null))
            {
                this.validateScheduleDateByFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateScheduleDateByFlowOperationCompleted);
            }
            this.InvokeAsync("validateScheduleDateByFlow", new object[] {
                        arg0,
                        arg1}, this.validateScheduleDateByFlowOperationCompleted, userState);
        }

        private void OnvalidateScheduleDateByFlowOperationCompleted(object arg)
        {
            if ((this.validateScheduleDateByFlowCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateScheduleDateByFlowCompleted(this, new validateScheduleDateByFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] batchScheduleInspections([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] SysUserModel arg3)
        {
            object[] results = this.Invoke("batchScheduleInspections", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void batchScheduleInspectionsAsync(string arg0, InspectionModel[] arg1, string arg2, SysUserModel arg3)
        {
            this.batchScheduleInspectionsAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void batchScheduleInspectionsAsync(string arg0, InspectionModel[] arg1, string arg2, SysUserModel arg3, object userState)
        {
            if ((this.batchScheduleInspectionsOperationCompleted == null))
            {
                this.batchScheduleInspectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbatchScheduleInspectionsOperationCompleted);
            }
            this.InvokeAsync("batchScheduleInspections", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.batchScheduleInspectionsOperationCompleted, userState);
        }

        private void OnbatchScheduleInspectionsOperationCompleted(object arg)
        {
            if ((this.batchScheduleInspectionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.batchScheduleInspectionsCompleted(this, new batchScheduleInspectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getConfirmMessageWhenCancel([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getConfirmMessageWhenCancel", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getConfirmMessageWhenCancelAsync(InspectionModel[] arg0, string arg1, string arg2)
        {
            this.getConfirmMessageWhenCancelAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getConfirmMessageWhenCancelAsync(InspectionModel[] arg0, string arg1, string arg2, object userState)
        {
            if ((this.getConfirmMessageWhenCancelOperationCompleted == null))
            {
                this.getConfirmMessageWhenCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfirmMessageWhenCancelOperationCompleted);
            }
            this.InvokeAsync("getConfirmMessageWhenCancel", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getConfirmMessageWhenCancelOperationCompleted, userState);
        }

        private void OngetConfirmMessageWhenCancelOperationCompleted(object arg)
        {
            if ((this.getConfirmMessageWhenCancelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfirmMessageWhenCancelCompleted(this, new getConfirmMessageWhenCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] getInspectionListForFoodFacility([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getInspectionListForFoodFacility", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((InspectionModel[])(results[0]));
        }

        /// <remarks/>
        public void getInspectionListForFoodFacilityAsync(CapIDModel arg0, string arg1, QueryFormat arg2, string arg3)
        {
            this.getInspectionListForFoodFacilityAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getInspectionListForFoodFacilityAsync(CapIDModel arg0, string arg1, QueryFormat arg2, string arg3, object userState)
        {
            if ((this.getInspectionListForFoodFacilityOperationCompleted == null))
            {
                this.getInspectionListForFoodFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInspectionListForFoodFacilityOperationCompleted);
            }
            this.InvokeAsync("getInspectionListForFoodFacility", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getInspectionListForFoodFacilityOperationCompleted, userState);
        }

        private void OngetInspectionListForFoodFacilityOperationCompleted(object arg)
        {
            if ((this.getInspectionListForFoodFacilityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInspectionListForFoodFacilityCompleted(this, new getInspectionListForFoodFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int cancelInspection([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel[] arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] SysUserModel arg3)
        {
            object[] results = this.Invoke("cancelInspection", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void cancelInspectionAsync(string arg0, string arg1, InspectionModel[] arg2, SysUserModel arg3)
        {
            this.cancelInspectionAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void cancelInspectionAsync(string arg0, string arg1, InspectionModel[] arg2, SysUserModel arg3, object userState)
        {
            if ((this.cancelInspectionOperationCompleted == null))
            {
                this.cancelInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelInspectionOperationCompleted);
            }
            this.InvokeAsync("cancelInspection", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.cancelInspectionOperationCompleted, userState);
        }

        private void OncancelInspectionOperationCompleted(object arg)
        {
            if ((this.cancelInspectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelInspectionCompleted(this, new cancelInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] getInspections([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getInspections", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((InspectionModel[])(results[0]));
        }

        /// <remarks/>
        public void getInspectionsAsync(string arg0, QueryFormat arg1, string arg2)
        {
            this.getInspectionsAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getInspectionsAsync(string arg0, QueryFormat arg1, string arg2, object userState)
        {
            if ((this.getInspectionsOperationCompleted == null))
            {
                this.getInspectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInspectionsOperationCompleted);
            }
            this.InvokeAsync("getInspections", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getInspectionsOperationCompleted, userState);
        }

        private void OngetInspectionsOperationCompleted(object arg)
        {
            if ((this.getInspectionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInspectionsCompleted(this, new getInspectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLatestScheduledDateByFlow([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getLatestScheduledDateByFlow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getLatestScheduledDateByFlowAsync(CapIDModel4WS arg0, string arg1, string arg2, string arg3)
        {
            this.getLatestScheduledDateByFlowAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getLatestScheduledDateByFlowAsync(CapIDModel4WS arg0, string arg1, string arg2, string arg3, object userState)
        {
            if ((this.getLatestScheduledDateByFlowOperationCompleted == null))
            {
                this.getLatestScheduledDateByFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestScheduledDateByFlowOperationCompleted);
            }
            this.InvokeAsync("getLatestScheduledDateByFlow", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getLatestScheduledDateByFlowOperationCompleted, userState);
        }

        private void OngetLatestScheduledDateByFlowOperationCompleted(object arg)
        {
            if ((this.getLatestScheduledDateByFlowCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestScheduledDateByFlowCompleted(this, new getLatestScheduledDateByFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "base64Binary")]
        public byte[] getMyInspectionsCSV([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getMyInspectionsCSV", new object[] {
                        arg0,
                        arg1});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void getMyInspectionsCSVAsync(string arg0, string arg1)
        {
            this.getMyInspectionsCSVAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getMyInspectionsCSVAsync(string arg0, string arg1, object userState)
        {
            if ((this.getMyInspectionsCSVOperationCompleted == null))
            {
                this.getMyInspectionsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyInspectionsCSVOperationCompleted);
            }
            this.InvokeAsync("getMyInspectionsCSV", new object[] {
                        arg0,
                        arg1}, this.getMyInspectionsCSVOperationCompleted, userState);
        }

        private void OngetMyInspectionsCSVOperationCompleted(object arg)
        {
            if ((this.getMyInspectionsCSVCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyInspectionsCSVCompleted(this, new getMyInspectionsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RangeDateModel getDatePermissionRangeByInType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute("arg3", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionTypeModel[] arg3)
        {
            object[] results = this.Invoke("getDatePermissionRangeByInType", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((RangeDateModel)(results[0]));
        }

        /// <remarks/>
        public void getDatePermissionRangeByInTypeAsync(string arg0, string arg1, string arg2, InspectionTypeModel[] arg3)
        {
            this.getDatePermissionRangeByInTypeAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getDatePermissionRangeByInTypeAsync(string arg0, string arg1, string arg2, InspectionTypeModel[] arg3, object userState)
        {
            if ((this.getDatePermissionRangeByInTypeOperationCompleted == null))
            {
                this.getDatePermissionRangeByInTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDatePermissionRangeByInTypeOperationCompleted);
            }
            this.InvokeAsync("getDatePermissionRangeByInType", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getDatePermissionRangeByInTypeOperationCompleted, userState);
        }

        private void OngetDatePermissionRangeByInTypeOperationCompleted(object arg)
        {
            if ((this.getDatePermissionRangeByInTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDatePermissionRangeByInTypeCompleted(this, new getDatePermissionRangeByInTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionValidationModel validate4Schedule([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1)
        {
            object[] results = this.Invoke("validate4Schedule", new object[] {
                        arg0,
                        arg1});
            return ((InspectionValidationModel)(results[0]));
        }

        /// <remarks/>
        public void validate4ScheduleAsync(string[] arg0, CapIDModel arg1)
        {
            this.validate4ScheduleAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void validate4ScheduleAsync(string[] arg0, CapIDModel arg1, object userState)
        {
            if ((this.validate4ScheduleOperationCompleted == null))
            {
                this.validate4ScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvalidate4ScheduleOperationCompleted);
            }
            this.InvokeAsync("validate4Schedule", new object[] {
                        arg0,
                        arg1}, this.validate4ScheduleOperationCompleted, userState);
        }
        
        private void Onvalidate4ScheduleOperationCompleted(object arg)
        {
            if ((this.validate4ScheduleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validate4ScheduleCompleted(this, new validate4ScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AvailableTimeResultModel validateInspectionDateTimeWhileNotBlockSchedule([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel arg1)
        {
            object[] results = this.Invoke("validateInspectionDateTimeWhileNotBlockSchedule", new object[] {
                        arg0,
                        arg1});
            return ((AvailableTimeResultModel)(results[0]));
        }

        /// <remarks/>
        public void validateInspectionDateTimeWhileNotBlockScheduleAsync(string arg0, InspectionModel arg1)
        {
            this.validateInspectionDateTimeWhileNotBlockScheduleAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void validateInspectionDateTimeWhileNotBlockScheduleAsync(string arg0, InspectionModel arg1, object userState)
        {
            if ((this.validateInspectionDateTimeWhileNotBlockScheduleOperationCompleted == null))
            {
                this.validateInspectionDateTimeWhileNotBlockScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateInspectionDateTimeWhileNotBlockScheduleOperationCompleted);
            }
            this.InvokeAsync("validateInspectionDateTimeWhileNotBlockSchedule", new object[] {
                        arg0,
                        arg1}, this.validateInspectionDateTimeWhileNotBlockScheduleOperationCompleted, userState);
        }

        private void OnvalidateInspectionDateTimeWhileNotBlockScheduleOperationCompleted(object arg)
        {
            if ((this.validateInspectionDateTimeWhileNotBlockScheduleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateInspectionDateTimeWhileNotBlockScheduleCompleted(this, new validateInspectionDateTimeWhileNotBlockScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AvailableTimeResultModel validateInspectionDateTime([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] InspectionModel arg1)
        {
            object[] results = this.Invoke("validateInspectionDateTime", new object[] {
                        arg0,
                        arg1});
            return ((AvailableTimeResultModel)(results[0]));
        }

        /// <remarks/>
        public void validateInspectionDateTimeAsync(string arg0, InspectionModel arg1)
        {
            this.validateInspectionDateTimeAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void validateInspectionDateTimeAsync(string arg0, InspectionModel arg1, object userState)
        {
            if ((this.validateInspectionDateTimeOperationCompleted == null))
            {
                this.validateInspectionDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateInspectionDateTimeOperationCompleted);
            }
            this.InvokeAsync("validateInspectionDateTime", new object[] {
                        arg0,
                        arg1}, this.validateInspectionDateTimeOperationCompleted, userState);
        }

        private void OnvalidateInspectionDateTimeOperationCompleted(object arg)
        {
            if ((this.validateInspectionDateTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateInspectionDateTimeCompleted(this, new validateInspectionDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool[] isScheduleInspectionEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("isScheduleInspectionEnabled", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool[])(results[0]));
        }

        /// <remarks/>
        public void isScheduleInspectionEnabledAsync(CapIDModel arg0, string arg1, string arg2)
        {
            this.isScheduleInspectionEnabledAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void isScheduleInspectionEnabledAsync(CapIDModel arg0, string arg1, string arg2, object userState)
        {
            if ((this.isScheduleInspectionEnabledOperationCompleted == null))
            {
                this.isScheduleInspectionEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisScheduleInspectionEnabledOperationCompleted);
            }
            this.InvokeAsync("isScheduleInspectionEnabled", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.isScheduleInspectionEnabledOperationCompleted, userState);
        }

        private void OnisScheduleInspectionEnabledOperationCompleted(object arg)
        {
            if ((this.isScheduleInspectionEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isScheduleInspectionEnabledCompleted(this, new isScheduleInspectionEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] getInspectionListByCapID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getInspectionListByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((InspectionModel[])(results[0]));
        }

        /// <remarks/>
        public void getInspectionListByCapIDAsync(CapIDModel arg0, QueryFormat arg1, string arg2)
        {
            this.getInspectionListByCapIDAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getInspectionListByCapIDAsync(CapIDModel arg0, QueryFormat arg1, string arg2, object userState)
        {
            if ((this.getInspectionListByCapIDOperationCompleted == null))
            {
                this.getInspectionListByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInspectionListByCapIDOperationCompleted);
            }
            this.InvokeAsync("getInspectionListByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getInspectionListByCapIDOperationCompleted, userState);
        }

        private void OngetInspectionListByCapIDOperationCompleted(object arg)
        {
            if ((this.getInspectionListByCapIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInspectionListByCapIDCompleted(this, new getInspectionListByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] getInspectionHistoryList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1)
        {
            object[] results = this.Invoke("getInspectionHistoryList", new object[] {
                        arg0,
                        arg1});
            return ((InspectionModel[])(results[0]));
        }

        /// <remarks/>
        public void getInspectionHistoryListAsync(CapIDModel arg0, long arg1)
        {
            this.getInspectionHistoryListAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getInspectionHistoryListAsync(CapIDModel arg0, long arg1, object userState)
        {
            if ((this.getInspectionHistoryListOperationCompleted == null))
            {
                this.getInspectionHistoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInspectionHistoryListOperationCompleted);
            }
            this.InvokeAsync("getInspectionHistoryList", new object[] {
                        arg0,
                        arg1}, this.getInspectionHistoryListOperationCompleted, userState);
        }

        private void OngetInspectionHistoryListOperationCompleted(object arg)
        {
            if ((this.getInspectionHistoryListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInspectionHistoryListCompleted(this, new getInspectionHistoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchResultModel getMyInspections([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getMyInspections", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((SearchResultModel)(results[0]));
        }

        /// <remarks/>
        public void getMyInspectionsAsync(string arg0, string arg1, QueryFormat arg2, string arg3)
        {
            this.getMyInspectionsAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getMyInspectionsAsync(string arg0, string arg1, QueryFormat arg2, string arg3, object userState)
        {
            if ((this.getMyInspectionsOperationCompleted == null))
            {
                this.getMyInspectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyInspectionsOperationCompleted);
            }
            this.InvokeAsync("getMyInspections", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getMyInspectionsOperationCompleted, userState);
        }

        private void OngetMyInspectionsOperationCompleted(object arg)
        {
            if ((this.getMyInspectionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyInspectionsCompleted(this, new getMyInspectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getMyInspectionsResponse
    {

        private SearchResultModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchResultModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getMyInspections
    {

        private string arg0Field;

        private QueryFormat arg1Field;

        private string arg2Field;

        private string arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryFormat arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getInspectionHistoryList
    {

        private CapIDModel arg0Field;

        private long arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getInspectionListByCapID
    {

        private CapIDModel arg0Field;

        private QueryFormat arg1Field;

        private string arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryFormat arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class isScheduleInspectionEnabled
    {

        private CapIDModel arg0Field;

        private string arg1Field;

        private string arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateInspectionDateTimeWhileNotBlockScheduleResponse
    {

        private AvailableTimeResultModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AvailableTimeResultModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateInspectionDateTimeResponse
    {

        private AvailableTimeResultModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AvailableTimeResultModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateInspectionDateTime
    {

        private string arg0Field;

        private InspectionModel arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateInspectionDateTimeWhileNotBlockSchedule
    {

        private string arg0Field;

        private InspectionModel arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validate4ScheduleResponse
    {

        private InspectionValidationModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionValidationModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validate4Schedule
    {

        private string[] arg0Field;

        private CapIDModel arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getDatePermissionRangeByInTypeResponse
    {

        private RangeDateModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RangeDateModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getDatePermissionRangeByInType
    {

        private string arg0Field;

        private string arg1Field;

        private string arg2Field;

        private InspectionTypeModel[] arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg3", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionTypeModel[] arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getMyInspectionsCSVResponse
    {

        private byte[] returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "base64Binary")]
        public byte[] @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getMyInspectionsCSV
    {

        private string arg0Field;

        private string arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getLatestScheduledDateByFlowResponse
    {

        private string returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getLatestScheduledDateByFlow
    {

        private CapIDModel4WS arg0Field;

        private string arg1Field;

        private string arg2Field;

        private string arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel4WS arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getInspections
    {

        private string arg0Field;

        private QueryFormat arg1Field;

        private string arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryFormat arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class cancelInspectionResponse
    {

        private int returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class cancelInspection
    {

        private string arg0Field;

        private string arg1Field;

        private InspectionModel[] arg2Field;

        private SysUserModel arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SysUserModel arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getInspectionListForFoodFacility
    {

        private CapIDModel arg0Field;

        private QueryFormat arg1Field;

        private string arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryFormat arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getConfirmMessageWhenCancelResponse
    {

        private string returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getConfirmMessageWhenCancel
    {

        private InspectionModel[] arg0Field;

        private string arg1Field;

        private string arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class batchScheduleInspections
    {

        private string arg0Field;

        private InspectionModel[] arg1Field;

        private string arg2Field;

        private SysUserModel arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel[] arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SysUserModel arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateScheduleDateByFlowResponse
    {

        private string returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class validateScheduleDateByFlow
    {

        private CapIDModel arg0Field;

        private InspectionModel arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapIDModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public InspectionModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void validateScheduleDateByFlowCompletedEventHandler(object sender, validateScheduleDateByFlowCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateScheduleDateByFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validateScheduleDateByFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void batchScheduleInspectionsCompletedEventHandler(object sender, batchScheduleInspectionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class batchScheduleInspectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal batchScheduleInspectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getConfirmMessageWhenCancelCompletedEventHandler(object sender, getConfirmMessageWhenCancelCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfirmMessageWhenCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getConfirmMessageWhenCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getInspectionListForFoodFacilityCompletedEventHandler(object sender, getInspectionListForFoodFacilityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInspectionListForFoodFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getInspectionListForFoodFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public InspectionModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((InspectionModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void cancelInspectionCompletedEventHandler(object sender, cancelInspectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal cancelInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getInspectionsCompletedEventHandler(object sender, getInspectionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInspectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getInspectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public InspectionModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((InspectionModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getLatestScheduledDateByFlowCompletedEventHandler(object sender, getLatestScheduledDateByFlowCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestScheduledDateByFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getLatestScheduledDateByFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMyInspectionsCSVCompletedEventHandler(object sender, getMyInspectionsCSVCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyInspectionsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMyInspectionsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDatePermissionRangeByInTypeCompletedEventHandler(object sender, getDatePermissionRangeByInTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDatePermissionRangeByInTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDatePermissionRangeByInTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RangeDateModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RangeDateModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void validate4ScheduleCompletedEventHandler(object sender, validate4ScheduleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validate4ScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validate4ScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public InspectionValidationModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((InspectionValidationModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void validateInspectionDateTimeWhileNotBlockScheduleCompletedEventHandler(object sender, validateInspectionDateTimeWhileNotBlockScheduleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateInspectionDateTimeWhileNotBlockScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validateInspectionDateTimeWhileNotBlockScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AvailableTimeResultModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AvailableTimeResultModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void validateInspectionDateTimeCompletedEventHandler(object sender, validateInspectionDateTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateInspectionDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validateInspectionDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AvailableTimeResultModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AvailableTimeResultModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isScheduleInspectionEnabledCompletedEventHandler(object sender, isScheduleInspectionEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isScheduleInspectionEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isScheduleInspectionEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMyInspectionsCompletedEventHandler(object sender, getMyInspectionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyInspectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getMyInspectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SearchResultModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SearchResultModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getInspectionListByCapIDCompletedEventHandler(object sender, getInspectionListByCapIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInspectionListByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getInspectionListByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public InspectionModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((InspectionModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getInspectionHistoryListCompletedEventHandler(object sender, getInspectionHistoryListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInspectionHistoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getInspectionHistoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public InspectionModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((InspectionModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591