/*
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: Reference.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2011
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 209458 2011-12-12 06:03:07Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PolicyWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getPolicyList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrUpdateXPolicyForData3AsKeyResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrUpdateXPolicyForData3AsKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getASISecurityMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getPolicyByNameAndLevelType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditPolicyResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditPolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(removeXPoliciesForContactTypeSecurityResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getXPolicyList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getXpolicyUserRoleList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditRolePolicyResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditRolePolicy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getXPolicyByLevel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrUpdateXPolicyResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrUpdateXPolicy))]
    public partial class PolicyWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createOrUpdateXPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXPolicyByLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrEditRolePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXpolicyUserRoleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXPolicyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeXPoliciesForContactTypeSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrEditPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPolicyByNameAndLevelTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getASISecurityMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrUpdateXPolicyForData3AsKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPolicyListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PolicyWebServiceService() {

            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createOrUpdateXPolicyCompletedEventHandler createOrUpdateXPolicyCompleted;
        
        /// <remarks/>
        public event getXPolicyByLevelCompletedEventHandler getXPolicyByLevelCompleted;
        
        /// <remarks/>
        public event createOrEditRolePolicyCompletedEventHandler createOrEditRolePolicyCompleted;
        
        /// <remarks/>
        public event getXpolicyUserRoleListCompletedEventHandler getXpolicyUserRoleListCompleted;
        
        /// <remarks/>
        public event getXPolicyListCompletedEventHandler getXPolicyListCompleted;
        
        /// <remarks/>
        public event removeXPoliciesForContactTypeSecurityCompletedEventHandler removeXPoliciesForContactTypeSecurityCompleted;
        
        /// <remarks/>
        public event createOrEditPolicyCompletedEventHandler createOrEditPolicyCompleted;
        
        /// <remarks/>
        public event getPolicyByNameAndLevelTypeCompletedEventHandler getPolicyByNameAndLevelTypeCompleted;
        
        /// <remarks/>
        public event getASISecurityMapCompletedEventHandler getASISecurityMapCompleted;
        
        /// <remarks/>
        public event createOrUpdateXPolicyForData3AsKeyCompletedEventHandler createOrUpdateXPolicyForData3AsKeyCompleted;
        
        /// <remarks/>
        public event getPolicyListCompletedEventHandler getPolicyListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOrUpdateXPolicy([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg1) {
            this.Invoke("createOrUpdateXPolicy", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void createOrUpdateXPolicyAsync(XPolicyModel[] arg0, XPolicyModel[] arg1) {
            this.createOrUpdateXPolicyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createOrUpdateXPolicyAsync(XPolicyModel[] arg0, XPolicyModel[] arg1, object userState) {
            if ((this.createOrUpdateXPolicyOperationCompleted == null)) {
                this.createOrUpdateXPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrUpdateXPolicyOperationCompleted);
            }
            this.InvokeAsync("createOrUpdateXPolicy", new object[] {
                        arg0,
                        arg1}, this.createOrUpdateXPolicyOperationCompleted, userState);
        }
        
        private void OncreateOrUpdateXPolicyOperationCompleted(object arg) {
            if ((this.createOrUpdateXPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrUpdateXPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] getXPolicyByLevel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getXPolicyByLevel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((XPolicyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getXPolicyByLevelAsync(string arg0, string arg1, string arg2, string arg3, string arg4) {
            this.getXPolicyByLevelAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getXPolicyByLevelAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.getXPolicyByLevelOperationCompleted == null)) {
                this.getXPolicyByLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXPolicyByLevelOperationCompleted);
            }
            this.InvokeAsync("getXPolicyByLevel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getXPolicyByLevelOperationCompleted, userState);
        }
        
        private void OngetXPolicyByLevelOperationCompleted(object arg) {
            if ((this.getXPolicyByLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXPolicyByLevelCompleted(this, new getXPolicyByLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOrEditRolePolicy([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XpolicyUserRolePrivilegeModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3) {
            this.Invoke("createOrEditRolePolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void createOrEditRolePolicyAsync(string arg0, XpolicyUserRolePrivilegeModel[] arg1, string arg2, bool arg3) {
            this.createOrEditRolePolicyAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createOrEditRolePolicyAsync(string arg0, XpolicyUserRolePrivilegeModel[] arg1, string arg2, bool arg3, object userState) {
            if ((this.createOrEditRolePolicyOperationCompleted == null)) {
                this.createOrEditRolePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrEditRolePolicyOperationCompleted);
            }
            this.InvokeAsync("createOrEditRolePolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createOrEditRolePolicyOperationCompleted, userState);
        }
        
        private void OncreateOrEditRolePolicyOperationCompleted(object arg) {
            if ((this.createOrEditRolePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrEditRolePolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XpolicyUserRolePrivilegeModel[] getXpolicyUserRoleList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getXpolicyUserRoleList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((XpolicyUserRolePrivilegeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getXpolicyUserRoleListAsync(string arg0, string arg1, string arg2, bool arg3, string arg4) {
            this.getXpolicyUserRoleListAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getXpolicyUserRoleListAsync(string arg0, string arg1, string arg2, bool arg3, string arg4, object userState) {
            if ((this.getXpolicyUserRoleListOperationCompleted == null)) {
                this.getXpolicyUserRoleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXpolicyUserRoleListOperationCompleted);
            }
            this.InvokeAsync("getXpolicyUserRoleList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getXpolicyUserRoleListOperationCompleted, userState);
        }
        
        private void OngetXpolicyUserRoleListOperationCompleted(object arg) {
            if ((this.getXpolicyUserRoleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXpolicyUserRoleListCompleted(this, new getXpolicyUserRoleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] getXPolicyList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getXPolicyList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((XPolicyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getXPolicyListAsync(string arg0, string[] arg1, string arg2, string arg3) {
            this.getXPolicyListAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getXPolicyListAsync(string arg0, string[] arg1, string arg2, string arg3, object userState) {
            if ((this.getXPolicyListOperationCompleted == null)) {
                this.getXPolicyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXPolicyListOperationCompleted);
            }
            this.InvokeAsync("getXPolicyList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getXPolicyListOperationCompleted, userState);
        }
        
        private void OngetXPolicyListOperationCompleted(object arg) {
            if ((this.getXPolicyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXPolicyListCompleted(this, new getXPolicyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeXPoliciesForContactTypeSecurity([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg0) {
            this.Invoke("removeXPoliciesForContactTypeSecurity", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void removeXPoliciesForContactTypeSecurityAsync(XPolicyModel[] arg0) {
            this.removeXPoliciesForContactTypeSecurityAsync(arg0, null);
        }
        
        /// <remarks/>
        public void removeXPoliciesForContactTypeSecurityAsync(XPolicyModel[] arg0, object userState) {
            if ((this.removeXPoliciesForContactTypeSecurityOperationCompleted == null)) {
                this.removeXPoliciesForContactTypeSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveXPoliciesForContactTypeSecurityOperationCompleted);
            }
            this.InvokeAsync("removeXPoliciesForContactTypeSecurity", new object[] {
                        arg0}, this.removeXPoliciesForContactTypeSecurityOperationCompleted, userState);
        }
        
        private void OnremoveXPoliciesForContactTypeSecurityOperationCompleted(object arg) {
            if ((this.removeXPoliciesForContactTypeSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeXPoliciesForContactTypeSecurityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOrEditPolicy([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3) {
            this.Invoke("createOrEditPolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }
        
        /// <remarks/>
        public void createOrEditPolicyAsync(string arg0, XPolicyModel[] arg1, string arg2, bool arg3) {
            this.createOrEditPolicyAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void createOrEditPolicyAsync(string arg0, XPolicyModel[] arg1, string arg2, bool arg3, object userState) {
            if ((this.createOrEditPolicyOperationCompleted == null)) {
                this.createOrEditPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrEditPolicyOperationCompleted);
            }
            this.InvokeAsync("createOrEditPolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.createOrEditPolicyOperationCompleted, userState);
        }
        
        private void OncreateOrEditPolicyOperationCompleted(object arg) {
            if ((this.createOrEditPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrEditPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] getPolicyByNameAndLevelType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getPolicyByNameAndLevelType", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((XPolicyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getPolicyByNameAndLevelTypeAsync(string arg0, string arg1, string arg2) {
            this.getPolicyByNameAndLevelTypeAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getPolicyByNameAndLevelTypeAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.getPolicyByNameAndLevelTypeOperationCompleted == null)) {
                this.getPolicyByNameAndLevelTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPolicyByNameAndLevelTypeOperationCompleted);
            }
            this.InvokeAsync("getPolicyByNameAndLevelType", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getPolicyByNameAndLevelTypeOperationCompleted, userState);
        }
        
        private void OngetPolicyByNameAndLevelTypeOperationCompleted(object arg) {
            if ((this.getPolicyByNameAndLevelTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPolicyByNameAndLevelTypeCompleted(this, new getPolicyByNameAndLevelTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MapEntry4WS[] getASISecurityMap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ASISecurityQueryParam4WS arg0) {
            object[] results = this.Invoke("getASISecurityMap", new object[] {
                        arg0});
            return ((MapEntry4WS[])(results[0]));
        }
        
        /// <remarks/>
        public void getASISecurityMapAsync(ASISecurityQueryParam4WS arg0) {
            this.getASISecurityMapAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getASISecurityMapAsync(ASISecurityQueryParam4WS arg0, object userState) {
            if ((this.getASISecurityMapOperationCompleted == null)) {
                this.getASISecurityMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetASISecurityMapOperationCompleted);
            }
            this.InvokeAsync("getASISecurityMap", new object[] {
                        arg0}, this.getASISecurityMapOperationCompleted, userState);
        }
        
        private void OngetASISecurityMapOperationCompleted(object arg) {
            if ((this.getASISecurityMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getASISecurityMapCompleted(this, new getASISecurityMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOrUpdateXPolicyForData3AsKey([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPolicyModel[] arg1) {
            this.Invoke("createOrUpdateXPolicyForData3AsKey", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void createOrUpdateXPolicyForData3AsKeyAsync(XPolicyModel[] arg0, XPolicyModel[] arg1) {
            this.createOrUpdateXPolicyForData3AsKeyAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createOrUpdateXPolicyForData3AsKeyAsync(XPolicyModel[] arg0, XPolicyModel[] arg1, object userState) {
            if ((this.createOrUpdateXPolicyForData3AsKeyOperationCompleted == null)) {
                this.createOrUpdateXPolicyForData3AsKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrUpdateXPolicyForData3AsKeyOperationCompleted);
            }
            this.InvokeAsync("createOrUpdateXPolicyForData3AsKey", new object[] {
                        arg0,
                        arg1}, this.createOrUpdateXPolicyForData3AsKeyOperationCompleted, userState);
        }
        
        private void OncreateOrUpdateXPolicyForData3AsKeyOperationCompleted(object arg) {
            if ((this.createOrUpdateXPolicyForData3AsKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrUpdateXPolicyForData3AsKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] getPolicyList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg5) {
            object[] results = this.Invoke("getPolicyList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((XPolicyModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getPolicyListAsync(string arg0, string arg1, string arg2, string arg3, bool arg4, bool arg5) {
            this.getPolicyListAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void getPolicyListAsync(string arg0, string arg1, string arg2, string arg3, bool arg4, bool arg5, object userState) {
            if ((this.getPolicyListOperationCompleted == null)) {
                this.getPolicyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPolicyListOperationCompleted);
            }
            this.InvokeAsync("getPolicyList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getPolicyListOperationCompleted, userState);
        }
        
        private void OngetPolicyListOperationCompleted(object arg) {
            if ((this.getPolicyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPolicyListCompleted(this, new getPolicyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getPolicyList {
        
        private string arg0Field;
        
        private string arg1Field;
        
        private string arg2Field;
        
        private string arg3Field;
        
        private bool arg4Field;
        
        private bool arg5Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg4 {
            get {
                return this.arg4Field;
            }
            set {
                this.arg4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg5 {
            get {
                return this.arg5Field;
            }
            set {
                this.arg5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrUpdateXPolicyForData3AsKeyResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrUpdateXPolicyForData3AsKey {
        
        private XPolicyModel[] arg0Field;
        
        private XPolicyModel[] arg1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getASISecurityMap {
        
        private ASISecurityQueryParam4WS arg0Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ASISecurityQueryParam4WS arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getPolicyByNameAndLevelType {
        
        private string arg0Field;
        
        private string arg1Field;
        
        private string arg2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrEditPolicyResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrEditPolicy {
        
        private string arg0Field;
        
        private XPolicyModel[] arg1Field;
        
        private string arg2Field;
        
        private bool arg3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class removeXPoliciesForContactTypeSecurityResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getXPolicyList {
        
        private string arg0Field;
        
        private string[] arg1Field;
        
        private string arg2Field;
        
        private string arg3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getXpolicyUserRoleList {
        
        private string arg0Field;
        
        private string arg1Field;
        
        private string arg2Field;
        
        private bool arg3Field;
        
        private string arg4Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg4 {
            get {
                return this.arg4Field;
            }
            set {
                this.arg4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrEditRolePolicyResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrEditRolePolicy {
        
        private string arg0Field;
        
        private XpolicyUserRolePrivilegeModel[] arg1Field;
        
        private string arg2Field;
        
        private bool arg3Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XpolicyUserRolePrivilegeModel[] arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
    }
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getXPolicyByLevel {
        
        private string arg0Field;
        
        private string arg1Field;
        
        private string arg2Field;
        
        private string arg3Field;
        
        private string arg4Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2 {
            get {
                return this.arg2Field;
            }
            set {
                this.arg2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3 {
            get {
                return this.arg3Field;
            }
            set {
                this.arg3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg4 {
            get {
                return this.arg4Field;
            }
            set {
                this.arg4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrUpdateXPolicyResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class createOrUpdateXPolicy {
        
        private XPolicyModel[] arg0Field;
        
        private XPolicyModel[] arg1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] arg0 {
            get {
                return this.arg0Field;
            }
            set {
                this.arg0Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPolicyModel[] arg1 {
            get {
                return this.arg1Field;
            }
            set {
                this.arg1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOrUpdateXPolicyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXPolicyByLevelCompletedEventHandler(object sender, getXPolicyByLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXPolicyByLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXPolicyByLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XPolicyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XPolicyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOrEditRolePolicyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXpolicyUserRoleListCompletedEventHandler(object sender, getXpolicyUserRoleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXpolicyUserRoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXpolicyUserRoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XpolicyUserRolePrivilegeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XpolicyUserRolePrivilegeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXPolicyListCompletedEventHandler(object sender, getXPolicyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXPolicyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXPolicyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XPolicyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XPolicyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeXPoliciesForContactTypeSecurityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOrEditPolicyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPolicyByNameAndLevelTypeCompletedEventHandler(object sender, getPolicyByNameAndLevelTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPolicyByNameAndLevelTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPolicyByNameAndLevelTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XPolicyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XPolicyModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getASISecurityMapCompletedEventHandler(object sender, getASISecurityMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getASISecurityMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getASISecurityMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MapEntry4WS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MapEntry4WS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOrUpdateXPolicyForData3AsKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPolicyListCompletedEventHandler(object sender, getPolicyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPolicyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPolicyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XPolicyModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XPolicyModel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591