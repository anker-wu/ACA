/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2014
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 274085 2014-06-25 07:27:24Z ACHIEVO\james.shi $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 

using Accela.ACA.WSProxy;

#pragma warning disable 1591

namespace Accela.ACA.WSProxy
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "PeopleWebServiceServiceSoapBinding", Namespace = "http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getDuplicateContactAddressList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(editRefContactResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(editRefContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getPeopleByClosematch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(removeContact4publicUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(removeContact4publicUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(setAccountOwner4publicUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(setAccountOwner4publicUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(searchCustomerList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getContactIdentityFields))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getIdentityValidationResultResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(getIdentityValidationResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(addContact4PublicUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(addContact4PublicUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditCustomersResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(createOrEditCustomers))]
	[System.Xml.Serialization.XmlIncludeAttribute(typeof(getDuplicateContactAddress))]
    public partial class PeopleWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback addContact4PublicUserOperationCompleted;

        private System.Threading.SendOrPostCallback getIdentityValidationResultOperationCompleted;

        private System.Threading.SendOrPostCallback getPeoplesByCapIDsOperationCompleted;

        private System.Threading.SendOrPostCallback getContactIdentityFieldsOperationCompleted;

        private System.Threading.SendOrPostCallback searchCustomerListOperationCompleted;

        private System.Threading.SendOrPostCallback removeContact4publicUserOperationCompleted;

        private System.Threading.SendOrPostCallback setAccountOwner4publicUserOperationCompleted;

        private System.Threading.SendOrPostCallback getPeopleByClosematchOperationCompleted;

        private System.Threading.SendOrPostCallback editRefContactOperationCompleted;

        private System.Threading.SendOrPostCallback getPeoplesByAttrsOperationCompleted;

        private System.Threading.SendOrPostCallback getRefPeoplesOperationCompleted;

        private System.Threading.SendOrPostCallback getDuplicateContactAddressListOperationCompleted;

        private System.Threading.SendOrPostCallback getAssociatedContactsByUserIdOperationCompleted;

        private System.Threading.SendOrPostCallback getCapContactByCapContactModelOperationCompleted;

        private System.Threading.SendOrPostCallback isPrimaryContactAddressOperationCompleted;

        private System.Threading.SendOrPostCallback createOrEditCustomersOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

		private System.Threading.SendOrPostCallback getDuplicateContactAddressOperationCompleted;
        /// <remarks/>
        public PeopleWebServiceService()
        {
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event addContact4PublicUserCompletedEventHandler addContact4PublicUserCompleted;

        /// <remarks/>
        public event getIdentityValidationResultCompletedEventHandler getIdentityValidationResultCompleted;

        /// <remarks/>
        public event getPeoplesByCapIDsCompletedEventHandler getPeoplesByCapIDsCompleted;

        /// <remarks/>
        public event getContactIdentityFieldsCompletedEventHandler getContactIdentityFieldsCompleted;

        /// <remarks/>
        public event searchCustomerListCompletedEventHandler searchCustomerListCompleted;

        /// <remarks/>
        public event removeContact4publicUserCompletedEventHandler removeContact4publicUserCompleted;
        
        /// <remarks/>
        public event setAccountOwner4publicUserCompletedEventHandler setAccountOwner4publicUserCompleted;

        /// <remarks/>
        public event getPeopleByClosematchCompletedEventHandler getPeopleByClosematchCompleted;

        /// <remarks/>
        public event editRefContactCompletedEventHandler editRefContactCompleted;

        /// <remarks/>
        public event getPeoplesByAttrsCompletedEventHandler getPeoplesByAttrsCompleted;

        /// <remarks/>
        public event getRefPeoplesCompletedEventHandler getRefPeoplesCompleted;

        /// <remarks/>
        public event getDuplicateContactAddressListCompletedEventHandler getDuplicateContactAddressListCompleted;

        /// <remarks/>
        public event getAssociatedContactsByUserIdCompletedEventHandler getAssociatedContactsByUserIdCompleted;

        /// <remarks/>
        public event getCapContactByCapContactModelCompletedEventHandler getCapContactByCapContactModelCompleted;

        /// <remarks/>
        public event isPrimaryContactAddressCompletedEventHandler isPrimaryContactAddressCompleted;

        /// <remarks/>
        public event createOrEditCustomersCompletedEventHandler createOrEditCustomersCompleted;

        /// <remarks/>
        public event getDuplicateContactAddressCompletedEventHandler getDuplicateContactAddressCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addContact4PublicUser([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PublicUserModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            this.Invoke("addContact4PublicUser", new object[] {
                        arg0,
                        arg1});
        }

        /// <remarks/>
        public void addContact4PublicUserAsync(PublicUserModel4WS arg0, string arg1)
        {
            this.addContact4PublicUserAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void addContact4PublicUserAsync(PublicUserModel4WS arg0, string arg1, object userState)
        {
            if ((this.addContact4PublicUserOperationCompleted == null))
            {
                this.addContact4PublicUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddContact4PublicUserOperationCompleted);
            }
            this.InvokeAsync("addContact4PublicUser", new object[] {
                        arg0,
                        arg1}, this.addContact4PublicUserOperationCompleted, userState);
        }

        private void OnaddContact4PublicUserOperationCompleted(object arg)
        {
            if ((this.addContact4PublicUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addContact4PublicUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GenericIdentityFieldModel[] getIdentityValidationResult([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel arg1)
        {
            object[] results = this.Invoke("getIdentityValidationResult", new object[] {
                        arg0,
                        arg1});
            return ((GenericIdentityFieldModel[])(results[0]));
        }

        /// <remarks/>
        public void getIdentityValidationResultAsync(string arg0, PeopleModel arg1)
        {
            this.getIdentityValidationResultAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getIdentityValidationResultAsync(string arg0, PeopleModel arg1, object userState)
        {
            if ((this.getIdentityValidationResultOperationCompleted == null))
            {
                this.getIdentityValidationResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIdentityValidationResultOperationCompleted);
            }
            this.InvokeAsync("getIdentityValidationResult", new object[] {
                        arg0,
                        arg1}, this.getIdentityValidationResultOperationCompleted, userState);
        }

        private void OngetIdentityValidationResultOperationCompleted(object arg)
        {
            if ((this.getIdentityValidationResultCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIdentityValidationResultCompleted(this, new getIdentityValidationResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel[] getDuplicateContactAddress([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ContactAddressModel[] arg1) {
            object[] results = this.Invoke("getDuplicateContactAddress", new object[] {
                        arg0,
                        arg1});
            return ((ContactAddressModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getDuplicateContactAddressAsync(string arg0, ContactAddressModel[] arg1) {
            this.getDuplicateContactAddressAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDuplicateContactAddressAsync(string arg0, ContactAddressModel[] arg1, object userState) {
            if ((this.getDuplicateContactAddressOperationCompleted == null)) {
                this.getDuplicateContactAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDuplicateContactAddressOperationCompleted);
            }
            this.InvokeAsync("getDuplicateContactAddress", new object[] {
                        arg0,
                        arg1}, this.getDuplicateContactAddressOperationCompleted, userState);
        }
        
        private void OngetDuplicateContactAddressOperationCompleted(object arg) {
            if ((this.getDuplicateContactAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDuplicateContactAddressCompleted(this, new getDuplicateContactAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel4WS[] getPeoplesByCapIDs([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS[] arg0)
        {
            object[] results = this.Invoke("getPeoplesByCapIDs", new object[] {
                        arg0});
            return ((PeopleModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getPeoplesByCapIDsAsync(CapIDModel4WS[] arg0)
        {
            this.getPeoplesByCapIDsAsync(arg0, null);
        }

        /// <remarks/>
        public void getPeoplesByCapIDsAsync(CapIDModel4WS[] arg0, object userState)
        {
            if ((this.getPeoplesByCapIDsOperationCompleted == null))
            {
                this.getPeoplesByCapIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeoplesByCapIDsOperationCompleted);
            }
            this.InvokeAsync("getPeoplesByCapIDs", new object[] {
                        arg0}, this.getPeoplesByCapIDsOperationCompleted, userState);
        }

        private void OngetPeoplesByCapIDsOperationCompleted(object arg)
        {
            if ((this.getPeoplesByCapIDsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeoplesByCapIDsCompleted(this, new getPeoplesByCapIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GenericIdentityFieldModel[] getContactIdentityFields([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0)
        {
            object[] results = this.Invoke("getContactIdentityFields", new object[] {
                        arg0});
            return ((GenericIdentityFieldModel[])(results[0]));
        }

        /// <remarks/>
        public void getContactIdentityFieldsAsync(string arg0)
        {
            this.getContactIdentityFieldsAsync(arg0, null);
        }

        /// <remarks/>
        public void getContactIdentityFieldsAsync(string arg0, object userState)
        {
            if ((this.getContactIdentityFieldsOperationCompleted == null))
            {
                this.getContactIdentityFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactIdentityFieldsOperationCompleted);
            }
            this.InvokeAsync("getContactIdentityFields", new object[] {
                        arg0}, this.getContactIdentityFieldsOperationCompleted, userState);
        }

        private void OngetContactIdentityFieldsOperationCompleted(object arg)
        {
            if ((this.getContactIdentityFieldsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactIdentityFieldsCompleted(this, new getContactIdentityFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel[] searchCustomerList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapContactModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg5, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg6)
        {
            object[] results = this.Invoke("searchCustomerList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6});
            return ((PeopleModel[])(results[0]));
        }

        /// <remarks/>
        public void searchCustomerListAsync(CapContactModel arg0, bool arg1, string arg2, string arg3, CapTypeModel arg4, QueryFormat arg5, string arg6)
        {
            this.searchCustomerListAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, null);
        }

        /// <remarks/>
        public void searchCustomerListAsync(CapContactModel arg0, bool arg1, string arg2, string arg3, CapTypeModel arg4, QueryFormat arg5, string arg6, object userState)
        {
            if ((this.searchCustomerListOperationCompleted == null))
            {
                this.searchCustomerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomerListOperationCompleted);
            }
            this.InvokeAsync("searchCustomerList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6}, this.searchCustomerListOperationCompleted, userState);
        }

        private void OnsearchCustomerListOperationCompleted(object arg)
        {
            if ((this.searchCustomerListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomerListCompleted(this, new searchCustomerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeContact4publicUser([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg2)
        {
            this.Invoke("removeContact4publicUser", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }

        /// <remarks/>
        public void removeContact4publicUserAsync(string arg0, long arg1, long arg2)
        {
            this.removeContact4publicUserAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void removeContact4publicUserAsync(string arg0, long arg1, long arg2, object userState)
        {
            if ((this.removeContact4publicUserOperationCompleted == null))
            {
                this.removeContact4publicUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveContact4publicUserOperationCompleted);
            }
            this.InvokeAsync("removeContact4publicUser", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.removeContact4publicUserOperationCompleted, userState);
        }

        private void OnremoveContact4publicUserOperationCompleted(object arg)
        {
            if ((this.removeContact4publicUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeContact4publicUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setAccountOwner4publicUser([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            this.Invoke("setAccountOwner4publicUser", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
        }

        /// <remarks/>
        public void setAccountOwner4publicUserAsync(string arg0, long arg1, long arg2, string arg3)
        {
            this.setAccountOwner4publicUserAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void setAccountOwner4publicUserAsync(string arg0, long arg1, long arg2, string arg3, object userState)
        {
            if ((this.setAccountOwner4publicUserOperationCompleted == null))
            {
                this.setAccountOwner4publicUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAccountOwner4publicUserOperationCompleted);
            }
            this.InvokeAsync("setAccountOwner4publicUser", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.setAccountOwner4publicUserOperationCompleted, userState);
        }

        private void OnsetAccountOwner4publicUserOperationCompleted(object arg)
        {
            if ((this.setAccountOwner4publicUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAccountOwner4publicUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel getPeopleByClosematch([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel arg1)
        {
            object[] results = this.Invoke("getPeopleByClosematch", new object[] {
                        arg0,
                        arg1});
            return ((PeopleModel)(results[0]));
        }

        /// <remarks/>
        public void getPeopleByClosematchAsync(string arg0, PeopleModel arg1)
        {
            this.getPeopleByClosematchAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getPeopleByClosematchAsync(string arg0, PeopleModel arg1, object userState)
        {
            if ((this.getPeopleByClosematchOperationCompleted == null))
            {
                this.getPeopleByClosematchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeopleByClosematchOperationCompleted);
            }
            this.InvokeAsync("getPeopleByClosematch", new object[] {
                        arg0,
                        arg1}, this.getPeopleByClosematchOperationCompleted, userState);
        }

        private void OngetPeopleByClosematchOperationCompleted(object arg)
        {
            if ((this.getPeopleByClosematchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeopleByClosematchCompleted(this, new getPeopleByClosematchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editRefContact([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            this.Invoke("editRefContact", new object[] {
                        arg0,
                        arg1});
        }

        /// <remarks/>
        public void editRefContactAsync(PeopleModel arg0, string arg1)
        {
            this.editRefContactAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void editRefContactAsync(PeopleModel arg0, string arg1, object userState)
        {
            if ((this.editRefContactOperationCompleted == null))
            {
                this.editRefContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditRefContactOperationCompleted);
            }
            this.InvokeAsync("editRefContact", new object[] {
                        arg0,
                        arg1}, this.editRefContactOperationCompleted, userState);
        }

        private void OneditRefContactOperationCompleted(object arg)
        {
            if ((this.editRefContactCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editRefContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel4WS[] getPeoplesByAttrs([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg3)
        {
            object[] results = this.Invoke("getPeoplesByAttrs", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((PeopleModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getPeoplesByAttrsAsync(PeopleModel4WS arg0, string arg1, string arg2, QueryFormat4WS arg3)
        {
            this.getPeoplesByAttrsAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getPeoplesByAttrsAsync(PeopleModel4WS arg0, string arg1, string arg2, QueryFormat4WS arg3, object userState)
        {
            if ((this.getPeoplesByAttrsOperationCompleted == null))
            {
                this.getPeoplesByAttrsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeoplesByAttrsOperationCompleted);
            }
            this.InvokeAsync("getPeoplesByAttrs", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getPeoplesByAttrsOperationCompleted, userState);
        }

        private void OngetPeoplesByAttrsOperationCompleted(object arg)
        {
            if ((this.getPeoplesByAttrsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeoplesByAttrsCompleted(this, new getPeoplesByAttrsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel[] getRefPeoples([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg4)
        {
            object[] results = this.Invoke("getRefPeoples", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((PeopleModel[])(results[0]));
        }

        /// <remarks/>
        public void getRefPeoplesAsync(string arg0, PeopleModel arg1, bool arg2, bool arg3, QueryFormat arg4)
        {
            this.getRefPeoplesAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void getRefPeoplesAsync(string arg0, PeopleModel arg1, bool arg2, bool arg3, QueryFormat arg4, object userState)
        {
            if ((this.getRefPeoplesOperationCompleted == null))
            {
                this.getRefPeoplesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRefPeoplesOperationCompleted);
            }
            this.InvokeAsync("getRefPeoples", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getRefPeoplesOperationCompleted, userState);
        }

        private void OngetRefPeoplesOperationCompleted(object arg)
        {
            if ((this.getRefPeoplesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRefPeoplesCompleted(this, new getRefPeoplesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel[] getDuplicateContactAddressList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ContactAddressModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ContactAddressModel arg2)
        {
            object[] results = this.Invoke("getDuplicateContactAddressList", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ContactAddressModel[])(results[0]));
        }

        /// <remarks/>
        public void getDuplicateContactAddressListAsync(string arg0, ContactAddressModel[] arg1, ContactAddressModel arg2)
        {
            this.getDuplicateContactAddressListAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getDuplicateContactAddressListAsync(string arg0, ContactAddressModel[] arg1, ContactAddressModel arg2, object userState)
        {
            if ((this.getDuplicateContactAddressListOperationCompleted == null))
            {
                this.getDuplicateContactAddressListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDuplicateContactAddressListOperationCompleted);
            }
            this.InvokeAsync("getDuplicateContactAddressList", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getDuplicateContactAddressListOperationCompleted, userState);
        }

        private void OngetDuplicateContactAddressListOperationCompleted(object arg)
        {
            if ((this.getDuplicateContactAddressListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDuplicateContactAddressListCompleted(this, new getDuplicateContactAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel4WS[] getAssociatedContactsByUserId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1)
        {
            object[] results = this.Invoke("getAssociatedContactsByUserId", new object[] {
                        arg0,
                        arg1});
            return ((PeopleModel4WS[])(results[0]));
        }

        /// <remarks/>
        public void getAssociatedContactsByUserIdAsync(string arg0, long arg1)
        {
            this.getAssociatedContactsByUserIdAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getAssociatedContactsByUserIdAsync(string arg0, long arg1, object userState)
        {
            if ((this.getAssociatedContactsByUserIdOperationCompleted == null))
            {
                this.getAssociatedContactsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssociatedContactsByUserIdOperationCompleted);
            }
            this.InvokeAsync("getAssociatedContactsByUserId", new object[] {
                        arg0,
                        arg1}, this.getAssociatedContactsByUserIdOperationCompleted, userState);
        }

        private void OngetAssociatedContactsByUserIdOperationCompleted(object arg)
        {
            if ((this.getAssociatedContactsByUserIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssociatedContactsByUserIdCompleted(this, new getAssociatedContactsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchResultModel getCapContactByCapContactModel([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapContactModel4WS arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute("arg4", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg5)
        {
            object[] results = this.Invoke("getCapContactByCapContactModel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((SearchResultModel)(results[0]));
        }

        /// <remarks/>
        public void getCapContactByCapContactModelAsync(string arg0, string arg1, CapContactModel4WS arg2, string arg3, string[] arg4, QueryFormat arg5)
        {
            this.getCapContactByCapContactModelAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }

        /// <remarks/>
        public void getCapContactByCapContactModelAsync(string arg0, string arg1, CapContactModel4WS arg2, string arg3, string[] arg4, QueryFormat arg5, object userState)
        {
            if ((this.getCapContactByCapContactModelOperationCompleted == null))
            {
                this.getCapContactByCapContactModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapContactByCapContactModelOperationCompleted);
            }
            this.InvokeAsync("getCapContactByCapContactModel", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getCapContactByCapContactModelOperationCompleted, userState);
        }

        private void OngetCapContactByCapContactModelOperationCompleted(object arg)
        {
            if ((this.getCapContactByCapContactModelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapContactByCapContactModelCompleted(this, new getCapContactByCapContactModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isPrimaryContactAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified)
        {
            object[] results = this.Invoke("isPrimaryContactAddress", new object[] {
                        arg0,
                        arg1,
                        arg1Specified});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isPrimaryContactAddressAsync(string arg0, long arg1, bool arg1Specified)
        {
            this.isPrimaryContactAddressAsync(arg0, arg1, arg1Specified, null);
        }

        /// <remarks/>
        public void isPrimaryContactAddressAsync(string arg0, long arg1, bool arg1Specified, object userState)
        {
            if ((this.isPrimaryContactAddressOperationCompleted == null))
            {
                this.isPrimaryContactAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisPrimaryContactAddressOperationCompleted);
            }
            this.InvokeAsync("isPrimaryContactAddress", new object[] {
                        arg0,
                        arg1,
                        arg1Specified}, this.isPrimaryContactAddressOperationCompleted, userState);
        }

        private void OnisPrimaryContactAddressOperationCompleted(object arg)
        {
            if ((this.isPrimaryContactAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isPrimaryContactAddressCompleted(this, new isPrimaryContactAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel createOrEditCustomers([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PeopleModel arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("createOrEditCustomers", new object[] {
                        arg0,
                        arg1});
            return ((PeopleModel)(results[0]));
        }

        /// <remarks/>
        public void createOrEditCustomersAsync(PeopleModel arg0, string arg1)
        {
            this.createOrEditCustomersAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void createOrEditCustomersAsync(PeopleModel arg0, string arg1, object userState)
        {
            if ((this.createOrEditCustomersOperationCompleted == null))
            {
                this.createOrEditCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrEditCustomersOperationCompleted);
            }
            this.InvokeAsync("createOrEditCustomers", new object[] {
                        arg0,
                        arg1}, this.createOrEditCustomersOperationCompleted, userState);
        }

        private void OncreateOrEditCustomersOperationCompleted(object arg)
        {
            if ((this.createOrEditCustomersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrEditCustomersCompleted(this, new createOrEditCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getAssociatedContactsByUserId
    {

        private string arg0Field;

        private long arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getDuplicateContactAddressList
    {

        private string arg0Field;

        private ContactAddressModel[] arg1Field;

        private ContactAddressModel arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel[] arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class editRefContactResponse
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class editRefContact
    {

        private PeopleModel arg0Field;

        private string arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getPeopleByClosematch
    {

        private string arg0Field;

        private PeopleModel arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class removeContact4publicUserResponse
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class removeContact4publicUser
    {

        private string arg0Field;

        private long arg1Field;

        private long arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class setAccountOwner4publicUserResponse
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class setAccountOwner4publicUser
    {

        private string arg0Field;

        private long arg1Field;

        private long arg2Field;

        private string arg3Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class searchCustomerList
    {

        private CapContactModel arg0Field;

        private bool arg1Field;

        private string arg2Field;

        private string arg3Field;

        private CapTypeModel arg4Field;

        private QueryFormat arg5Field;

        private string arg6Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapContactModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3
        {
            get
            {
                return this.arg3Field;
            }
            set
            {
                this.arg3Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel arg4
        {
            get
            {
                return this.arg4Field;
            }
            set
            {
                this.arg4Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryFormat arg5
        {
            get
            {
                return this.arg5Field;
            }
            set
            {
                this.arg5Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg6
        {
            get
            {
                return this.arg6Field;
            }
            set
            {
                this.arg6Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getContactIdentityFields
    {

        private string arg0Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.webservice.accela.com/")]
    public partial class getIdentityValidationResultResponse {

        private string returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getIdentityValidationResult
    {

        private string arg0Field;

        private PeopleModel arg1Field;

        private bool arg2Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool arg2
        {
            get
            {
                return this.arg2Field;
            }
            set
            {
                this.arg2Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class addContact4PublicUserResponse
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class addContact4PublicUser
    {

        private PublicUserModel4WS arg0Field;

        private string arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PublicUserModel4WS arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class createOrEditCustomersResponse
    {

        private PeopleModel returnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel @return
        {
            get
            {
                return this.returnField;
            }
            set
            {
                this.returnField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class createOrEditCustomers
    {

        private PeopleModel arg0Field;

        private string arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PeopleModel arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://service.webservice.accela.com/")]
    public partial class getDuplicateContactAddress
    {

        private string arg0Field;

        private ContactAddressModel[] arg1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0
        {
            get
            {
                return this.arg0Field;
            }
            set
            {
                this.arg0Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactAddressModel[] arg1
        {
            get
            {
                return this.arg1Field;
            }
            set
            {
                this.arg1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addContact4PublicUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getIdentityValidationResultCompletedEventHandler(object sender, getIdentityValidationResultCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIdentityValidationResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getIdentityValidationResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPeoplesByCapIDsCompletedEventHandler(object sender, getPeoplesByCapIDsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeoplesByCapIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeoplesByCapIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getContactIdentityFieldsCompletedEventHandler(object sender, getContactIdentityFieldsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactIdentityFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getContactIdentityFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public GenericIdentityFieldModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((GenericIdentityFieldModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchCustomerListCompletedEventHandler(object sender, searchCustomerListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void removeContact4publicUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void setAccountOwner4publicUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPeopleByClosematchCompletedEventHandler(object sender, getPeopleByClosematchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeopleByClosematchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeopleByClosematchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void editRefContactCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPeoplesByAttrsCompletedEventHandler(object sender, getPeoplesByAttrsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeoplesByAttrsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeoplesByAttrsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRefPeoplesCompletedEventHandler(object sender, getRefPeoplesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRefPeoplesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRefPeoplesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDuplicateContactAddressListCompletedEventHandler(object sender, getDuplicateContactAddressListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDuplicateContactAddressListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDuplicateContactAddressListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ContactAddressModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ContactAddressModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAssociatedContactsByUserIdCompletedEventHandler(object sender, getAssociatedContactsByUserIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssociatedContactsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAssociatedContactsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCapContactByCapContactModelCompletedEventHandler(object sender, getCapContactByCapContactModelCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapContactByCapContactModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCapContactByCapContactModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel4WS[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel4WS[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isPrimaryContactAddressCompletedEventHandler(object sender, isPrimaryContactAddressCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isPrimaryContactAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isPrimaryContactAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createOrEditCustomersCompletedEventHandler(object sender, createOrEditCustomersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOrEditCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal createOrEditCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PeopleModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PeopleModel)(this.results[0]));
            }
        }
    }
}

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDuplicateContactAddressCompletedEventHandler(object sender, getDuplicateContactAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDuplicateContactAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDuplicateContactAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactAddressModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactAddressModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDuplicateContactAddressListCompletedEventHandler(object sender, getDuplicateContactAddressListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDuplicateContactAddressListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDuplicateContactAddressListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactAddressModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactAddressModel[])(this.results[0]));
            }
        }
    }

#pragma warning restore 1591