-- Comment: Please input your actual ID to replace XXXXX.
CREATE OR REPLACE PROCEDURE SPC_EXISTS_CHECK(P_PROCEDURE_NAME IN VARCHAR2, P_SPC IN VARCHAR2) IS
   L_COUNT_1 NUMBER;
BEGIN
   SELECT COUNT(*) INTO L_COUNT_1 FROM RSERV_PROV WHERE SERV_PROV_CODE = UPPER(P_SPC);
   IF (L_COUNT_1 <= 0) THEN
      
      --When agency does not exists, it will raise the error message
      RAISE_APPLICATION_ERROR((-20000 - 224), 'Please specify the agency code in EXEC ' || P_PROCEDURE_NAME || '(''' ||
                               UPPER(P_SPC) || ''') of file 05.enhance_public_users_and_roles_for_registration.sql');
   END IF;
END SPC_EXISTS_CHECK;
/

CREATE OR REPLACE PROCEDURE ACA_BIZ_TO_POLICY_CAPSEARCH(P_SPC IN VARCHAR2) IS
   CURSOR CUR_BIZ_DOMAIN(IV_SERV_PROV_CODE IN VARCHAR2) IS
      SELECT B.SERV_PROV_CODE, 'ACA_CAP_SEARCH_USER_ROLES' POLICY_NAME,
             --ACA_INSPECTION_USER_ROLES
             'MODULE' LEVEL_TYPE,
             SUBSTR(B.BIZDOMAIN_VALUE,
                     1,
                     LENGTH(RTRIM(LTRIM(B.BIZDOMAIN_VALUE))) -
                     LENGTH('_CAP_FILTER_USERTYPE')) LEVEL_DATA,
             'ACA_CAP_SEARCH_USER_ROLES' DATA1,
             CASE
                WHEN B.VALUE_DESC = '1' THEN
                 '1000000000'
                WHEN B.VALUE_DESC = '2' THEN
                 '0100000000'
                WHEN B.VALUE_DESC = '3' THEN
                 '0110000000'
             END DATA3, 'ACA' RIGHT_GRANTED, 'Y' STATUS, SYSDATE REC_DATE,
             'ADMIN' REC_FUL_NAM, 'A' REC_STATUS, '0' MENU_LEVEL
        FROM RBIZDOMAIN_VALUE B, RBIZDOMAIN A
       WHERE A.SERV_PROV_CODE = B.SERV_PROV_CODE
         AND A.BIZDOMAIN = B.BIZDOMAIN
         AND A.REC_STATUS = 'A'
         AND UPPER(B.BIZDOMAIN) = 'ACA_CONFIGS'
         AND UPPER(B.BIZDOMAIN_VALUE) LIKE '%_CAP_FILTER_USERTYPE'
         AND B.SERV_PROV_CODE = IV_SERV_PROV_CODE
         AND NOT EXISTS (SELECT 1
                FROM XPOLICY
               WHERE SERV_PROV_CODE = B.SERV_PROV_CODE
                 AND POLICY_NAME = 'ACA_CAP_SEARCH_USER_ROLES'
                 AND UPPER(LEVEL_TYPE) = 'MODULE'
                 AND LEVEL_DATA =
                     SUBSTR(B.BIZDOMAIN_VALUE,
                            1,
                            LENGTH(RTRIM(LTRIM(B.BIZDOMAIN_VALUE))) -
                            LENGTH('_CAP_FILTER_USERTYPE'))
                 AND DATA1 = 'ACA_CAP_SEARCH_USER_ROLES'
                 AND RIGHT_GRANTED = 'ACA');
   V_AGENCYCODE VARCHAR2(15) := P_SPC;
   V_POLICYSEQ  NUMBER;
BEGIN
   -- check agency code
   SPC_EXISTS_CHECK('ACA_BIZ_TO_POLICY_CAPSEARCH', V_AGENCYCODE);
   SELECT LAST_NUMBER
     INTO V_POLICYSEQ
     FROM AA_SYS_SEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   FOR R_BIZDOMAIN IN CUR_BIZ_DOMAIN(P_SPC) LOOP
      --
      V_POLICYSEQ := V_POLICYSEQ + 1;
      --
      INSERT INTO XPOLICY
         (SERV_PROV_CODE, POLICY_SEQ, POLICY_NAME, LEVEL_TYPE, LEVEL_DATA,
          DATA1, RIGHT_GRANTED, STATUS, DATA3, REC_STATUS, REC_DATE, REC_FUL_NAM,
          MENU_LEVEL)
      VALUES
         (V_AGENCYCODE, V_POLICYSEQ, 'ACA_CAP_SEARCH_USER_ROLES', 'MODULE',
          R_BIZDOMAIN.LEVEL_DATA, 'ACA_CAP_SEARCH_USER_ROLES', 'ACA', 'Y',
          R_BIZDOMAIN.DATA3, 'A', SYSDATE, 'ADMIN', '0');
   END LOOP;
   --
   UPDATE AA_SYS_SEQ
      SET LAST_NUMBER = V_POLICYSEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE ACA_BIZ_TO_POLICY_INSPECTION(P_SPC IN VARCHAR2) IS
   CURSOR CUR_BIZ_DOMAIN(IV_SERV_PROV_CODE IN VARCHAR2) IS
      SELECT B.SERV_PROV_CODE, 'ACA_INSPECTION_USER_ROLES' POLICY_NAME,
             'MODULE' LEVEL_TYPE,
             SUBSTR(B.BIZDOMAIN_VALUE,
                     1,
                     LENGTH(RTRIM(LTRIM(B.BIZDOMAIN_VALUE))) -
                     LENGTH('_INSPECTION_USERTYPE')) LEVEL_DATA,
             'ACA_INSPECTION_USER_ROLES' DATA1,
             CASE
                WHEN B.VALUE_DESC = '1' THEN
                 '1000000000'
                WHEN B.VALUE_DESC = '2' THEN
                 '0100000000'
                WHEN B.VALUE_DESC = '3' THEN
                 '0110000000'
             END DATA3, 'ACA' RIGHT_GRANTED, 'Y' STATUS, SYSDATE REC_DATE,
             'ADMIN' REC_FUL_NAM, 'A' REC_STATUS, '0' MENU_LEVEL
        FROM RBIZDOMAIN_VALUE B, RBIZDOMAIN A
       WHERE A.SERV_PROV_CODE = B.SERV_PROV_CODE
         AND A.BIZDOMAIN = B.BIZDOMAIN
         AND A.REC_STATUS = 'A'
         AND UPPER(B.BIZDOMAIN) = 'ACA_CONFIGS'
         AND UPPER(B.BIZDOMAIN_VALUE) LIKE '%_INSPECTION_USERTYPE'
         AND B.SERV_PROV_CODE = IV_SERV_PROV_CODE
         AND NOT EXISTS (SELECT 1
                FROM XPOLICY
               WHERE SERV_PROV_CODE = B.SERV_PROV_CODE
                 AND POLICY_NAME = 'ACA_INSPECTION_USER_ROLES'
                 AND UPPER(LEVEL_TYPE) = 'MODULE'
                 AND LEVEL_DATA =
                     SUBSTR(B.BIZDOMAIN_VALUE,
                     1,
                     LENGTH(RTRIM(LTRIM(B.BIZDOMAIN_VALUE))) -
                     LENGTH('_INSPECTION_USERTYPE'))
                 AND DATA1 = 'ACA_INSPECTION_USER_ROLES'
                 AND RIGHT_GRANTED = 'ACA');
   V_AGENCYCODE VARCHAR2(15) := P_SPC;
   V_POLICYSEQ  NUMBER;
BEGIN
   -- check agency code
   SPC_EXISTS_CHECK('ACA_BIZ_TO_POLICY_INSPECTION', V_AGENCYCODE);
   SELECT LAST_NUMBER
     INTO V_POLICYSEQ
     FROM AA_SYS_SEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   FOR R_BIZDOMAIN IN CUR_BIZ_DOMAIN(P_SPC) LOOP
      --
      V_POLICYSEQ := V_POLICYSEQ + 1;
      --
      INSERT INTO XPOLICY
         (SERV_PROV_CODE, POLICY_SEQ, POLICY_NAME, LEVEL_TYPE, LEVEL_DATA,
          DATA1, RIGHT_GRANTED, STATUS, DATA3, REC_STATUS, REC_DATE, REC_FUL_NAM,
          MENU_LEVEL)
      VALUES
         (V_AGENCYCODE, V_POLICYSEQ, 'ACA_INSPECTION_USER_ROLES', 'MODULE',
          R_BIZDOMAIN.LEVEL_DATA, 'ACA_INSPECTION_USER_ROLES', 'ACA', 'Y',
          R_BIZDOMAIN.DATA3, 'A', SYSDATE, 'ADMIN', '0');
   END LOOP;
   --
   UPDATE AA_SYS_SEQ
      SET LAST_NUMBER = V_POLICYSEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE ACA_POLICY_INSPECTION_SCHEDULE(AGENCY_CODE IN VARCHAR2) IS
   CURSOR CUR_MODULE(IV_SERV_PROV_CODE IN VARCHAR2) IS
      SELECT CONSTANT_NAME
        FROM R1SERVER_CONSTANT B
       WHERE SERV_PROV_CODE = IV_SERV_PROV_CODE
         AND DESCRIPTION = 'Module'
         AND NOT EXISTS (SELECT 1
                           FROM XPOLICY
                        WHERE SERV_PROV_CODE = B.SERV_PROV_CODE
                           AND POLICY_NAME = 'ACA_INSPECTION_USER_ROLES'
                           AND UPPER(LEVEL_TYPE) = 'MODULE'
                           AND LEVEL_DATA = B.CONSTANT_NAME
                           AND DATA1 = 'ACA_INSPECTION_USER_ROLES'
                           AND RIGHT_GRANTED = 'ACA');
   V_POLICYSEQ NUMBER;
BEGIN
   -- check agency code
   SPC_EXISTS_CHECK('ACA_POLICY_INSPECTION_SCHEDULE', AGENCY_CODE);
   --DELETE FROM XPOLICY
    --WHERE POLICY_NAME = 'ACA_INSPECTION_USER_ROLES'
      --AND SERV_PROV_CODE = AGENCY_CODE;
   --
   SELECT LAST_NUMBER
     INTO V_POLICYSEQ
     FROM AA_SYS_SEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   FOR MODULE_LIST IN CUR_MODULE(AGENCY_CODE) LOOP
      V_POLICYSEQ := V_POLICYSEQ + 1;
      --
      INSERT INTO XPOLICY
         (SERV_PROV_CODE, POLICY_NAME,
          --ACA_CAP_SEARCH_USER_ROLES  ACA_INSPECTION_USER_ROLES
          LEVEL_TYPE,
          --'MODULE'
          LEVEL_DATA, POLICY_SEQ, DATA1,
          --'ACA_CAP_SEARCH_USER_ROLES'
          DATA3, RIGHT_GRANTED,
          --'ACA'
          STATUS,
          --'Y'
          REC_DATE,
          --GETDATE()
          REC_FUL_NAM, REC_STATUS, MENU_LEVEL)
      VALUES
         (AGENCY_CODE, 'ACA_INSPECTION_USER_ROLES', 'MODULE',
          MODULE_LIST.CONSTANT_NAME, V_POLICYSEQ, 'ACA_INSPECTION_USER_ROLES',
          '1000000000', 'ACA', 'Y', SYSDATE, 'ADMIN', 'A', '0');
   END LOOP;
   --
   UPDATE AA_SYS_SEQ
      SET LAST_NUMBER = V_POLICYSEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   COMMIT;
END;
/


CREATE OR REPLACE PROCEDURE ACA_POLICY_CAP_SEARCH(AGENCY_CODE IN VARCHAR2) IS
   CURSOR CUR_MODULE(IV_SERV_PROV_CODE IN VARCHAR2) IS
      SELECT CONSTANT_NAME
        FROM R1SERVER_CONSTANT B
       WHERE SERV_PROV_CODE = IV_SERV_PROV_CODE
         AND DESCRIPTION = 'Module'
         AND NOT EXISTS (SELECT 1
                           FROM XPOLICY
                        WHERE SERV_PROV_CODE = B.SERV_PROV_CODE
                           AND POLICY_NAME = 'ACA_CAP_SEARCH_USER_ROLES'
                           AND UPPER(LEVEL_TYPE) = 'MODULE'
                           AND LEVEL_DATA = B.CONSTANT_NAME
                           AND DATA1 = 'ACA_CAP_SEARCH_USER_ROLES'
                           AND RIGHT_GRANTED = 'ACA');
   V_POLICYSEQ NUMBER;
BEGIN
   -- check agency code
   SPC_EXISTS_CHECK('ACA_POLICY_CAP_SEARCH', AGENCY_CODE);
   --DELETE FROM XPOLICY
    --WHERE POLICY_NAME = 'ACA_CAP_SEARCH_USER_ROLES'
      --AND SERV_PROV_CODE = AGENCY_CODE;
   --
   SELECT LAST_NUMBER
     INTO V_POLICYSEQ
     FROM AA_SYS_SEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   --
   FOR MODULE_LIST IN CUR_MODULE(AGENCY_CODE) LOOP
      V_POLICYSEQ := V_POLICYSEQ + 1;
      --
      INSERT INTO XPOLICY
         (SERV_PROV_CODE, POLICY_NAME,
          --ACA_CAP_SEARCH_USER_ROLES  ACA_INSPECTION_USER_ROLES
          LEVEL_TYPE,
          --'MODULE'
          LEVEL_DATA, POLICY_SEQ, DATA1,
          --'ACA_CAP_SEARCH_USER_ROLES'
          DATA3, RIGHT_GRANTED,
          --'ACA'
          STATUS,
          --'Y'
          REC_DATE,
          --GETDATE()
          REC_FUL_NAM, REC_STATUS, MENU_LEVEL)
      VALUES
         (AGENCY_CODE, 'ACA_CAP_SEARCH_USER_ROLES', 'MODULE',
          MODULE_LIST.CONSTANT_NAME, V_POLICYSEQ, 'ACA_CAP_SEARCH_USER_ROLES',
          '1000000000', 'ACA', 'Y', SYSDATE, 'ADMIN', 'A', '0');
   END LOOP;
   --
   UPDATE AA_SYS_SEQ
      SET LAST_NUMBER = V_POLICYSEQ
    WHERE SEQUENCE_NAME = 'XPOLICY_SEQ';
   COMMIT;
END;
/

exec ACA_BIZ_TO_POLICY_CAPSEARCH('XXXXX');

exec ACA_BIZ_TO_POLICY_INSPECTION('XXXXX');

exec ACA_POLICY_INSPECTION_SCHEDULE ('XXXXX');

exec ACA_POLICY_CAP_SEARCH ('XXXXX');

drop PROCEDURE ACA_BIZ_TO_POLICY_CAPSEARCH;

drop PROCEDURE ACA_BIZ_TO_POLICY_INSPECTION;

DROP PROCEDURE ACA_POLICY_INSPECTION_SCHEDULE;

DROP PROCEDURE ACA_POLICY_CAP_SEARCH;

drop procedure SPC_EXISTS_CHECK;

