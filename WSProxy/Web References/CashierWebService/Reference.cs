/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2010
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 182693 2010-10-19 08:24:27Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CashierWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class CashierWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback postTransactionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptByPKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomizedReceiptByReceiptNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CashierWebServiceService() {
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event postTransactionLogCompletedEventHandler postTransactionLogCompleted;
        
        /// <remarks/>
        public event getReceiptByPKCompletedEventHandler getReceiptByPKCompleted;
        
        /// <remarks/>
        public event getCustomizedReceiptByReceiptNoCompletedEventHandler getCustomizedReceiptByReceiptNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void postTransactionLog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] PostTransactionLogModel4WS[] arg1) {
            this.Invoke("postTransactionLog", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public void postTransactionLogAsync(string arg0, PostTransactionLogModel4WS[] arg1) {
            this.postTransactionLogAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void postTransactionLogAsync(string arg0, PostTransactionLogModel4WS[] arg1, object userState) {
            if ((this.postTransactionLogOperationCompleted == null)) {
                this.postTransactionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostTransactionLogOperationCompleted);
            }
            this.InvokeAsync("postTransactionLog", new object[] {
                        arg0,
                        arg1}, this.postTransactionLogOperationCompleted, userState);
        }
        
        private void OnpostTransactionLogOperationCompleted(object arg) {
            if ((this.postTransactionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postTransactionLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReceiptModel4WS getReceiptByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("getReceiptByPK", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((ReceiptModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getReceiptByPKAsync(string arg0, long arg1, string arg2) {
            this.getReceiptByPKAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getReceiptByPKAsync(string arg0, long arg1, string arg2, object userState) {
            if ((this.getReceiptByPKOperationCompleted == null)) {
                this.getReceiptByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptByPKOperationCompleted);
            }
            this.InvokeAsync("getReceiptByPK", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getReceiptByPKOperationCompleted, userState);
        }
        
        private void OngetReceiptByPKOperationCompleted(object arg) {
            if ((this.getReceiptByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptByPKCompleted(this, new getReceiptByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCustomizedReceiptByReceiptNo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat4WS arg2) {
            object[] results = this.Invoke("getCustomizedReceiptByReceiptNo", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomizedReceiptByReceiptNoAsync(CapIDModel4WS arg0, long arg1, QueryFormat4WS arg2) {
            this.getCustomizedReceiptByReceiptNoAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getCustomizedReceiptByReceiptNoAsync(CapIDModel4WS arg0, long arg1, QueryFormat4WS arg2, object userState) {
            if ((this.getCustomizedReceiptByReceiptNoOperationCompleted == null)) {
                this.getCustomizedReceiptByReceiptNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomizedReceiptByReceiptNoOperationCompleted);
            }
            this.InvokeAsync("getCustomizedReceiptByReceiptNo", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getCustomizedReceiptByReceiptNoOperationCompleted, userState);
        }
        
        private void OngetCustomizedReceiptByReceiptNoOperationCompleted(object arg) {
            if ((this.getCustomizedReceiptByReceiptNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomizedReceiptByReceiptNoCompleted(this, new getCustomizedReceiptByReceiptNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
  
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void postTransactionLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getReceiptByPKCompletedEventHandler(object sender, getReceiptByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiptModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiptModel4WS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getCustomizedReceiptByReceiptNoCompletedEventHandler(object sender, getCustomizedReceiptByReceiptNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomizedReceiptByReceiptNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomizedReceiptByReceiptNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591