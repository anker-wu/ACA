/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapModel4WS.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2014
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 278983 2014-09-23 10:06:41Z ACHIEVO\alan.hu $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.235.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EDMSDocumentWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LanguageModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericTemplateFieldPK))]
    public partial class EDMSDocumentWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {

        private System.Threading.SendOrPostCallback updateDocumentSourceInfoOperationCompleted;

        private System.Threading.SendOrPostCallback getRecordDocumentListOperationCompleted;

        private System.Threading.SendOrPostCallback getPeopleDocumentOperationCompleted;

        private System.Threading.SendOrPostCallback getDocumentListOperationCompleted;

        private System.Threading.SendOrPostCallback getPeopleDocumentByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecurityPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentListByGISObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDocCategoryListOperationCompleted;

        private System.Threading.SendOrPostCallback getDocTypeByPeopleTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentByPkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentList4PartialCapOperationCompleted;
        
        private System.Threading.SendOrPostCallback doDelete4PartialCapOperationCompleted;
        
        private System.Threading.SendOrPostCallback doDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocCategoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRequiredDocumentListOperationCompleted;

        private System.Threading.SendOrPostCallback getAssociatedDocumentAgencyOperationCompleted;

        private System.Threading.SendOrPostCallback updateDocumentComponentNamesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EDMSDocumentWebServiceService() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getRecordDocumentListCompletedEventHandler getRecordDocumentListCompleted;

        /// <remarks/>
        public event getPeopleDocumentCompletedEventHandler getPeopleDocumentCompleted;

        /// <remarks/>
        public event getPeopleDocumentByCapIDCompletedEventHandler getPeopleDocumentByCapIDCompleted;

        /// <remarks/>
        public event getDocumentListCompletedEventHandler getDocumentListCompleted;

        /// <remarks/>
        public event getSecurityPolicyCompletedEventHandler getSecurityPolicyCompleted;
        
        /// <remarks/>
        public event getDocumentListByGISObjectCompletedEventHandler getDocumentListByGISObjectCompleted;
        
        /// <remarks/>
        public event getAllDocCategoryListCompletedEventHandler getAllDocCategoryListCompleted;
        
        /// <remarks/>
        public event getDocTypeByPeopleTypeCompletedEventHandler getDocTypeByPeopleTypeCompleted;
        
        /// <remarks/>
        public event getDocumentByPkCompletedEventHandler getDocumentByPkCompleted;
        
        /// <remarks/>
        public event getDocumentList4PartialCapCompletedEventHandler getDocumentList4PartialCapCompleted;
        
        /// <remarks/>
        public event doDelete4PartialCapCompletedEventHandler doDelete4PartialCapCompleted;
        
        /// <remarks/>
        public event doDeleteCompletedEventHandler doDeleteCompleted;
        
        /// <remarks/>
        public event getDocCategoryListCompletedEventHandler getDocCategoryListCompleted;
        
		/// <remarks/>
		public event getRequiredDocumentListCompletedEventHandler getRequiredDocumentListCompleted;

        /// <remarks/>
        public event getAssociatedDocumentAgencyCompletedEventHandler getAssociatedDocumentAgencyCompleted;

        /// <remarks/>
        public event updateDocumentComponentNamesCompletedEventHandler updateDocumentComponentNamesCompleted;

        /// <remarks/>
        public event updateDocumentSourceInfoCompletedEventHandler updateDocumentSourceInfoCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateDocumentSourceInfo([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel[] arg0)
        {
            this.Invoke("updateDocumentSourceInfo", new object[] {
                        arg0});
        }

        /// <remarks/>
        public void updateDocumentSourceInfoAsync(DocumentModel[] arg0)
        {
            this.updateDocumentSourceInfoAsync(arg0, null);
        }

        /// <remarks/>
        public void updateDocumentSourceInfoAsync(DocumentModel[] arg0, object userState)
        {
            if ((this.updateDocumentSourceInfoOperationCompleted == null))
            {
                this.updateDocumentSourceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentSourceInfoOperationCompleted);
            }
            this.InvokeAsync("updateDocumentSourceInfo", new object[] {
                        arg0}, this.updateDocumentSourceInfoOperationCompleted, userState);
        }

        /// <remarks/>
        private void OnupdateDocumentSourceInfoOperationCompleted(object arg)
        {
            if ((this.updateDocumentSourceInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentSourceInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel[] getRecordDocumentList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg3)
        {
            object[] results = this.Invoke("getRecordDocumentList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DocumentModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getRecordDocumentListAsync(string arg0, string arg1, string arg2, CapIDModel arg3) {
            this.getRecordDocumentListAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getRecordDocumentListAsync(string arg0, string arg1, string arg2, CapIDModel arg3, object userState)
        {
            if ((this.getRecordDocumentListOperationCompleted == null))
            {
                this.getRecordDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecordDocumentListOperationCompleted);
            }
            this.InvokeAsync("getRecordDocumentList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getRecordDocumentListOperationCompleted, userState);
        }

        private void OngetRecordDocumentListOperationCompleted(object arg)
        {
            if ((this.getRecordDocumentListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecordDocumentListCompleted(this, new getRecordDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentResultModel getPeopleDocument([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] EntityModel[] arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getPeopleDocument", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((DocumentResultModel)(results[0]));
        }

        /// <remarks/>
        public void getPeopleDocumentAsync(string arg0, EntityModel[] arg1, string arg2)
        {
            this.getPeopleDocumentAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getPeopleDocumentAsync(string arg0, EntityModel[] arg1, string arg2, object userState)
        {
            if ((this.getPeopleDocumentOperationCompleted == null))
            {
                this.getPeopleDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeopleDocumentOperationCompleted);
            }
            this.InvokeAsync("getPeopleDocument", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getPeopleDocumentOperationCompleted, userState);
        }

        private void OngetPeopleDocumentOperationCompleted(object arg)
        {
            if ((this.getPeopleDocumentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeopleDocumentCompleted(this, new getPeopleDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentResultModel getPeopleDocumentByCapID([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getPeopleDocumentByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DocumentResultModel)(results[0]));
        }

        /// <remarks/>
        public void getPeopleDocumentByCapIDAsync(string arg0, string arg1, CapIDModel arg2)
        {
            this.getPeopleDocumentByCapIDAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getPeopleDocumentByCapIDAsync(string arg0, string arg1, CapIDModel arg2, object userState)
        {
            if ((this.getPeopleDocumentByCapIDOperationCompleted == null))
            {
                this.getPeopleDocumentByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeopleDocumentByCapIDOperationCompleted);
            }
            this.InvokeAsync("getPeopleDocumentByCapID", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getPeopleDocumentByCapIDOperationCompleted, userState);
        }

        private void OngetPeopleDocumentByCapIDOperationCompleted(object arg)
        {
            if ((this.getPeopleDocumentByCapIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeopleDocumentByCapIDCompleted(this, new getPeopleDocumentByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel[] getDocumentList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentEntityAssociationModel[] arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getDocumentList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DocumentModel[])(results[0]));
        }

        /// <remarks/>
        public void getDocumentListAsync(string arg0, DocumentEntityAssociationModel[] arg1, string[] arg2, string arg3)
        {
            this.getDocumentListAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getDocumentListAsync(string arg0, DocumentEntityAssociationModel[] arg1, string[] arg2, string arg3, object userState)
        {
            if ((this.getDocumentListOperationCompleted == null))
            {
                this.getDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentListOperationCompleted);
            }
            this.InvokeAsync("getDocumentList", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getDocumentListOperationCompleted, userState);
        }

        private void OngetDocumentListOperationCompleted(object arg)
        {
            if ((this.getDocumentListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentListCompleted(this, new getDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EdmsPolicyModel4WS getSecurityPolicy([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg3) {
            object[] results = this.Invoke("getSecurityPolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((EdmsPolicyModel4WS)(results[0]));
        }
        
        /// <remarks/>
        public void getSecurityPolicyAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3) {
            this.getSecurityPolicyAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getSecurityPolicyAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3, object userState) {
            if ((this.getSecurityPolicyOperationCompleted == null)) {
                this.getSecurityPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecurityPolicyOperationCompleted);
            }
            this.InvokeAsync("getSecurityPolicy", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getSecurityPolicyOperationCompleted, userState);
        }
        
        private void OngetSecurityPolicyOperationCompleted(object arg) {
            if ((this.getSecurityPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecurityPolicyCompleted(this, new getSecurityPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel[] getDocumentListByGISObject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] GISObjectModel[] arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getDocumentListByGISObject", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DocumentModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentListByGISObjectAsync(string arg0, GISObjectModel[] arg1, string[] arg2, string arg3) {
            this.getDocumentListByGISObjectAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getDocumentListByGISObjectAsync(string arg0, GISObjectModel[] arg1, string[] arg2, string arg3, object userState) {
            if ((this.getDocumentListByGISObjectOperationCompleted == null)) {
                this.getDocumentListByGISObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentListByGISObjectOperationCompleted);
            }
            this.InvokeAsync("getDocumentListByGISObject", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getDocumentListByGISObjectOperationCompleted, userState);
        }
        
        private void OngetDocumentListByGISObjectOperationCompleted(object arg) {
            if ((this.getDocumentListByGISObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentListByGISObjectCompleted(this, new getDocumentListByGISObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefDocumentModel[] getAllDocCategoryList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg1)
        {
            object[] results = this.Invoke("getAllDocCategoryList", new object[] {
                        arg0,
                        arg1});
            return ((RefDocumentModel[])(results[0]));
        }

        /// <remarks/>
        public void getAllDocCategoryListAsync(string arg0, CapTypeModel arg1)
        {
            this.getAllDocCategoryListAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getAllDocCategoryListAsync(string arg0, CapTypeModel arg1, object userState)
        {
            if ((this.getAllDocCategoryListOperationCompleted == null))
            {
                this.getAllDocCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDocCategoryListOperationCompleted);
            }
            this.InvokeAsync("getAllDocCategoryList", new object[] {
                        arg0,
                        arg1}, this.getAllDocCategoryListOperationCompleted, userState);
        }
       
        private void OngetAllDocCategoryListOperationCompleted(object arg) {
            if ((this.getAllDocCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDocCategoryListCompleted(this, new getAllDocCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefDocumentModel[] getDocTypeByPeopleType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2)
        {
            object[] results = this.Invoke("getDocTypeByPeopleType", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((RefDocumentModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocTypeByPeopleTypeAsync(string arg0, string arg1, string arg2)
        {
            this.getDocTypeByPeopleTypeAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getDocTypeByPeopleTypeAsync(string arg0, string arg1, string arg2, object userState)
        {
            if ((this.getDocTypeByPeopleTypeOperationCompleted == null))
            {
                this.getDocTypeByPeopleTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocTypeByPeopleTypeOperationCompleted);
            }
            this.InvokeAsync("getDocTypeByPeopleType", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getDocTypeByPeopleTypeOperationCompleted, userState);
        }

        private void OngetDocTypeByPeopleTypeOperationCompleted(object arg)
        {
            if ((this.getDocTypeByPeopleTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocTypeByPeopleTypeCompleted(this, new getDocTypeByPeopleTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel getDocumentByPk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5)
        {
            object[] results = this.Invoke("getDocumentByPk", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((DocumentModel)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentByPkAsync(string arg0, long arg1, CapIDModel arg2, bool arg3, bool arg4,string arg5) {
            this.getDocumentByPkAsync(arg0, arg1, arg2, arg3, arg4,arg5, null);
        }
        
        /// <remarks/>
        public void getDocumentByPkAsync(string arg0, long arg1, CapIDModel arg2, bool arg3, bool arg4, string arg5, object userState)
        {
            if ((this.getDocumentByPkOperationCompleted == null)) {
                this.getDocumentByPkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentByPkOperationCompleted);
            }
            this.InvokeAsync("getDocumentByPk", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getDocumentByPkOperationCompleted, userState);
        }
        
        private void OngetDocumentByPkOperationCompleted(object arg) {
            if ((this.getDocumentByPkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentByPkCompleted(this, new getDocumentByPkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DocumentModel[] getDocumentList4PartialCap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg3) {
            object[] results = this.Invoke("getDocumentList4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((DocumentModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentList4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel arg3) {
            this.getDocumentList4PartialCapAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getDocumentList4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel arg3, object userState) {
            if ((this.getDocumentList4PartialCapOperationCompleted == null)) {
                this.getDocumentList4PartialCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentList4PartialCapOperationCompleted);
            }
            this.InvokeAsync("getDocumentList4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getDocumentList4PartialCapOperationCompleted, userState);
        }
        
        private void OngetDocumentList4PartialCapOperationCompleted(object arg) {
            if ((this.getDocumentList4PartialCapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentList4PartialCapCompleted(this, new getDocumentList4PartialCapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool doDelete4PartialCap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("doDelete4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void doDelete4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3, long arg4, string arg5) {
            this.doDelete4PartialCapAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void doDelete4PartialCapAsync(string arg0, string arg1, string arg2, CapIDModel4WS arg3, long arg4, string arg5, object userState) {
            if ((this.doDelete4PartialCapOperationCompleted == null)) {
                this.doDelete4PartialCapOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoDelete4PartialCapOperationCompleted);
            }
            this.InvokeAsync("doDelete4PartialCap", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.doDelete4PartialCapOperationCompleted, userState);
        }
        
        private void OndoDelete4PartialCapOperationCompleted(object arg) {
            if ((this.doDelete4PartialCapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doDelete4PartialCapCompleted(this, new doDelete4PartialCapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool doDelete([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("doDelete", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void doDeleteAsync(string arg0, string arg1, DocumentModel arg2, string arg3) {
            this.doDeleteAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void doDeleteAsync(string arg0, string arg1, DocumentModel arg2, string arg3, object userState) {
            if ((this.doDeleteOperationCompleted == null)) {
                this.doDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoDeleteOperationCompleted);
            }
            this.InvokeAsync("doDelete", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.doDeleteOperationCompleted, userState);
        }
        
        private void OndoDeleteOperationCompleted(object arg) {
            if ((this.doDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doDeleteCompleted(this, new doDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefDocumentModel[] getDocCategoryList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getDocCategoryList", new object[] {
                        arg0,
                        arg1});
            return ((RefDocumentModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocCategoryListAsync(CapIDModel4WS arg0, string arg1) {
            this.getDocCategoryListAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getDocCategoryListAsync(CapIDModel4WS arg0, string arg1, object userState) {
            if ((this.getDocCategoryListOperationCompleted == null)) {
                this.getDocCategoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocCategoryListOperationCompleted);
            }
            this.InvokeAsync("getDocCategoryList", new object[] {
                        arg0,
                        arg1}, this.getDocCategoryListOperationCompleted, userState);
        }
        
        private void OngetDocCategoryListOperationCompleted(object arg) {
            if ((this.getDocCategoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocCategoryListCompleted(this, new getDocCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
		/// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RefRequiredDocumentModel[] getRequiredDocumentList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RefRequiredDocumentModel arg0) {
            object[] results = this.Invoke("getRequiredDocumentList", new object[] {
                        arg0});
            return ((RefRequiredDocumentModel[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getAssociatedDocumentAgency([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1)
        {
            object[] results = this.Invoke("getAssociatedDocumentAgency", new object[] {
                        arg0,
                        arg1});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getAssociatedDocumentAgencyAsync(string arg0, long arg1)
        {
            this.getAssociatedDocumentAgencyAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getAssociatedDocumentAgencyAsync(string arg0, long arg1, object userState)
        {
            if ((this.getAssociatedDocumentAgencyOperationCompleted == null))
            {
                this.getAssociatedDocumentAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssociatedDocumentAgencyOperationCompleted);
            }
            this.InvokeAsync("getAssociatedDocumentAgency", new object[] {
                        arg0,
                        arg1}, this.getAssociatedDocumentAgencyOperationCompleted, userState);
        }

        private void OngetAssociatedDocumentAgencyOperationCompleted(object arg)
        {
            if ((this.getAssociatedDocumentAgencyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssociatedDocumentAgencyCompleted(this, new getAssociatedDocumentAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public void getRequiredDocumentListAsync(RefRequiredDocumentModel arg0) {
            this.getRequiredDocumentListAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getRequiredDocumentListAsync(RefRequiredDocumentModel arg0, object userState) {
            if ((this.getRequiredDocumentListOperationCompleted == null)) {
                this.getRequiredDocumentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRequiredDocumentListOperationCompleted);
            }
            this.InvokeAsync("getRequiredDocumentList", new object[] {
                        arg0}, this.getRequiredDocumentListOperationCompleted, userState);
        }
        
        private void OngetRequiredDocumentListOperationCompleted(object arg) {
            if ((this.getRequiredDocumentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRequiredDocumentListCompleted(this, new getRequiredDocumentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateDocumentComponentNames([System.Xml.Serialization.XmlElementAttribute("arg0", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DocumentModel[] arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            this.Invoke("updateDocumentComponentNames", new object[] {
                        arg0,
                        arg1});
        }

        /// <remarks/>
        public void updateDocumentComponentNamesAsync(DocumentModel[] arg0, string arg1)
        {
            this.updateDocumentComponentNamesAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void updateDocumentComponentNamesAsync(DocumentModel[] arg0, string arg1, object userState)
        {
            if ((this.updateDocumentComponentNamesOperationCompleted == null))
            {
                this.updateDocumentComponentNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentComponentNamesOperationCompleted);
            }
            this.InvokeAsync("updateDocumentComponentNames", new object[] {
                        arg0,
                        arg1}, this.updateDocumentComponentNamesOperationCompleted, userState);
        }

        private void OnupdateDocumentComponentNamesOperationCompleted(object arg)
        {
            if ((this.updateDocumentComponentNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentComponentNamesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDocumentSourceInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAssociatedDocumentAgencyCompletedEventHandler(object sender, getAssociatedDocumentAgencyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssociatedDocumentAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAssociatedDocumentAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRecordDocumentListCompletedEventHandler(object sender, getRecordDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecordDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal getRecordDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPeopleDocumentCompletedEventHandler(object sender, getPeopleDocumentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeopleDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeopleDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DocumentModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPeopleDocumentByCapIDCompletedEventHandler(object sender, getPeopleDocumentByCapIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPeopleDocumentByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeopleDocumentByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DocumentModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSecurityPolicyCompletedEventHandler(object sender, getSecurityPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecurityPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecurityPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EdmsPolicyModel4WS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EdmsPolicyModel4WS)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocumentListCompletedEventHandler(object sender, getDocumentListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DocumentModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocumentListByGISObjectCompletedEventHandler(object sender, getDocumentListByGISObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentListByGISObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentListByGISObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocumentByPkCompletedEventHandler(object sender, getDocumentByPkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentByPkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentByPkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocumentList4PartialCapCompletedEventHandler(object sender, getDocumentList4PartialCapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentList4PartialCapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentList4PartialCapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocTypeByPeopleTypeCompletedEventHandler(object sender, getDocTypeByPeopleTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocTypeByPeopleTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDocTypeByPeopleTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RefDocumentModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RefDocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doDelete4PartialCapCompletedEventHandler(object sender, doDelete4PartialCapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doDelete4PartialCapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doDelete4PartialCapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void doDeleteCompletedEventHandler(object sender, doDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDocCategoryListCompletedEventHandler(object sender, getDocCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefDocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefDocumentModel[])(this.results[0]));
            }
        }
    }
    
	/// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getRequiredDocumentListCompletedEventHandler(object sender, getRequiredDocumentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRequiredDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRequiredDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefRequiredDocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefRequiredDocumentModel[])(this.results[0]));
            }
        }
    }
	
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllDocCategoryListCompletedEventHandler(object sender, getAllDocCategoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDocCategoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDocCategoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefDocumentModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefDocumentModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDocumentComponentNamesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591
