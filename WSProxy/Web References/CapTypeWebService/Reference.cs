/**
 * <pre>
 * 
 *  Accela Citizen Access
 *  File: CapTypeWebService.cs
 * 
 *  Accela, Inc.
 *  Copyright (C): 2007-2012
 * 
 *  Description:
 * 
 *  Notes:
 * $Id: Reference.cs 234077 2012-09-28 10:03:14Z ACHIEVO\daly.zeng $.
 *  Revision History
 *  &lt;Date&gt;,    &lt;Who&gt;,    &lt;What&gt;
 * </pre>
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace Accela.ACA.WSProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CapTypeWebServiceServiceSoapBinding", Namespace="http://service.webservice.accela.com/")]
    public partial class CapTypeWebServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCapTypeDetailListByModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback isMatchTheFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeList4ACAByModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeListByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeByPKOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeListByModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeByCapIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilteredCapTypesByPublicUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeList4ACAPageFlowGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeByCapIDForShoppingCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeList4ACAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapTypeListByPKsOperationCompleted;

        private System.Threading.SendOrPostCallback getCapTypeByAliasOperationCompleted;

        private System.Threading.SendOrPostCallback getDependentCapTypeListOperationCompleted;

        private System.Threading.SendOrPostCallback getPrerequisitesCapTypeListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CapTypeWebServiceService() {
            
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCapTypeDetailListByModuleCompletedEventHandler getCapTypeDetailListByModuleCompleted;
        
        /// <remarks/>
        public event isMatchTheFilterCompletedEventHandler isMatchTheFilterCompleted;
        
        /// <remarks/>
        public event getCapTypeList4ACAByModuleCompletedEventHandler getCapTypeList4ACAByModuleCompleted;
        
        /// <remarks/>
        public event getCapTypeListByFilterCompletedEventHandler getCapTypeListByFilterCompleted;
        
        /// <remarks/>
        public event getCapTypeListCompletedEventHandler getCapTypeListCompleted;
        
        /// <remarks/>
        public event getCapTypeByPKCompletedEventHandler getCapTypeByPKCompleted;
        
        /// <remarks/>
        public event getCapTypeListByModuleCompletedEventHandler getCapTypeListByModuleCompleted;
        
        /// <remarks/>
        public event getCapTypeByCapIDCompletedEventHandler getCapTypeByCapIDCompleted;
        
        /// <remarks/>
        public event getFilteredCapTypesByPublicUserCompletedEventHandler getFilteredCapTypesByPublicUserCompleted;
        
        /// <remarks/>
        public event getCapTypeList4ACAPageFlowGroupCompletedEventHandler getCapTypeList4ACAPageFlowGroupCompleted;
        
        /// <remarks/>
        public event getCapTypeByCapIDForShoppingCartCompletedEventHandler getCapTypeByCapIDForShoppingCartCompleted;
        
        /// <remarks/>
        public event getCapTypeList4ACACompletedEventHandler getCapTypeList4ACACompleted;
        
        /// <remarks/>
        public event getCapTypeListByPKsCompletedEventHandler getCapTypeListByPKsCompleted;

        /// <remarks/>
        public event getCapTypeByAliasCompletedEventHandler getCapTypeByAliasCompleted;

        /// <remarks/>
        public event getDependentCapTypeListCompletedEventHandler getDependentCapTypeListCompleted;

        /// <remarks/>
        public event getPrerequisitesCapTypeListCompletedEventHandler getPrerequisitesCapTypeListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeDetailModel[] getCapTypeDetailListByModule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2) {
            object[] results = this.Invoke("getCapTypeDetailListByModule", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((CapTypeDetailModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeDetailListByModuleAsync(string arg0, string arg1, QueryFormat arg2) {
            this.getCapTypeDetailListByModuleAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getCapTypeDetailListByModuleAsync(string arg0, string arg1, QueryFormat arg2, object userState) {
            if ((this.getCapTypeDetailListByModuleOperationCompleted == null)) {
                this.getCapTypeDetailListByModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeDetailListByModuleOperationCompleted);
            }
            this.InvokeAsync("getCapTypeDetailListByModule", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getCapTypeDetailListByModuleOperationCompleted, userState);
        }
        
        private void OngetCapTypeDetailListByModuleOperationCompleted(object arg) {
            if ((this.getCapTypeDetailListByModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeDetailListByModuleCompleted(this, new getCapTypeDetailListByModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isMatchTheFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("isMatchTheFilter", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isMatchTheFilterAsync(string arg0, CapTypeModel arg1, string arg2, string arg3) {
            this.isMatchTheFilterAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void isMatchTheFilterAsync(string arg0, CapTypeModel arg1, string arg2, string arg3, object userState) {
            if ((this.isMatchTheFilterOperationCompleted == null)) {
                this.isMatchTheFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisMatchTheFilterOperationCompleted);
            }
            this.InvokeAsync("isMatchTheFilter", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.isMatchTheFilterOperationCompleted, userState);
        }
        
        private void OnisMatchTheFilterOperationCompleted(object arg) {
            if ((this.isMatchTheFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isMatchTheFilterCompleted(this, new isMatchTheFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeList4ACAByModule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2) {
            object[] results = this.Invoke("getCapTypeList4ACAByModule", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAByModuleAsync(string arg0, string arg1, QueryFormat arg2) {
            this.getCapTypeList4ACAByModuleAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAByModuleAsync(string arg0, string arg1, QueryFormat arg2, object userState) {
            if ((this.getCapTypeList4ACAByModuleOperationCompleted == null)) {
                this.getCapTypeList4ACAByModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeList4ACAByModuleOperationCompleted);
            }
            this.InvokeAsync("getCapTypeList4ACAByModule", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getCapTypeList4ACAByModuleOperationCompleted, userState);
        }
        
        private void OngetCapTypeList4ACAByModuleOperationCompleted(object arg) {
            if ((this.getCapTypeList4ACAByModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeList4ACAByModuleCompleted(this, new getCapTypeList4ACAByModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeListByFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4) {
            object[] results = this.Invoke("getCapTypeListByFilter", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeListByFilterAsync(string arg0, string arg1, string arg2, string arg3, string arg4) {
            this.getCapTypeListByFilterAsync(arg0, arg1, arg2, arg3, arg4, null);
        }
        
        /// <remarks/>
        public void getCapTypeListByFilterAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState) {
            if ((this.getCapTypeListByFilterOperationCompleted == null)) {
                this.getCapTypeListByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeListByFilterOperationCompleted);
            }
            this.InvokeAsync("getCapTypeListByFilter", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getCapTypeListByFilterOperationCompleted, userState);
        }
        
        private void OngetCapTypeListByFilterOperationCompleted(object arg) {
            if ((this.getCapTypeListByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeListByFilterCompleted(this, new getCapTypeListByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg2) {
            object[] results = this.Invoke("getCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeListAsync(string arg0, string arg1, QueryFormat arg2) {
            this.getCapTypeListAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getCapTypeListAsync(string arg0, string arg1, QueryFormat arg2, object userState) {
            if ((this.getCapTypeListOperationCompleted == null)) {
                this.getCapTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeListOperationCompleted);
            }
            this.InvokeAsync("getCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getCapTypeListOperationCompleted, userState);
        }
        
        private void OngetCapTypeListOperationCompleted(object arg) {
            if ((this.getCapTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeListCompleted(this, new getCapTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeDetailModel getCapTypeByPK([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel arg0) {
            object[] results = this.Invoke("getCapTypeByPK", new object[] {
                        arg0});
            return ((CapTypeDetailModel)(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeByPKAsync(CapTypeModel arg0) {
            this.getCapTypeByPKAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCapTypeByPKAsync(CapTypeModel arg0, object userState) {
            if ((this.getCapTypeByPKOperationCompleted == null)) {
                this.getCapTypeByPKOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeByPKOperationCompleted);
            }
            this.InvokeAsync("getCapTypeByPK", new object[] {
                        arg0}, this.getCapTypeByPKOperationCompleted, userState);
        }
        
        private void OngetCapTypeByPKOperationCompleted(object arg) {
            if ((this.getCapTypeByPKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeByPKCompleted(this, new getCapTypeByPKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeListByModule([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat arg3) {
            object[] results = this.Invoke("getCapTypeListByModule", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeListByModuleAsync(string arg0, string arg1, string arg2, QueryFormat arg3) {
            this.getCapTypeListByModuleAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getCapTypeListByModuleAsync(string arg0, string arg1, string arg2, QueryFormat arg3, object userState) {
            if ((this.getCapTypeListByModuleOperationCompleted == null)) {
                this.getCapTypeListByModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeListByModuleOperationCompleted);
            }
            this.InvokeAsync("getCapTypeListByModule", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getCapTypeListByModuleOperationCompleted, userState);
        }
        
        private void OngetCapTypeListByModuleOperationCompleted(object arg) {
            if ((this.getCapTypeListByModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeListByModuleCompleted(this, new getCapTypeListByModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel getCapTypeByCapID([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0) {
            object[] results = this.Invoke("getCapTypeByCapID", new object[] {
                        arg0});
            return ((CapTypeModel)(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeByCapIDAsync(CapIDModel4WS arg0) {
            this.getCapTypeByCapIDAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCapTypeByCapIDAsync(CapIDModel4WS arg0, object userState) {
            if ((this.getCapTypeByCapIDOperationCompleted == null)) {
                this.getCapTypeByCapIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeByCapIDOperationCompleted);
            }
            this.InvokeAsync("getCapTypeByCapID", new object[] {
                        arg0}, this.getCapTypeByCapIDOperationCompleted, userState);
        }
        
        private void OngetCapTypeByCapIDOperationCompleted(object arg) {
            if ((this.getCapTypeByCapIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeByCapIDCompleted(this, new getCapTypeByCapIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getFilteredCapTypesByPublicUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getFilteredCapTypesByPublicUser", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getFilteredCapTypesByPublicUserAsync(string arg0, string arg1, string arg2, string arg3) {
            this.getFilteredCapTypesByPublicUserAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getFilteredCapTypesByPublicUserAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.getFilteredCapTypesByPublicUserOperationCompleted == null)) {
                this.getFilteredCapTypesByPublicUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilteredCapTypesByPublicUserOperationCompleted);
            }
            this.InvokeAsync("getFilteredCapTypesByPublicUser", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getFilteredCapTypesByPublicUserOperationCompleted, userState);
        }
        
        private void OngetFilteredCapTypesByPublicUserOperationCompleted(object arg) {
            if ((this.getFilteredCapTypesByPublicUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilteredCapTypesByPublicUserCompleted(this, new getFilteredCapTypesByPublicUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeList4ACAPageFlowGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getCapTypeList4ACAPageFlowGroup", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAPageFlowGroupAsync(string arg0, string arg1, string arg2, string arg3) {
            this.getCapTypeList4ACAPageFlowGroupAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAPageFlowGroupAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.getCapTypeList4ACAPageFlowGroupOperationCompleted == null)) {
                this.getCapTypeList4ACAPageFlowGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeList4ACAPageFlowGroupOperationCompleted);
            }
            this.InvokeAsync("getCapTypeList4ACAPageFlowGroup", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getCapTypeList4ACAPageFlowGroupOperationCompleted, userState);
        }
        
        private void OngetCapTypeList4ACAPageFlowGroupOperationCompleted(object arg) {
            if ((this.getCapTypeList4ACAPageFlowGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeList4ACAPageFlowGroupCompleted(this, new getCapTypeList4ACAPageFlowGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel getCapTypeByCapIDForShoppingCart([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel4WS arg0) {
            object[] results = this.Invoke("getCapTypeByCapIDForShoppingCart", new object[] {
                        arg0});
            return ((CapTypeModel)(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeByCapIDForShoppingCartAsync(CapIDModel4WS arg0) {
            this.getCapTypeByCapIDForShoppingCartAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCapTypeByCapIDForShoppingCartAsync(CapIDModel4WS arg0, object userState) {
            if ((this.getCapTypeByCapIDForShoppingCartOperationCompleted == null)) {
                this.getCapTypeByCapIDForShoppingCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeByCapIDForShoppingCartOperationCompleted);
            }
            this.InvokeAsync("getCapTypeByCapIDForShoppingCart", new object[] {
                        arg0}, this.getCapTypeByCapIDForShoppingCartOperationCompleted, userState);
        }
        
        private void OngetCapTypeByCapIDForShoppingCartOperationCompleted(object arg) {
            if ((this.getCapTypeByCapIDForShoppingCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeByCapIDForShoppingCartCompleted(this, new getCapTypeByCapIDForShoppingCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeList4ACA([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string servProvCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string moduleName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string vchType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] QueryFormat queryFormat4ws) {
            object[] results = this.Invoke("getCapTypeList4ACA", new object[] {
                        servProvCode,
                        moduleName,
                        vchType,
                        queryFormat4ws});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAAsync(string servProvCode, string moduleName, string vchType, QueryFormat queryFormat4ws) {
            this.getCapTypeList4ACAAsync(servProvCode, moduleName, vchType, queryFormat4ws, null);
        }
        
        /// <remarks/>
        public void getCapTypeList4ACAAsync(string servProvCode, string moduleName, string vchType, QueryFormat queryFormat4ws, object userState) {
            if ((this.getCapTypeList4ACAOperationCompleted == null)) {
                this.getCapTypeList4ACAOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeList4ACAOperationCompleted);
            }
            this.InvokeAsync("getCapTypeList4ACA", new object[] {
                        servProvCode,
                        moduleName,
                        vchType,
                        queryFormat4ws}, this.getCapTypeList4ACAOperationCompleted, userState);
        }
        
        private void OngetCapTypeList4ACAOperationCompleted(object arg) {
            if ((this.getCapTypeList4ACACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeList4ACACompleted(this, new getCapTypeList4ACACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.webservice.accela.com/", ResponseNamespace="http://service.webservice.accela.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getCapTypeListByPKs([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] CapTypeModel[] arg0) {
            object[] results = this.Invoke("getCapTypeListByPKs", new object[] {
                        arg0});
            return ((CapTypeModel[])(results[0]));
        }
        
        /// <remarks/>
        public void getCapTypeListByPKsAsync(CapTypeModel[] arg0) {
            this.getCapTypeListByPKsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCapTypeListByPKsAsync(CapTypeModel[] arg0, object userState) {
            if ((this.getCapTypeListByPKsOperationCompleted == null)) {
                this.getCapTypeListByPKsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeListByPKsOperationCompleted);
            }
            this.InvokeAsync("getCapTypeListByPKs", new object[] {
                        arg0}, this.getCapTypeListByPKsOperationCompleted, userState);
        }
        
        private void OngetCapTypeListByPKsOperationCompleted(object arg) {
            if ((this.getCapTypeListByPKsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeListByPKsCompleted(this, new getCapTypeListByPKsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeDetailModel getCapTypeByAlias([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getCapTypeByAlias", new object[] {
                        arg0,
                        arg1});
            return ((CapTypeDetailModel)(results[0]));
        }

        /// <remarks/>
        public void getCapTypeByAliasAsync(string arg0, string arg1)
        {
            this.getCapTypeByAliasAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getCapTypeByAliasAsync(string arg0, string arg1, object userState)
        {
            if ((this.getCapTypeByAliasOperationCompleted == null))
            {
                this.getCapTypeByAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapTypeByAliasOperationCompleted);
            }
            this.InvokeAsync("getCapTypeByAlias", new object[] {
                        arg0,
                        arg1}, this.getCapTypeByAliasOperationCompleted, userState);
        }

        private void OngetCapTypeByAliasOperationCompleted(object arg)
        {
            if ((this.getCapTypeByAliasCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapTypeByAliasCompleted(this, new getCapTypeByAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getDependentCapTypeList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg2)
        {
            object[] results = this.Invoke("getDependentCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((CapTypeModel[])(results[0]));
        }

        /// <remarks/>
        public void getDependentCapTypeListAsync(string arg0, string arg1, CapIDModel arg2)
        {
            this.getDependentCapTypeListAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getDependentCapTypeListAsync(string arg0, string arg1, CapIDModel arg2, object userState)
        {
            if ((this.getDependentCapTypeListOperationCompleted == null))
            {
                this.getDependentCapTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDependentCapTypeListOperationCompleted);
            }
            this.InvokeAsync("getDependentCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getDependentCapTypeListOperationCompleted, userState);
        }

        private void OngetDependentCapTypeListOperationCompleted(object arg)
        {
            if ((this.getDependentCapTypeListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDependentCapTypeListCompleted(this, new getDependentCapTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://service.webservice.accela.com/", ResponseNamespace = "http://service.webservice.accela.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CapTypeModel[] getPrerequisitesCapTypeList([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute("arg1", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel[] arg1, [System.Xml.Serialization.XmlElementAttribute("arg2", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] CapIDModel arg2)
        {
            object[] results = this.Invoke("getPrerequisitesCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((CapTypeModel[])(results[0]));
        }

        /// <remarks/>
        public void getPrerequisitesCapTypeListAsync(string arg0, CapIDModel[] arg1, CapIDModel arg2)
        {
            this.getPrerequisitesCapTypeListAsync(arg0, arg1, arg2, null);
        }

        /// <remarks/>
        public void getPrerequisitesCapTypeListAsync(string arg0, CapIDModel[] arg1, CapIDModel arg2, object userState)
        {
            if ((this.getPrerequisitesCapTypeListOperationCompleted == null))
            {
                this.getPrerequisitesCapTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrerequisitesCapTypeListOperationCompleted);
            }
            this.InvokeAsync("getPrerequisitesCapTypeList", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getPrerequisitesCapTypeListOperationCompleted, userState);
        }

        private void OngetPrerequisitesCapTypeListOperationCompleted(object arg)
        {
            if ((this.getPrerequisitesCapTypeListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrerequisitesCapTypeListCompleted(this, new getPrerequisitesCapTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeDetailListByModuleCompletedEventHandler(object sender, getCapTypeDetailListByModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeDetailListByModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeDetailListByModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeDetailModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeDetailModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void isMatchTheFilterCompletedEventHandler(object sender, isMatchTheFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isMatchTheFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isMatchTheFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeList4ACAByModuleCompletedEventHandler(object sender, getCapTypeList4ACAByModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeList4ACAByModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeList4ACAByModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeListByFilterCompletedEventHandler(object sender, getCapTypeListByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeListByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeListByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeListCompletedEventHandler(object sender, getCapTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeByPKCompletedEventHandler(object sender, getCapTypeByPKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeByPKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeByPKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeDetailModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeDetailModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeListByModuleCompletedEventHandler(object sender, getCapTypeListByModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeListByModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeListByModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeByCapIDCompletedEventHandler(object sender, getCapTypeByCapIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeByCapIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeByCapIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getFilteredCapTypesByPublicUserCompletedEventHandler(object sender, getFilteredCapTypesByPublicUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilteredCapTypesByPublicUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilteredCapTypesByPublicUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeList4ACAPageFlowGroupCompletedEventHandler(object sender, getCapTypeList4ACAPageFlowGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeList4ACAPageFlowGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeList4ACAPageFlowGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeByCapIDForShoppingCartCompletedEventHandler(object sender, getCapTypeByCapIDForShoppingCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeByCapIDForShoppingCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeByCapIDForShoppingCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getCapTypeList4ACACompletedEventHandler(object sender, getCapTypeList4ACACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeList4ACACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapTypeList4ACACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CapTypeModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getCapTypeListByPKsCompletedEventHandler(object sender, getCapTypeListByPKsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeListByPKsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCapTypeListByPKsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CapTypeModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCapTypeByAliasCompletedEventHandler(object sender, getCapTypeByAliasCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapTypeByAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCapTypeByAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CapTypeDetailModel Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeDetailModel)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDependentCapTypeListCompletedEventHandler(object sender, getDependentCapTypeListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDependentCapTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDependentCapTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CapTypeModel[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CapTypeModel[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPrerequisitesCapTypeListCompletedEventHandler(object sender, getPrerequisitesCapTypeListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrerequisitesCapTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPrerequisitesCapTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

}
